rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for dispensary staff/owner roles
    function isDispensaryStaffOrOwner() {
      return request.auth.token.role == 'DispensaryOwner' || request.auth.token.role == 'DispensaryStaff';
    }
    
    // Helper function to check for Super Admin role
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }

    // Users Collection
    // Users can read/update their own profile.
    // Super Admins can read/write any user.
    // Dispensary Owners can read/write users associated with their dispensary.
    match /users/{userId} {
      allow read: if request.auth.uid == userId 
                  || isSuperAdmin() 
                  || (isDispensaryStaffOrOwner() && resource.data.dispensaryId == request.auth.token.dispensaryId);
      allow write: if request.auth.uid == userId 
                   || isSuperAdmin()
                   || (isDispensaryStaffOrOwner() && request.resource.data.dispensaryId == request.auth.token.dispensaryId);
    }

    // Dispensaries Collection
    // Public can read approved dispensaries.
    // Owners can update their own dispensary.
    // Super Admins can read/write any dispensary.
    match /dispensaries/{dispensaryId} {
      allow get: if resource.data.status == 'Approved' || request.auth != null;
      allow list: if request.auth != null; // Allow listing for logged-in users to browse, frontend handles filtering by status
      allow update: if isSuperAdmin() || (isDispensaryStaffOrOwner() && dispensaryId == request.auth.token.dispensaryId);
      allow create, delete: if isSuperAdmin();
    }
    
    // Dispensary Types Collection
    // Publicly readable. Only Super Admins can write.
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    // Products Collection
    // Public can read products from approved dispensaries.
    // Owners can manage products for their own dispensary.
    match /products/{productId} {
      allow get: if resource.data.isAvailableForPool == true || request.auth.token.dispensaryId == resource.data.dispensaryId || isSuperAdmin();
      // THIS IS THE CRITICAL FIX:
      // Allow a user to query the products collection IF their token has a dispensaryId.
      // The frontend query is already filtering for the specific ID, so this rule
      // just needs to grant the basic permission to perform the query.
      allow list: if request.auth.token.dispensaryId != null || isSuperAdmin();
      allow create, update, delete: if isSuperAdmin() || (isDispensaryStaffOrOwner() && request.resource.data.dispensaryId == request.auth.token.dispensaryId);
    }

    // Product Requests Collection
    // Only involved parties or Super Admins can access.
    match /productRequests/{requestId} {
      allow read, write: if isSuperAdmin() 
                      || (isDispensaryStaffOrOwner() && (request.auth.token.dispensaryId == resource.data.productOwnerDispensaryId || request.auth.token.dispensaryId == resource.data.requesterDispensaryId));
    }

    // Pool Issues Collection
    // Only involved parties or Super Admins can access.
    match /poolIssues/{issueId} {
      allow read, write: if isSuperAdmin()
                      || (isDispensaryStaffOrOwner() && (request.auth.token.dispensaryId == resource.data.reporterDispensaryId || request.auth.token.dispensaryId == resource.data.reportedDispensaryId));
    }
    
    // AI Interaction Logs
    // Only the user themselves or a Super Admin can read/write their logs.
    match /aiInteractionsLog/{logId} {
        allow read, create: if request.auth.uid == request.resource.data.userId || isSuperAdmin();
        allow write, delete: if isSuperAdmin();
    }
    
    // Credit Packages
    // Publicly readable, only Super Admins can manage.
    match /creditPackages/{packageId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    // Sticker Sets
    // Public can read sets marked as public.
    // Creator can manage their own sets.
    match /stickersets/{setId} {
      allow get: if resource.data.isPublic == true;
      allow list: if true;
      allow create: if request.auth.uid == request.resource.data.creatorUid;
      allow update, delete: if request.auth.uid == resource.data.creatorUid || isSuperAdmin();
    }
  }
}
