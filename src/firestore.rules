
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }
    function isDispensaryOwnerOrStaff() {
      return request.auth.token.role == 'DispensaryOwner' || request.auth.token.role == 'DispensaryStaff';
    }
    function isOwnerOfDoc(doc) {
      return request.auth.uid == doc.creatorUid;
    }
    function ownsDispensary(dispensaryId) {
      return request.auth.token.dispensaryId == dispensaryId;
    }
    
    // PUBLIC ACCESS RULES
    // Anyone can read approved dispensaries and their types
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    match /dispensaries/{dispensaryId} {
      allow read: if resource.data.status == 'Approved';
      // Signup is a create op
      allow create: if true;
      // Writes must be from an owner of that specific dispensary or a super admin
      allow update, delete: if isSuperAdmin() || ownsDispensary(dispensaryId);
    }
    match /products/{productId} {
      // Anyone can read any product (for public store pages)
      allow read: if true;
      allow list: if request.auth.token.dispensaryId != null; // For dispensary owner queries
      // Only the owning dispensary can write products
      allow create, update, delete: if ownsDispensary(request.resource.data.dispensaryId);
    }
    
    // AUTHENTICATED USER RULES
    match /users/{userId} {
      // A user can read/update their own document.
      allow read, update: if request.auth.uid == userId;
      // Super Admins can read/write any user. Dispensary owners can manage their staff.
      allow read, write: if isSuperAdmin() || (isDispensaryOwner() && ownsDispensary(resource.data.dispensaryId));
      allow create: if request.auth != null; // Any auth user can be added, owner/admin can create too
    }

    match /stickersets/{setId} {
      allow read: if true; // Publicly readable for featured sets
      allow list: if request.query.where.creatorUid == request.auth.uid; // Allow user to query their own sets
      allow create: if request.auth != null; // Any auth user can create
      allow update, delete: if isOwnerOfDoc(resource.data) || isSuperAdmin(); // Only creator or admin can modify
    }
    
    // PRODUCT SHARING POOL RULES
    match /productRequests/{requestId} {
      // The requester OR the owner of the product can read the request.
      // Super Admins can read any request.
      allow read, update: if isSuperAdmin() || 
                           ownsDispensary(resource.data.requesterDispensaryId) || 
                           ownsDispensary(resource.data.productOwnerDispensaryId);
      allow create: if ownsDispensary(request.resource.data.requesterDispensaryId); // Only the requester can create.
    }

    // ADMIN-ONLY RULES
    match /creditPackages/{packageId} {
      allow read: if true; // Public can see packages to buy
      allow write: if isSuperAdmin();
    }
     match /poolIssues/{issueId} {
      allow read, write: if isSuperAdmin();
    }
    match /aiInteractionsLog/{logId} {
      // User can read their own logs. Dispensary owner can read logs for their dispensary.
      allow read: if isSuperAdmin() || 
                    request.auth.uid == resource.data.userId || 
                    (isDispensaryOwner() && ownsDispensary(resource.data.dispensaryId));
      allow create: if request.auth.uid == request.resource.data.userId; // Only the user can log their own interactions
    }

    // Allow read access for seeded data (if applicable)
     match /my-seeded-collection/{docId} {
      allow read: if true;
      allow write: if isSuperAdmin(); // Or other trusted role
    }

     match /importsHistory/{docId} {
      allow read, write: if isSuperAdmin();
    }

  }
}
