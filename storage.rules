
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to check if the user is a Super Admin
    function isSuperAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    // Helper function to check if a user is an admin of a specific dispensary
    function isDispensaryAdmin(dispensaryId) {
      return request.auth != null && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == dispensaryId;
    }

    // Public assets (like dispensary type icons/images) can be read by anyone.
    match /dispensary-type-assets/{allPaths=**} {
      allow read: if true;
      allow write: if isSuperAdmin(); // Only super admins can upload these.
    }

    // Product images can be read by anyone.
    // Only an authenticated user who is part of the dispensary can write to that dispensary's product image folder.
    match /products/{dispensaryId}/{allPaths=**} {
      allow read: if true;
      allow write: if isDispensaryAdmin(dispensaryId) || isSuperAdmin();
    }
    
    // Lab reports should be more restricted.
    // Only an authenticated user who is part of the dispensary can write.
    // For reads, you might want to restrict this further if they are sensitive,
    // but for now, we'll allow any authenticated user to read them if they have the link.
    match /lab-reports/{dispensaryId}/{allPaths=**} {
        allow read: if request.auth != null;
        allow write: if isDispensaryAdmin(dispensaryId) || isSuperAdmin();
    }

    // Sticker set assets can be read publicly if the corresponding Firestore doc is public.
    // Only the creator can write to their own folder.
    match /stickersets/{creatorId}/{allPaths=**} {
        allow read: if true; // Simple rule: if you have the URL, you can see it.
        allow write: if request.auth.uid == creatorId || isSuperAdmin();
    }

    // Default deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
