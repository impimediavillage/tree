rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to check for Super Admin role from auth token
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }
    
    // Global rule: Super Admins can read/write anything.
    match /{allPaths=**} {
      allow read, write: if isSuperAdmin();
    }

    // Lab Reports: Allow users to upload their lab reports.
    // The path should include the user's UID for security.
    match /lab-reports/{userId}/{fileName} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Product Images: Allow authenticated users to upload product images.
    // The path should include the user's UID.
    match /products/{userId}/{fileName} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Dispensary Type Assets: Icons and images for types should be publicly readable.
    // Writing should be restricted to Super Admins (covered by the global rule).
    match /dispensary-type-assets/{path=**} {
        allow read: if true;
    }

    // Sticker Sets: Allow users to create their own sticker sets.
    // Reading is public, writing is restricted to the creator.
    match /stickersets/{userId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Default deny: Disallow read/write on any other paths.
    // This is implicitly handled by not having a matching rule,
    // but can be made explicit for clarity if desired.
  }
}
