
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
  
    // Helper function to check if a user exists and get their data
    function getUser(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    // Helper function to check if user is owner/staff of a specific dispensary
    function isDispensaryMember(userId, dispensaryId) {
        let userDoc = getUser(userId);
        return userDoc.dispensaryId == dispensaryId &&
               (userDoc.role == 'DispensaryOwner' || userDoc.role == 'DispensaryStaff');
    }

    // Helper function to check if user is a Super Admin
    function isSuperAdmin(userId) {
        return getUser(userId).role == 'Super Admin';
    }

    // Public Assets (e.g., dispensary type icons) are publicly readable
    match /dispensary-type-assets/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && isSuperAdmin(request.auth.uid);
    }
    
    // Product Images
    // Path structure: /products/{ownerUid}/{imageName}
    match /products/{ownerUid}/{imageName} {
      // Anyone can read product images
      allow read: if true;
      
      // Only the user specified in the path can write (upload/update/delete)
      // Additional check could be to verify they own a dispensary
      allow write: if request.auth != null && request.auth.uid == ownerUid;
    }
    
    // Lab Reports
    // Path structure: /lab-reports/{ownerUid}/{reportName}
    match /lab-reports/{ownerUid}/{reportName} {
      // Only the uploader (owner) and admins can read/write lab reports
      allow read, write: if request.auth != null && (request.auth.uid == ownerUid || isSuperAdmin(request.auth.uid));
    }

    // Sticker Sets
    // Path structure: /stickersets/{creatorUid}/{assetName}
    match /stickersets/{creatorUid}/{assetName} {
        // Publicly readable
        allow read: if true;
        // Only the creator can write
        allow write: if request.auth != null && request.auth.uid == creatorUid;
    }

    // Default deny all other paths
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
