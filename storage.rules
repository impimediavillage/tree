rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
  
    // Helper function to get user's role from their Firestore profile
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }
    
    // Helper function to check for Super Admin role
    function isSuperAdmin(userId) {
      return getUserRole(userId) == 'Super Admin';
    }

    // Public assets (e.g., dispensary type icons/images) can be read by anyone
    match /dispensary-type-assets/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && isSuperAdmin(request.auth.uid);
    }

    // Product images can be read by anyone
    // They can only be written by an authenticated user to their own path
    match /products/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Lab reports are private to the user who uploaded them, or super admin
    match /lab-reports/{userId}/{allPaths=**} {
       allow read, write: if request.auth != null && (request.auth.uid == userId || isSuperAdmin(request.auth.uid));
    }

    // Sticker sets can be read by anyone if they are public
    // They can only be written by the user who created them
    match /stickersets/{userId}/{allPaths=**} {
        allow read: if true; // Or add logic for public/private if needed
        allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Default deny all other paths
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
