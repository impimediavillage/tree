rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // HELPER FUNCTIONS
    function isSuperAdmin() {
      // Check if the user has the 'Super Admin' role in their Firestore user document.
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    function isOwner(userId) {
      // Check if the currently authenticated user's ID matches the provided userId.
      return request.auth.uid == userId;
    }
    
    // GENERAL RULE: By default, allow public read access for all files.
    // This is necessary so that images can be displayed in the app to any visitor.
    // Writes are denied unless explicitly allowed by a more specific rule below.
    match /{allPaths=**} {
      allow read: if true;
      allow write: if false; 
    }

    // USER-SPECIFIC WRITES: Allow users to write only to folders named with their own UID.
    // This is the core security rule for uploads.
    // e.g., /products/{userId}/{imageName}, /lab-reports/{userId}/{reportName}
    match /{path}/{userId}/{allSubPaths=**} {
      // Users can only write to their own directory. Admins can write anywhere.
      allow write: if isOwner(userId) || isSuperAdmin();

      // Basic validation: ensure uploaded files are not excessively large (e.g., max 5MB).
      // This helps prevent storage abuse.
      allow create: if (isOwner(userId) || isSuperAdmin()) && request.resource.size < 5 * 1024 * 1024;
    }
    
    // ASSET-SPECIFIC WRITES: For assets that may not be tied to a specific user UID path,
    // like dispensary type icons, only allow Super Admins to write.
    match /dispensary-type-assets/{allSubPaths=**} {
      allow write: if isSuperAdmin();
    }
  }
}
