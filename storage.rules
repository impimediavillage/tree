rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to get user data from Firestore
    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    // Anyone can read from the 'dispensary-type-assets' folder. These are public icons/images.
    match /dispensary-type-assets/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && getUserData(request.auth.uid).role == 'Super Admin';
    }

    // Rules for product images
    match /products/{userId}/{allPaths=**} {
      // Anyone can read product images.
      allow read: if true;
      // Only the authenticated user who owns the folder can write images to it.
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Rules for lab reports
    match /lab-reports/{userId}/{allPaths=**} {
      // Only the user who uploaded the report can read or write it.
      // This path is not publicly accessible.
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Rules for sticker sets
    match /stickersets/{userId}/{allPaths=**} {
      // Anyone can read the final sticker assets.
      allow read: if true;
      // Only the authenticated creator can write to their folder.
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Default deny all other access to prevent unauthorized uploads/downloads
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
