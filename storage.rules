
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
  
    // Helper function to check if a user is signed in
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to check if the user owns a specific dispensary
    function isOwnerOfDispensary(dispensaryId) {
        // Use `exists` instead of `get` for cheaper read operations in rules
        return isSignedIn() 
                && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'DispensaryOwner'
                && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == dispensaryId;
    }

    // Allow public read access to all files by default.
    // This simplifies displaying images on public pages.
    // Write access is restricted below.
    match /{allPaths=**} {
      allow read: true;
    }

    // PRODUCT IMAGES
    // User must be the owner of the dispensary to upload product images.
    // The path is structured as products/{dispensaryId}/{filename}
    match /products/{dispensaryId}/{fileName} {
      allow write: isOwnerOfDispensary(dispensaryId);
    }
    
    // DISPENSARY TYPE ASSETS
    // Only a Super Admin can upload icons and images for dispensary types.
    match /dispensary-type-assets/{folder}/{fileName} {
      allow write: isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }
    
    // LAB REPORTS
    // A user must be authenticated to upload. We can tighten this further if needed,
    // for example, by checking if they own the product the report is for.
    // For now, only authenticated users can upload.
    match /lab-reports/{userId}/{fileName} {
      allow write: request.auth.uid == userId;
    }

    // STICKER SETS
    // A user must be authenticated to upload sticker set assets.
    match /stickersets/{userId}/{fileName} {
       allow write: request.auth.uid == userId;
    }

  }
}
