rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to check if the user is authenticated.
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to get the user's ID.
    function getUid() {
      return request.auth.uid;
    }

    // Allow public read access to dispensary type assets (icons, banners).
    // This allows the public-facing UI to display these images.
    match /dispensary-type-assets/{allPaths=**} {
      allow read: if true;
      // Write access should be handled by server-side logic (e.g., Cloud Functions with admin SDK)
      // for Super Admins. We deny client-side writes for security.
      allow write: if false; 
    }

    // Product images: Publicly readable so they appear in storefronts.
    // Only the authenticated owner of the product can upload/delete.
    // The path is structured as /products/{owner_uid}/{timestamped_filename}
    match /products/{userId}/{fileName} {
      allow read: if true;
      allow write: if isAuthenticated() && userId == getUid();
    }

    // Lab reports: Similar to products, but kept in a separate folder.
    match /lab-reports/{userId}/{fileName} {
      allow read: if true; // Assuming lab reports are okay to be public if the URL is known
      allow write: if isAuthenticated() && userId == getUid();
    }

    // Sticker sets: Publicly readable as they can be featured.
    // Only the creator can write.
    // The path is structured as /stickersets/{creator_uid}/{timestamped_filename}
    match /stickersets/{userId}/{fileName} {
      allow read: if true;
      allow write: if isAuthenticated() && userId == getUid();
    }

    // Deny all other access to prevent unauthorized reads/writes.
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
