
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the requesting user is a Super Admin
    function isSuperAdmin() {
      // Ensure request.auth is not null before trying to access its properties
      return request.auth != null &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    // Helper function to check if the requesting user is a Dispensary Owner of a specific dispensary
    function isDispensaryOwner(dispensaryId) {
      return request.auth != null &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'DispensaryOwner' &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == dispensaryId;
    }
    
    // Helper function to check if a dispensary is approved (for public reads of products)
    function isDispensaryApproved(dispensaryId) {
      let dispensary = get(/databases/$(database)/documents/dispensaries/$(dispensaryId)).data;
      return dispensary.status == 'Approved';
    }

    // Users collection
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isSuperAdmin());
      allow create: if request.auth != null; // Allow user creation (signup)
      allow update: if request.auth != null && (request.auth.uid == userId || isSuperAdmin());
      allow delete: if isSuperAdmin(); // Or if request.auth.uid == userId for self-delete
    }

    // Dispensaries collection
    match /dispensaries/{dispensaryId} {
      // Public read for approved dispensaries (e.g., for store pages)
      allow read: if resource.data.status == 'Approved';
      
      // Dispensary owner can read their own dispensary
      allow read: if isDispensaryOwner(dispensaryId);

      // Super Admin can read any specific dispensary document
      allow read: if isSuperAdmin();
      
      // Super Admin can list all dispensaries (crucial for the dashboard)
      allow list: if isSuperAdmin(); 

      // Allow application submission by authenticated users
      allow create: if request.auth != null;

      // Owners can update their own dispensary, Super Admins can update any
      allow update: if isDispensaryOwner(dispensaryId) || isSuperAdmin();
      
      // Only Super Admins can delete dispensaries
      allow delete: if isSuperAdmin();
    }

    // DispensaryTypes collection
    match /dispensaryTypes/{typeId} {
      allow read: if request.auth != null; // Authenticated users can read/list types
      allow list: if request.auth != null;
      allow create, update, delete: if isSuperAdmin();
    }
    
    // dispensaryTypeProductCategories collection
    match /dispensaryTypeProductCategories/{docId} {
        allow read: if request.auth != null;
        allow list: if request.auth != null;
        allow create, update, delete: if isSuperAdmin();
    }

    // Products collection
    match /products/{productId} {
      allow read: if isDispensaryApproved(resource.data.dispensaryId); // Public read if dispensary is approved
      allow list: if request.auth != null; // Allows listing for pools, etc.
      // Only allow create/update/delete if the user is the owner of the dispensary associated with the product
      // or if the user is a Super Admin.
      allow create: if (request.auth != null && isDispensaryOwner(request.resource.data.dispensaryId)) || isSuperAdmin();
      allow update, delete: if (request.auth != null && isDispensaryOwner(resource.data.dispensaryId)) || isSuperAdmin();
    }

    // ProductRequests collection
    match /productRequests/{requestId} {
      // Requester, Product Owner, or Super Admin can read/update
      allow read, update: if request.auth != null && 
                             (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == resource.data.requesterDispensaryId ||
                              isDispensaryOwner(resource.data.productOwnerDispensaryId) ||
                              isSuperAdmin());
      allow create: if request.auth != null; // Authenticated users can create requests
      allow delete: if isSuperAdmin();
    }

    // PoolIssues collection
    match /poolIssues/{issueId} {
      allow read, update: if isSuperAdmin();
      // Allow creation if the reporter is an owner of their dispensary
      allow create: if request.auth != null && isDispensaryOwner(request.resource.data.reporterDispensaryId);
    }

    // CreditPackages collection
    match /creditPackages/{packageId} {
      allow read: if resource.data.isActive == true || isSuperAdmin();
      allow list: if request.auth != null;
      allow create, update, delete: if isSuperAdmin();
    }

    // aiInteractionsLog collection
    match /aiInteractionsLog/{logId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.userId || isSuperAdmin());
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Notifications collection
    match /notifications/{notificationId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.recipientUid;
      allow create: if request.auth != null; // Typically created by backend functions
    }

  }
}
