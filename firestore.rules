
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isSuperAdmin() {
      return request.auth != null && request.auth.token.role == 'Super Admin';
    }

    // Helper function to check if a user is the owner of a document
    function isOwner(docData) {
      return request.auth != null && request.auth.uid == docData.ownerId;
    }
    
    // Helper function to check if user is staff of a dispensary
    function isStaff(dispensaryId) {
        return request.auth != null && request.auth.token.dispensaryId == dispensaryId;
    }

    // Helper function to check if a user is an owner of a dispensary
    function isDispensaryOwner(dispensaryId) {
        return request.auth != null && request.auth.token.dispensaryId == dispensaryId && request.auth.token.role == 'DispensaryOwner';
    }
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
        return request.auth != null;
    }

    // Rules for dispensary types
    match /dispensaryTypes/{typeId} {
      allow read: if true; // Public can read all dispensary types
      allow write: if isSuperAdmin(); // Only super admins can create/update/delete types
    }

    // Rules for product categories tied to dispensary types
    match /dispensaryTypeProductCategories/{docId} {
        allow read: if isAuthenticated(); // All logged-in users can read category structures
        allow write: if isSuperAdmin(); // Only super admins can modify these structures
    }

    // Rules for dispensaries
    match /dispensaries/{dispensaryId} {
      // Anyone can read an approved dispensary profile
      allow read: if resource.data.status == 'Approved' || isOwner(resource.data) || isSuperAdmin();
      
      // Only the owner can update their own dispensary profile
      allow update: if isOwner(resource.data) || isSuperAdmin();
      
      // Anyone can create a dispensary (application)
      allow create: if true;
      
      // Only super admins can delete a dispensary
      allow delete: if isSuperAdmin();
    }
    
    // Rules for products
    match /products/{productId} {
      // Anyone can read products from an approved dispensary
      allow read: if get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved';
      
      // Only the owner of the dispensary can create/update/delete products
      allow write: if isDispensaryOwner(resource.data.dispensaryId) || isSuperAdmin();
    }

    // Rules for users
    match /users/{userId} {
      // Users can only read/write their own data
      allow read, update, delete: if request.auth.uid == userId || isSuperAdmin();
      
      // Any authenticated user can create their own user document
      allow create: if request.auth.uid == userId;
    }
    
    // Rules for product requests
    match /productRequests/{requestId} {
        allow read, update: if isDispensaryOwner(resource.data.productOwnerDispensaryId) || isDispensaryOwner(resource.data.requesterDispensaryId) || isSuperAdmin();
        allow create: if isDispensaryOwner(request.resource.data.requesterDispensaryId);
        allow delete: if isSuperAdmin();
    }
    
    // Rules for pool issues
    match /poolIssues/{issueId} {
        allow read, update, create: if isAuthenticated(); // Allow any authenticated user to create, and relevant parties to read/update
        allow delete: if isSuperAdmin();
    }
    
    // Rules for notifications
    match /notifications/{notificationId} {
        allow read, update, delete: if request.auth.uid == resource.data.recipientUid || isSuperAdmin();
        allow create: if isAuthenticated(); // Functions create notifications
    }
    
    // Rules for credit packages
    match /creditPackages/{packageId} {
        allow read: if true; // Public can read packages
        allow write: if isSuperAdmin(); // Only super admin can manage packages
    }
    
    // Rules for AI interaction logs
    match /aiInteractionsLog/{logId} {
        allow read: if request.auth.uid == resource.data.userId || isSuperAdmin() || isDispensaryOwner(resource.data.dispensaryId);
        allow create: if isAuthenticated(); // Functions or client can create logs for the logged-in user
    }
    
    // Rules for sticker sets
    match /stickersets/{stickerId} {
        allow read: if resource.data.isPublic == true;
        allow create: if request.auth.uid == request.resource.data.creatorUid;
        allow update, delete: if request.auth.uid == resource.data.creatorUid || isSuperAdmin();
    }

    // Rules for my-seeded-collection (cannabis data)
    match /my-seeded-collection/{strainId} {
      allow read: if isAuthenticated();
      allow write: if isSuperAdmin(); // Only admins can modify seed data
    }
    
    // Rules for scraper logs and history
    match /scrapeLogs/{logId} {
        allow read, write: if isSuperAdmin();
    }
    match /importsHistory/{historyId} {
        allow read, write: if isSuperAdmin();
    }

    // JustBrand catalog data
    match /justbrand_catalog/{doc=**} {
        allow read, write: if isSuperAdmin();
    }
  }
}
