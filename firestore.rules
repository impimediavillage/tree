
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isSuperAdmin() {
      return request.auth != null && request.auth.token.role == 'Super Admin';
    }
    
    function isDispensaryOwner() {
      return request.auth != null && request.auth.token.role == 'DispensaryOwner';
    }
    
    function isOwnerOfDispensary(dispensaryId) {
      return isDispensaryOwner() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == dispensaryId;
    }

    function isDispensaryStaff(dispensaryId) {
        return request.auth != null && request.auth.token.role == 'DispensaryStaff' && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == dispensaryId;
    }
    
    function isDispensaryOwnerOrStaff(dispensaryId) {
        return isOwnerOfDispensary(dispensaryId) || isDispensaryStaff(dispensaryId);
    }
    
    function isAnyAuthenticatedUser() {
        return request.auth != null;
    }

    match /users/{userId} {
      allow read: if isSuperAdmin() || request.auth.uid == userId;
      allow create: if true; // Allows signup
      allow update: if isSuperAdmin() || request.auth.uid == userId;
      allow delete: if isSuperAdmin();
    }
    
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow create, update, delete: if isSuperAdmin();
    }
    
    match /dispensaryTypeProductCategories/{docId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }

    match /dispensaries/{dispensaryId} {
      allow read: if true; // Public can read basic info
      allow create: if isAnyAuthenticatedUser(); // Any auth user can apply
      allow update, delete: if isSuperAdmin() || isOwnerOfDispensary(dispensaryId);
    }
    
    match /products/{productId} {
      allow read: if true; // Publicly readable
      allow create: if isDispensaryOwnerOrStaff(request.resource.data.dispensaryId);
      allow update: if isDispensaryOwnerOrStaff(resource.data.dispensaryId);
      allow delete: if isSuperAdmin() || isOwnerOfDispensary(resource.data.dispensaryId);
    }

    match /productRequests/{requestId} {
        allow read: if isDispensaryOwnerOrStaff(resource.data.productOwnerDispensaryId) || isDispensaryOwnerOrStaff(resource.data.requesterDispensaryId);
        allow create: if isDispensaryOwnerOrStaff(request.resource.data.requesterDispensaryId);
        allow update: if isDispensaryOwnerOrStaff(resource.data.productOwnerDispensaryId) || isDispensaryOwnerOrStaff(resource.data.requesterDispensaryId);
        allow delete: if isSuperAdmin();
    }

    match /poolIssues/{issueId} {
        allow read, update: if isSuperAdmin();
        allow create: if isDispensaryOwnerOrStaff(request.resource.data.reporterDispensaryId);
        allow delete: if isSuperAdmin();
    }

    match /creditPackages/{packageId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }

    match /aiInteractionsLog/{logId} {
        allow read: if isSuperAdmin() || request.auth.uid == resource.data.userId;
        allow create: if request.auth.uid == request.resource.data.userId;
    }
    
    match /notifications/{notificationId} {
        allow read, update: if request.auth.uid == resource.data.recipientUid;
        allow create: if true; // Created by backend functions
    }
    
    match /my-seeded-collection/{strainId} {
      allow read: if request.auth != null; // Allow any authenticated user to read
      allow write: if isSuperAdmin(); // Only admins can write
    }

    match /scrapeLogs/{logId} {
        allow read: if isSuperAdmin();
        allow write: if true; // Functions can write
    }
    
     match /importsHistory/{historyId} {
        allow read: if isSuperAdmin();
        allow write: if true; // Functions can write
    }

    match /justbrand_catalog/{categoryId} {
        allow read: if isSuperAdmin();
        allow write: if true; // Functions can write

        match /products/{productId} {
            allow read: if isSuperAdmin();
            allow write: if true; // Functions can write
        }
    }
    
     match /stickersets/{stickerId} {
        allow read: if resource.data.isPublic == true || request.auth.uid == resource.data.creatorUid;
        allow create: if isAnyAuthenticatedUser();
        allow update, delete: if request.auth.uid == resource.data.creatorUid;
    }
  }
}
