rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // ======== HELPER FUNCTIONS ========
    
    // Checks if the user is a Super Admin based on their custom auth token claim.
    function isSuperAdmin() {
      return request.auth != null && request.auth.token.role == 'Super Admin';
    }
    
    // Checks if the user owns the specified dispensary based on their custom auth token claim.
    // This is the primary way to verify ownership for product/dispensary management.
    function isDispensaryOwner(dispensaryId) {
      return request.auth != null && request.auth.token.dispensaryId == dispensaryId;
    }
    
    // Checks if the user is trying to access their own user document.
    function isSelf(userId) {
      return request.auth != null && request.auth.uid == userId;
    }


    // ======== COLLECTION RULES ========

    // --- Users Collection ---
    match /users/{userId} {
      // A user can read/write their own document. A Super Admin can do anything.
      allow read, write: if isSelf(userId) || isSuperAdmin();
      
      // Any authenticated user can create their own user document during sign-up.
      allow create: if request.auth != null;
    }

    // --- Dispensaries Collection ---
    match /dispensaries/{dispensaryId} {
      // Public can read approved dispensaries.
      // An owner can read their own dispensary regardless of status.
      // A Super Admin can read any dispensary.
      allow read: if resource.data.status == 'Approved'
                   || isDispensaryOwner(dispensaryId)
                   || isSuperAdmin();

      // Anyone can create a dispensary application.
      allow create: if true;
      
      // Only the owner of the dispensary or a Super Admin can update it.
      allow update: if isDispensaryOwner(dispensaryId) || isSuperAdmin();
      
      // Only a Super Admin can delete a dispensary.
      allow delete: if isSuperAdmin();
    }
    
    // --- Products Collection (within a dispensary) ---
    match /products/{productId} {
        // Public can read any product document.
        allow read: if true;

        // An authenticated user can create a product IF the dispensaryId in the new product
        // matches the dispensaryId in their auth token. Super Admin can also create.
        allow create: if (request.auth != null && request.resource.data.dispensaryId == request.auth.token.dispensaryId)
                       || isSuperAdmin();
                       
        // An owner can update a product IF the dispensaryId on the product being updated
        // matches their auth token's dispensaryId. Super Admin can also update.
        allow update: if (request.auth != null && get(/databases/$(database)/documents/products/$(productId)).data.dispensaryId == request.auth.token.dispensaryId)
                       || isSuperAdmin();
                       
        // Similar logic for delete.
        allow delete: if (request.auth != null && get(/databases/$(database)/documents/products/$(productId)).data.dispensaryId == request.auth.token.dispensaryId)
                       || isSuperAdmin();
    }
    
    // --- Dispensary Types Collection ---
    // This data is considered public configuration.
    match /dispensaryTypes/{typeId} {
        allow read: if true;
        // Only Super Admins can modify the available wellness types.
        allow write: if isSuperAdmin();
    }
    
    // --- Dispensary Type Product Categories Collection ---
    // This is also public configuration data needed by the app.
    match /dispensaryTypeProductCategories/{docId} {
        allow read: if true;
        // Only Super Admins can modify the category structures.
        allow write: if isSuperAdmin();
    }

    // --- All other collections ---
    // Use wildcard to secure other collections.
    match /{document=**} {
      // Default to deny all reads and writes unless explicitly allowed above.
      // Super Admins, however, get blanket access for management.
      allow read, write: if isSuperAdmin();
    }
  }
}