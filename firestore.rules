
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for Super Admin role from auth token claims
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }

    // Helper function to check for any authenticated user
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to check if the user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Helper function to check if a user is a staff member or owner of a specific dispensary
    function isDispensaryMember(dispensaryId) {
      return request.auth.token.dispensaryId == dispensaryId;
    }

    // Collection: users
    match /users/{userId} {
      // Super Admins can read/write any user document
      // Users can read/write their OWN document
      allow read, write: if isSuperAdmin() || isOwner(userId);
      // All authenticated users can create their own user document upon signup
      allow create: if isSignedIn();
    }

    // Collection: dispensaries
    match /dispensaries/{dispensaryId} {
      // Allow public read for approved dispensaries
      allow get: if resource.data.status == 'Approved';
      // Allow Super Admins to read/write all
      // Allow the dispensary owner (identified by ownerId field) to read/write their own document
      allow read, write: if isSuperAdmin() || (isSignedIn() && resource.data.ownerId == request.auth.uid);
      // Allow any signed-in user to create a dispensary application
      allow create: if isSignedIn();
      
      // Allow listing of approved dispensaries for public users
      allow list: if resource.data.status == 'Approved';
      
      // Subcollection: products within a dispensary
      match /products/{productId} {
        // Allow public read for any product (assuming parent dispensary is checked for approval on client)
        allow get, list: if true;
        // Allow Super Admin or the owner of the dispensary to manage products
        allow write, create, delete: if isSuperAdmin() || isDispensaryMember(dispensaryId);
      }
    }
    
    // Collection: dispensaryTypes (Publicly readable)
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      // Only Super Admins can create, update, or delete types
      allow write: if isSuperAdmin();
    }
    
    // Collection: dispensaryTypeProductCategories (Internal config)
    match /dispensaryTypeProductCategories/{docId} {
       // Only Super Admins can manage these configurations
       allow read, write: if isSuperAdmin();
    }

    // Collection: productRequests
    match /productRequests/{requestId} {
        // Allow involved parties (requester or owner) or Super Admins to read/update
        allow read, update: if isSuperAdmin() || (isSignedIn() && (isDispensaryMember(resource.data.requesterDispensaryId) || isDispensaryMember(resource.data.productOwnerDispensaryId)));
        // Any authenticated user can create a request
        allow create: if isSignedIn();
    }
    
    // Collection: poolIssues
    match /poolIssues/{issueId} {
       // Only Super Admins can manage issues
       allow read, write: if isSuperAdmin();
       // Authenticated users can create issues
       allow create: if isSignedIn();
    }

    // Collection: creditPackages (Publicly readable)
    match /creditPackages/{packageId} {
      allow read: if true;
      // Only Super Admins can manage packages
      allow write: if isSuperAdmin();
    }
    
    // Collection: aiInteractionsLog
    match /aiInteractionsLog/{logId} {
       // Users can read their own logs
       allow read: if isSuperAdmin() || (isSignedIn() && resource.data.userId == request.auth.uid);
       // Any authenticated user can create a log entry for themselves
       allow create: if isSignedIn();
    }
    
    // Collection: notifications
    match /notifications/{notificationId} {
        // Users can read/update their own notifications
        allow read, update: if isSuperAdmin() || (isSignedIn() && resource.data.recipientUid == request.auth.uid);
        // Only backend functions should create notifications
        allow create: if false; 
    }
    
    // Collection: stickersets
    match /stickersets/{setId} {
        // Public can read if isPublic is true
        allow get: if resource.data.isPublic == true;
        // Owners and Super Admins can read regardless of public status
        allow read: if isSuperAdmin() || (isSignedIn() && resource.data.creatorUid == request.auth.uid);
        // Any authenticated user can create sticker sets
        allow create: if isSignedIn();
        // Only the owner or a Super Admin can update/delete
        allow update, delete: if isSuperAdmin() || (isSignedIn() && resource.data.creatorUid == request.auth.uid);
    }
    
    // Seeded data collections (read-only for authenticated users for now)
    match /my-seeded-collection/{strainId} {
      allow read: if isSignedIn();
      allow write: if isSuperAdmin(); // Allow admin to update image URLs etc.
    }
    
    match /justbrand_catalog/{docId} {
       allow read: if isSignedIn();
       allow write: if isSuperAdmin();
       match /products/{productId} {
         allow read: if isSignedIn();
         allow write: if isSuperAdmin();
       }
    }
    
    // Logging collections (write-only for admins for safety)
    match /scrapeLogs/{logId} {
        allow read, write: if isSuperAdmin();
    }
    match /importsHistory/{logId} {
        allow read, write: if isSuperAdmin();
    }
  }
}
