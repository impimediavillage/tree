
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user has a specific role
    function hasRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    // Helper function to check if a user is the owner of a specific dispensary
    function isOwnerOf(dispensaryId) {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == dispensaryId;
    }

    // Default Deny: No one can read/write by default
    match /{document=**} {
      allow read, write: if false;
    }

    // Users: Can read their own profile. Admins can read any.
    match /users/{userId} {
      allow read: if request.auth.uid == userId || hasRole('Super Admin');
      allow update: if request.auth.uid == userId || hasRole('Super Admin');
      // Create is handled by Cloud Functions or is public for signup
      allow create: if request.auth.uid == userId; 
    }

    // Dispensaries: Publicly readable for store listings.
    // Only Super Admins or the linked owner can update.
    match /dispensaries/{dispensaryId} {
      allow read: if true;
      allow update: if hasRole('Super Admin') || isOwnerOf(dispensaryId);
      allow create: if hasRole('Super Admin'); // Only admins can create from the backend
      allow delete: if hasRole('Super Admin');
    }

    // Dispensary Types: Publicly readable. Only Super Admins can manage.
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if hasRole('Super Admin');
    }
    
    // Dispensary Type Product Categories: Read-only for all, write for admins.
    match /dispensaryTypeProductCategories/{docId} {
      allow read: if true;
      allow write: if hasRole('Super Admin');
    }

    // Products: Publicly readable.
    // Write access for the dispensary owner or super admin.
    match /products/{productId} {
      allow read: if true;
      allow write: if hasRole('Super Admin') || isOwnerOf(resource.data.dispensaryId);
    }
    
    // Product Requests:
    // Only involved parties (requester, owner) or a super admin can read/write.
    match /productRequests/{requestId} {
      allow read, write: if hasRole('Super Admin') 
                        || isOwnerOf(resource.data.productOwnerDispensaryId) 
                        || isOwnerOf(resource.data.requesterDispensaryId);
    }
    
    // Pool Issues:
    // Only involved parties or a super admin can read/write.
    match /poolIssues/{issueId} {
       allow read, write: if hasRole('Super Admin') 
                        || isOwnerOf(resource.data.reporterDispensaryId) 
                        || isOwnerOf(resource.data.reportedDispensaryId);
    }
    
    // Credit Packages: Publicly readable. Only admins can manage.
    match /creditPackages/{packageId} {
      allow read: if true;
      allow write: if hasRole('Super Admin');
    }
    
    // Sticker Sets: Publicly readable if `isPublic` is true.
    // Owner or admin can manage.
    match /stickersets/{setId} {
      allow read: if resource.data.isPublic == true;
      allow write: if hasRole('Super Admin') || request.auth.uid == resource.data.creatorUid;
    }

    // AI Interactions Log: Only the user who made the interaction or an admin can see their logs.
    match /aiInteractionsLog/{logId} {
        allow read, write: if hasRole('Super Admin') || request.auth.uid == resource.data.userId;
    }

    // Imports History: Admin-only access for viewing scrape logs.
    match /importsHistory/{logId} {
        allow read, write: if hasRole('Super Admin');
    }
    
  }
}
