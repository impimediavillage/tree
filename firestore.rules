
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for Super Admin role from auth token claims
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }

    // Helper function to check if the user is the owner of a document
    function isOwner(docId) {
      return request.auth.uid == docId;
    }
    
    // Helper function to check if the user owns the specified dispensary
    function isDispensaryOwner(dispensaryId) {
      return request.auth.token.dispensaryId == dispensaryId;
    }

    // Users Collection
    match /users/{userId} {
      // Super Admins can read/write any user profile
      // Authenticated users can read/write their own profile
      allow read, write: if isSuperAdmin() || isOwner(userId);
    }
    
    // Dispensaries Collection
    match /dispensaries/{dispensaryId} {
      // Public can read approved dispensaries
      allow get: if resource.data.status == 'Approved';
      // Super Admins can do anything
      // Dispensary owners can read/write their own dispensary document
      allow read, write, list: if isSuperAdmin() || isDispensaryOwner(dispensaryId);
    }

    // Products Collection
    match /products/{productId} {
      // Public can read any product (for store pages)
      allow get, list: true;
      // Super Admins can do anything
      // Dispensary owners can create, update, delete products for their dispensary
      allow write: if isSuperAdmin() || isDispensaryOwner(request.resource.data.dispensaryId);
    }

    // Product Requests Collection
    match /productRequests/{requestId} {
      // Super Admins can read any request
      // Involved dispensary owners can read/write the request
      allow read, write: if isSuperAdmin() || 
                           isDispensaryOwner(resource.data.productOwnerDispensaryId) || 
                           isDispensaryOwner(resource.data.requesterDispensaryId);
    }

    // Pool Issues Collection
    match /poolIssues/{issueId} {
      // Only Super Admins can manage pool issues
      allow read, write: if isSuperAdmin();
    }
    
    // Notifications Collection
    match /notifications/{notificationId} {
      // Users can only read/write their own notifications
      allow read, write: if isOwner(resource.data.recipientUid);
    }

    // Credit Packages Collection
    match /creditPackages/{packageId} {
      // Public can read active packages
      allow get: if resource.data.isActive == true;
      // Super Admins can manage packages
      allow list, write: if isSuperAdmin();
    }
    
    // AI Interactions Log
    match /aiInteractionsLog/{logId} {
        // Users can create their own logs
        allow create: if isOwner(request.resource.data.userId);
        // Only Super Admins or the user themselves can read logs
        allow read: if isSuperAdmin() || isOwner(resource.data.userId);
    }
    
    // Dispensary Types Collection (for dynamic forms)
    match /dispensaryTypes/{typeId} {
        // Anyone can read the types
        allow get, list: true;
        // Only Super Admins can modify them
        allow write: if isSuperAdmin();
    }

    // Product Categories per Type Collection
    match /dispensaryTypeProductCategories/{docId} {
        // Anyone can read the category structures
        allow get, list: true;
        // Only Super Admins can modify them
        allow write: if isSuperAdmin();
    }

    // Sticker Sets Collection
    match /stickersets/{setId} {
      // Public can read sets marked as public
      allow get: if resource.data.isPublic == true;
      // Anyone authenticated can create
      allow create: if request.auth != null;
      // Only the creator or Super Admin can update/delete
      allow update, delete: if isSuperAdmin() || isOwner(resource.data.creatorUid);
      // Let anyone list public sticker sets
      allow list: true;
    }
    
    // Seed Data Collection (for strain lookups)
    match /my-seeded-collection/{strainId} {
        // Allow any authenticated user to read from this collection
        allow get, list: if request.auth != null;
        // Only Super Admins should be able to write/update it (e.g. from scrapers or admin tools)
        allow write: if isSuperAdmin();
    }

    // Scrape/Import History (Admin only)
    match /scrapeLogs/{logId} {
      allow read, write: if isSuperAdmin();
    }
    match /importsHistory/{historyId} {
      allow read, write: if isSuperAdmin();
    }
  }
}
