
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions to check user roles from their auth token claims.
    function isSignedIn() {
      return request.auth != null;
    }

    function isSuperAdmin() {
      return isSignedIn() && request.auth.token.role == 'Super Admin';
    }

    function isDispensaryOwner() {
      return isSignedIn() && request.auth.token.role == 'DispensaryOwner';
    }
    
    function isOwnerOfDispensary(dispensaryId) {
      return isDispensaryOwner() && request.auth.token.dispensaryId == dispensaryId;
    }
    
    // Dispensaries Collection
    match /dispensaries/{dispensaryId} {
      // Anyone can read approved dispensaries.
      allow get: if resource.data.status == 'Approved';
      // Only Super Admins and the specific owner can get a non-approved dispensary doc.
      allow get: if isSuperAdmin() || isOwnerOfDispensary(dispensaryId);
      
      // Public can list approved dispensaries. Super Admins can list all.
      allow list: if isSuperAdmin() || !isSignedIn() || isSignedIn();

      // Anyone can create a new dispensary application, as long as it's for pending approval.
      allow create: if request.resource.data.status == 'Pending Approval';
      
      // Only Super Admins or the verified owner of that specific dispensary can update.
      allow update: if isSuperAdmin() || isOwnerOfDispensary(dispensaryId);
      
      // Only Super Admins can delete.
      allow delete: if isSuperAdmin();
    }
    
    // Users Collection
    match /users/{userId} {
      // Super Admins can get any user doc. A user can get their own doc.
      allow get: if isSuperAdmin() || (isSignedIn() && request.auth.uid == userId);
      // Super Admins can list all users.
      allow list: if isSuperAdmin();
      
      // Anyone can create their own user document during sign up.
      allow create: if isSignedIn() && request.auth.uid == userId;

      // Super Admins can update any user. A user can update their own document.
      allow update: if isSuperAdmin() || (isSignedIn() && request.auth.uid == userId);
      // Only Super Admins can delete users.
      allow delete: if isSuperAdmin();
    }

    // Products Collection
    match /products/{productId} {
      // Anyone can read any product.
      allow get: if true;
      // Anyone can list products.
      allow list: if true;
      
      // Only an owner of the linked dispensary can create a product.
      allow create: if isOwnerOfDispensary(request.resource.data.dispensaryId);
      
      // Only an owner of the linked dispensary or a Super Admin can update.
      allow update: if isSuperAdmin() || isOwnerOfDispensary(resource.data.dispensaryId);
      
      // Only an owner of the linked dispensary or a Super Admin can delete.
      allow delete: if isSuperAdmin() || isOwnerOfDispensary(resource.data.dispensaryId);
    }
    
    // Dispensary Types Collection (e.g., "THC Store", "Homeopathy")
    match /dispensaryTypes/{typeId} {
      // Anyone can read and list types.
      allow read, list: if true;
      // Only Super Admins can create, update, or delete types.
      allow write: if isSuperAdmin();
    }
    
    // Credit Packages Collection
    match /creditPackages/{packageId} {
      // Anyone can read and list active packages.
      allow get, list: if true;
      // Only Super Admins can create, update, or delete packages.
      allow write: if isSuperAdmin();
    }
    
    // Product Requests Collection
    match /productRequests/{requestId} {
      // Super Admins, the requester, or the owner can read a request.
      allow get: if isSuperAdmin() || isOwnerOfDispensary(resource.data.productOwnerDispensaryId) || isOwnerOfDispensary(resource.data.requesterDispensaryId);
      // Listing is restricted to owners querying their own requests.
      allow list: if isDispensaryOwner() || isSuperAdmin();
      
      // Only a dispensary owner can create a request.
      allow create: if isOwnerOfDispensary(request.resource.data.requesterDispensaryId);
      
      // Super Admins, the requester, or the owner can update.
      allow update: if isSuperAdmin() || isOwnerOfDispensary(resource.data.productOwnerDispensaryId) || isOwnerOfDispensary(resource.data.requesterDispensaryId);
      
      // Delete access is restricted to prevent accidental data loss.
      allow delete: if isSuperAdmin();
    }
    
    // Pool Issues Collection
    match /poolIssues/{issueId} {
       // Only Super Admins and involved parties can read.
      allow get: if isSuperAdmin() || isOwnerOfDispensary(resource.data.reporterDispensaryId) || isOwnerOfDispensary(resource.data.reportedDispensaryId);
      
      // Only Super Admins should be listing all issues.
      allow list: if isSuperAdmin();
      
      // Only a dispensary owner can create an issue.
      allow create: if isOwnerOfDispensary(request.resource.data.reporterDispensaryId);
      
      // Only Super Admins can update/resolve issues.
      allow update: if isSuperAdmin();
      allow delete: if isSuperAdmin();
    }

    // Notifications for specific users
    match /notifications/{notificationId} {
      // A user can only access notifications where their UID is the recipient.
      allow read, write: if isSuperAdmin() || (isSignedIn() && resource.data.recipientUid == request.auth.uid);
      allow list: if isSuperAdmin() || isSignedIn();
    }
    
    // AI Interaction Logs
    match /aiInteractionsLog/{logId} {
      // Only the user who made the interaction or a Super Admin can read it.
      allow read: if isSuperAdmin() || (isSignedIn() && resource.data.userId == request.auth.uid);
      allow list: if isSuperAdmin() || isSignedIn(); // Allow users to list their own logs.
      // Logs are create-only from a trusted backend (Cloud Function).
      allow write: if false; 
    }
    
    // Scraper collections - admin only
    match /scrapeLogs/{logId} {
      allow read, write: if isSuperAdmin();
    }
    match /importsHistory/{historyId} {
       allow read, write: if isSuperAdmin();
    }
    match /justbrand_catalog/{docId}/{document=**} {
        allow read, write: if isSuperAdmin();
    }
    
    // Seed data - allow reads for all, writes for SuperAdmins
    match /my-seeded-collection/{seedId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }

    // Sticker sets
    match /stickersets/{setId} {
      allow get: if resource.data.isPublic == true || (isSignedIn() && resource.data.creatorUid == request.auth.uid) || isSuperAdmin();
      allow list: if true;
      allow create: if isSignedIn();
      allow update, delete: if (isSignedIn() && resource.data.creatorUid == request.auth.uid) || isSuperAdmin();
    }
    
    // Default deny all other paths
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
