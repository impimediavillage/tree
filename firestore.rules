rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to check user roles from their auth token
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isSuperAdmin() {
      return isUserAuthenticated() && request.auth.token.role == 'Super Admin';
    }

    function isDispensaryOwner() {
      return isUserAuthenticated() && request.auth.token.role == 'DispensaryOwner';
    }

    function isOwnerOfDispensary(dispensaryId) {
      return isDispensaryOwner() && request.auth.token.dispensaryId == dispensaryId;
    }

    function isLeafUser() {
        return isUserAuthenticated() && (request.auth.token.role == 'LeafUser' || request.auth.token.role == 'User');
    }
    
    // Global catch-all: Super Admins can do anything
    match /{path=**} {
      allow read, write: if isSuperAdmin();
    }
    
    // Dispensaries collection rules
    match /dispensaries/{dispensaryId} {
      // Anyone can read approved dispensaries (for public store listings)
      allow read: if resource.data.status == 'Approved';
      // Anyone can apply by creating a new dispensary document
      allow create: if true;
      // Only the assigned owner can update their own dispensary
      allow update: if isOwnerOfDispensary(dispensaryId);
      // Deletion is restricted (e.g., only by Super Admin via the global rule)
      allow delete: if false;
    }

    // Users collection rules
    match /users/{userId} {
        // Users can read and update their own document
        allow read, update: if isUserAuthenticated() && request.auth.uid == userId;
        // Anyone authenticated can create their own user document (on signup)
        allow create: if isUserAuthenticated() && request.auth.uid == userId;
        // Only Super Admins can delete users (via global rule)
        allow delete: if false; 
    }

    // Products collection rules
    match /products/{productId} {
        // Anyone can read products from approved dispensaries
        allow read: if get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved';
        // Only the owner of the dispensary can create/update/delete products for that dispensary
        allow create, update, delete: if isOwnerOfDispensary(resource.data.dispensaryId);
    }
    
    // Dispensary Types collection rules
    match /dispensaryTypes/{typeId} {
        // Anyone can read the types of dispensaries available
        allow read: if true;
        // Only Super Admins can create/update/delete types (via global rule)
        allow write: if false; 
    }
    
    // Product Requests collection rules
    match /productRequests/{requestId} {
        // Only involved parties (requester or owner) can read/update a request
        allow read, update: if isOwnerOfDispensary(resource.data.productOwnerDispensaryId) || isOwnerOfDispensary(resource.data.requesterDispensaryId);
        // Only dispensary owners can create requests
        allow create: if isDispensaryOwner();
        // Only involved parties can delete/cancel their requests
        allow delete: if isOwnerOfDispensary(resource.data.requesterDispensaryId);
    }
    
    // Pool Issues collection rules
    match /poolIssues/{issueId} {
      // Only Super Admins can read/manage issues (via global rule)
      // Only dispensary owners can create issues
      allow create: if isDispensaryOwner();
      allow read, write: if false;
    }

    // Notifications collection rules
    match /notifications/{notificationId} {
        // A user can only read/update their own notifications
        allow read, update: if isUserAuthenticated() && resource.data.recipientUid == request.auth.uid;
        // Only backend functions can create notifications
        allow create: if false;
        allow delete: if isUserAuthenticated() && resource.data.recipientUid == request.auth.uid;
    }

    // Credit Packages collection rules
    match /creditPackages/{packageId} {
        // Anyone can read active credit packages
        allow read: if resource.data.isActive == true;
        // Only super admins can write to credit packages (via global rule)
        allow write: if false;
    }

    // AI Interactions Log rules
    match /aiInteractionsLog/{logId} {
        // Users can read their own interaction logs
        allow read: if isUserAuthenticated() && resource.data.userId == request.auth.uid;
        // Only backend functions can create logs
        allow create: if false;
        allow write: if isUserAuthenticated() && resource.data.userId == request.auth.uid; // for potential updates like feedback
    }

    // Sticker Sets collection rules
    match /stickersets/{setId} {
      // Anyone can read public sticker sets
      allow read: if resource.data.isPublic == true;
      // Authenticated users can create sticker sets
      allow create: if isUserAuthenticated();
      // Only the creator of the sticker set can update or delete it
      allow update, delete: if isUserAuthenticated() && resource.data.creatorUid == request.auth.uid;
    }
  }
}
