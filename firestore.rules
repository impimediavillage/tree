
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is a Super Admin
    function isSuperAdmin(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role == 'Super Admin';
    }

    // Helper function to check if a user is the owner of a specific dispensary
    function isDispensaryOwner(userId, dispensaryId) {
      let user = get(/databases/$(database)/documents/users/$(userId)).data;
      return user.role == 'DispensaryOwner' && user.dispensaryId == dispensaryId;
    }

    // Helper function to check if a user is staff of a specific dispensary
    function isDispensaryStaff(userId, dispensaryId) {
       let user = get(/databases/$(database)/documents/users/$(userId)).data;
       return user.role == 'DispensaryStaff' && user.dispensaryId == dispensaryId;
    }

    // Helper function to check if a user is owner or staff of a dispensary
    function isOwnerOrStaff(userId, dispensaryId) {
      return isDispensaryOwner(userId, dispensaryId) || isDispensaryStaff(userId, dispensaryId);
    }
    
    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }
    
    // === Publicly Readable Collections ===
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin(request.auth.uid);
    }

    match /creditPackages/{packageId} {
      allow read: if true;
      allow write: if isSuperAdmin(request.auth.uid);
    }
    
    // Public store pages are readable
    match /dispensaries/{dispensaryId} {
      // Allow public read only for 'Approved' dispensaries
      allow read: if resource.data.status == 'Approved';
      // Allow create for any signed-in user (for applications)
      allow create: if isSignedIn();
      // Allow update only by Super Admins
      allow update, delete: if isSuperAdmin(request.auth.uid);
    }

    match /products/{productId} {
      // Allow public read of all products
      allow read: if true;
      // Allow create/update/delete only by owner/staff of the linked dispensary
      allow create, update, delete: if isOwnerOrStaff(request.auth.uid, request.resource.data.dispensaryId);
    }

    // === User-Specific Rules ===
    match /users/{userId} {
      // A user can read/update their own document
      allow read, update: if request.auth.uid == userId;
      // Super Admins can read/update any user document
      allow read, update: if isSuperAdmin(request.auth.uid);
      // Dispensary owners can read/update users linked to their dispensary
      allow read, update: if isDispensaryOwner(request.auth.uid, resource.data.dispensaryId);
      // Users can be created by anyone signing up or by Super Admins/Dispensary Owners
      allow create: if isSignedIn();
    }
    
    match /notifications/{notificationId} {
      // A user can only access their own notifications
      allow read, update, delete, create: if request.auth.uid == resource.data.recipientUid;
    }

    // === Authenticated User Rules ===
    match /productRequests/{requestId} {
      allow read, update: if isSignedIn() && (request.auth.uid == resource.data.productOwnerId || request.auth.uid == resource.data.requesterId); // Simplified for example, real would check dispensary roles
      allow create: if isSignedIn();
    }
    
    match /poolIssues/{issueId} {
        allow read, update: if isSuperAdmin(request.auth.uid);
        allow create: if isSignedIn();
    }

    // === Admin-Only Collections ===
    match /aiInteractionsLog/{logId} {
      // Only Super Admins can read logs
      allow read: if isSuperAdmin(request.auth.uid);
      // Logs are created by a backend process/function, not directly by clients
      allow write: if isSignedIn();
    }

    match /scrapeLogs/{logId} {
      allow read: if isSuperAdmin(request.auth.uid);
      allow write: if isSuperAdmin(request.auth.uid); // Written by a function called by an admin
    }
    
    match /importsHistory/{historyId} {
      allow read: if isSuperAdmin(request.auth.uid);
      allow write: if isSuperAdmin(request.auth.uid); // Written by a function called by an admin
    }

    match /justbrand_catalog/{categorySlug} {
        allow read: if isSuperAdmin(request.auth.uid);
        allow write: if isSuperAdmin(request.auth.uid);
        match /products/{productId} {
            allow read: if isSuperAdmin(request.auth.uid);
            allow write: if isSuperAdmin(request.auth.uid);
        }
    }

     match /stickersets/{setId} {
      // Public sets are readable by anyone
      allow read: if resource.data.isPublic == true;
      // Users can read their own private sets
      allow read: if request.auth.uid == resource.data.creatorUid;
      // Users can create new sets
      allow create: if request.auth.uid == request.resource.data.creatorUid;
      // Users can update/delete their own sets
      allow update, delete: if request.auth.uid == resource.data.creatorUid;
    }
  }
}
