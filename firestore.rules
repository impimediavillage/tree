rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // UTILITY: Function to check if a user is an admin type
    function isAdmin() {
      return request.auth.token.role == 'Super Admin';
    }
    
    // UTILITY: Function to check if a user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // UTILITY: Function to check if a user is linked to a specific dispensary
    function isDispensaryMember(dispensaryId) {
       return request.auth.token.dispensaryId == dispensaryId;
    }
    
    // =================================
    //  USERS Collection
    // =================================
    match /users/{userId} {
      // Anyone can create their own user document (on signup)
      allow create: if request.auth.uid == userId;
      
      // Users can read their own data. Admins can read anyone's data.
      allow get: if isOwner(userId) || isAdmin();
      
      // Users can update their own data. Admins can update anyone's data.
      // We protect role and credits from being changed by the user themselves.
      allow update: if (isOwner(userId) && !("role" in request.resource.data) && !("credits" in request.resource.data)) || isAdmin();
      
      // Only admins can delete user documents
      allow delete: if isAdmin();
    }
    
    // =================================
    //  DISPENSARIES Collection
    // =================================
    match /dispensaries/{dispensaryId} {
        // Anyone can create a dispensary application
        allow create: if request.auth.uid != null;
        
        // Anyone can view approved dispensaries
        allow get: if resource.data.status == 'Approved';
        allow list: if isAdmin(); // Only admins can list all
        
        // Only Super Admins or the linked owner can update a dispensary
        allow update: if isAdmin() || isDispensaryMember(dispensaryId);
        
        // Only Super Admins can delete
        allow delete: if isAdmin();
    }
    
    // =================================
    //  PRODUCTS Collection
    // =================================
    match /products/{productId} {
        // Any authenticated user can create a product (as they must be linked to a dispensary)
        allow create: if request.auth.uid != null;
        
        // Anyone can read any product
        allow get, list;
        
        // Only a member of the dispensary that owns the product can update or delete it
        allow update, delete: if isDispensaryMember(resource.data.dispensaryId);
    }
    
    // =================================
    //  PUBLIC READ-ONLY Collections
    // =================================
    match /dispensaryTypes/{typeId} {
      allow get, list; // Anyone can read the available types
    }
    
    match /creditPackages/{packageId} {
      allow get, list: if resource.data.isActive == true || isAdmin(); // Public can read active packages, admin can read all
      allow create, update, delete: if isAdmin(); // Only admins can manage packages
    }
    
    match /stickersets/{setId} {
      // Anyone can read a sticker set if it is public
      allow get, list: if resource.data.isPublic == true;
      // The creator can read/update/delete their own sets. Admins can do anything.
      allow read, update, delete: if isOwner(resource.data.creatorUid) || isAdmin();
      // Any authenticated user can create a new sticker set
      allow create: if request.auth.uid != null;
    }

    match /my-seeded-collection/{strainId} {
        allow get, list; // Publicly readable strain data
    }
    
    // =================================
    //  INTERACTION & LOGS (User-specific)
    // =================================
    match /aiInteractionsLog/{logId} {
      // Users can create their own logs, but not read them all.
      allow create: if isOwner(request.resource.data.userId);
      // Users can read logs belonging to them. Admins can read all logs.
      allow get, list: if isOwner(request.auth.uid) || isAdmin();
    }
    
    // =================================
    //  PRODUCT REQUESTS (Dispensary-specific)
    // =================================
    match /productRequests/{requestId} {
      // A user can create a request if they belong to the requesting dispensary
      allow create: if isDispensaryMember(request.resource.data.requesterDispensaryId);
      
      // A user can read/update a request if they are part of the requester's or the owner's dispensary team
      allow read, update: if isDispensaryMember(resource.data.requesterDispensaryId) || isDispensaryMember(resource.data.productOwnerDispensaryId) || isAdmin();
    }
    
     // =================================
    //  POOL ISSUES (Admin/involved parties)
    // =================================
    match /poolIssues/{issueId} {
       // A user can create an issue if they belong to the reporting dispensary
      allow create: if isDispensaryMember(request.resource.data.reporterDispensaryId);
      
      // Only admins or involved parties can read/update issues
      allow read, update: if isDispensaryMember(resource.data.reporterDispensaryId) || isDispensaryMember(resource.data.reportedDispensaryId) || isAdmin();
    }

    // Fallback rule: Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
