rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for Super Admin role from auth token
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }

    // Helper function to check if the user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Helper function to check if the user is a dispensary owner for a given ID from auth token
    function isDispensaryOwner(dispensaryId) {
      return request.auth.token.dispensaryId == dispensaryId;
    }

    // --- COLLECTIONS ---

    match /users/{userId} {
      // Users can manage their own document. Super Admins have full access.
      allow read, write: if isOwner(userId) || isSuperAdmin();
    }

    match /dispensaries/{dispensaryId} {
        // READ: Public can see approved dispensaries. Admins can see all.
        allow get: if isSuperAdmin() || resource.data.status == 'Approved';
        allow list: if isSuperAdmin() || request.query.where.status == 'Approved';
        
        // CREATE: Anyone can create a dispensary application.
        allow create: if true;
        
        // UPDATE: Admins can update anything. Owners can update their own, but not status/owner.
        allow update: if isSuperAdmin() || 
                      (isDispensaryOwner(dispensaryId) && 
                       request.resource.data.status == resource.data.status &&
                       request.resource.data.ownerEmail == resource.data.ownerEmail);
                       
        // DELETE: Only Admins can delete.
        allow delete: if isSuperAdmin();
    }
    
    match /dispensaryTypes/{typeId} {
        allow read: if true; // Public can read all types
        allow write: if isSuperAdmin();
    }
    
    match /dispensaryTypeProductCategories/{docId} {
        // Authenticated users (owners building products) and admins can read.
        allow read: if request.auth != null || isSuperAdmin();
        allow write: if isSuperAdmin();
    }
    
    match /products/{productId} {
        // Public can read products.
        allow read: if true;
        // Owners can manage their own products. Admins can manage all.
        allow create, update, delete: if isDispensaryOwner(request.resource.data.dispensaryId) || isSuperAdmin();
    }
    
    match /productRequests/{requestId} {
        // Only involved parties or admins can access.
        allow read, update: if isSuperAdmin() || 
                           isDispensaryOwner(request.resource.data.productOwnerDispensaryId) || 
                           isDispensaryOwner(request.resource.data.requesterDispensaryId);
        allow create: if isDispensaryOwner(request.resource.data.requesterDispensaryId) || isSuperAdmin();
        allow delete: if isSuperAdmin();
    }

    match /poolIssues/{issueId} {
        // Any authenticated user can create/read/update an issue. Admins can delete.
        allow read, create, update: if request.auth != null || isSuperAdmin();
        allow delete: if isSuperAdmin();
    }

    match /notifications/{notificationId} {
        // Users can read/update their own notifications. Admins can manage all.
        allow read, update: if isOwner(resource.data.recipientUid) || isSuperAdmin();
        allow create, delete: if isSuperAdmin(); // Or allow functions to create
    }
    
    match /aiInteractionsLog/{logId} {
        // Users can read their own logs. Admins can read all.
        allow read: if isOwner(resource.data.userId) || isSuperAdmin();
        allow write: if false; // Only cloud functions can write.
    }
    
    match /creditPackages/{packageId} {
        allow read: if true; // Publicly readable for pricing page.
        allow write: if isSuperAdmin();
    }

    match /stickersets/{setId} {
        allow read: if true; // Public can view sticker sets.
        // Creator or Admin can manage.
        allow create, update, delete: if isOwner(request.resource.data.creatorUid) || isSuperAdmin();
    }
    
    // Read-only collections for admin panel, managed by functions.
    match /scrapeLogs/{logId} {
      allow read: if isSuperAdmin();
      allow write: if false;
    }

    match /importsHistory/{historyId} {
      allow read: if isSuperAdmin();
      allow write: if false;
    }

    match /justbrand_catalog/{categoryId} {
      allow read: if isSuperAdmin();
      allow write: if false;
      
      match /products/{productId} {
        allow read: if isSuperAdmin();
        allow write: if false;
      }
    }
    
    match /my-seeded-collection/{strainId} {
        allow read: if true; // Public can read strain data.
        allow write: if request.auth != null || isSuperAdmin(); // Authenticated users can update images.
    }

  }
}
