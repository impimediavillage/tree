rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // ================= HELPER FUNCTIONS =================
    // IMPORTANT: These functions are for convenience. The core security logic
    // for admins should rely on token claims, not database reads.
    
    // Checks if the user is authenticated.
    function isSignedIn() {
      return request.auth != null;
    }

    // Checks if the requesting user is the owner of the document.
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    // Checks if the user has the 'DispensaryOwner' role and matches the given dispensaryId.
    function isDispensaryOwner(dispensaryId) {
      return isSignedIn() && request.auth.token.role == 'DispensaryOwner' && request.auth.token.dispensaryId == dispensaryId;
    }

    // ================= GLOBAL ADMIN OVERRIDE =================
    // Grants Super Admins unconditional read/write access to the entire database.
    // This is the "master key" rule and is evaluated before any more specific rules.
    match /{document=**} {
      allow read, write: if request.auth.token.role == 'Super Admin';
    }

    // ================= COLLECTION-SPECIFIC RULES =================

    // --- Dispensary and Related Public Data ---
    match /dispensaries/{dispensaryId} {
      // Allow public read only if the dispensary is 'Approved'.
      allow read: if resource.data.status == 'Approved';
      // Allow dispensary owners to update their own document, but not change status or owner email.
      allow update: if isDispensaryOwner(dispensaryId) && request.resource.data.status == resource.data.status && request.resource.data.ownerEmail == resource.data.ownerEmail;
      // Allow anyone to create a dispensary application.
      allow create: if true;
    }

    match /dispensaryTypes/{typeId} {
      allow read: if true;
      // Write access is handled by the global Super Admin rule.
      allow write: if false; 
    }
    
    match /dispensaryTypeProductCategories/{docId} {
      allow read: if true;
      allow write: if false; // Managed by Super Admin
    }

    // --- User-Centric Data ---
    match /users/{userId} {
      // A user can read and update their own document.
      allow read, update: if isOwner(userId);
      // Anyone can create a user document (signup).
      allow create: if true;
      // Listing and deleting users is handled by the global Super Admin rule.
      allow list, delete: if false;
    }
    
    match /notifications/{notificationId} {
        // A user can read, update (e.g., mark as read), and delete their own notifications.
        allow read, update, delete: if isOwner(resource.data.recipientUid);
    }
    
    match /aiInteractionsLog/{logId} {
      // A user can only create logs for themselves.
      allow create: if isOwner(request.resource.data.userId);
      // Reading logs is handled by the global Super Admin rule or future specific rules.
      allow read, update, delete: if false;
    }

    // --- Products ---
    match /products/{productId} {
      // Anyone can read products.
      allow read: if true;
      // Only the assigned dispensary owner can create, update, or delete their own products.
      allow create: if isDispensaryOwner(request.resource.data.dispensaryId);
      allow update, delete: if isDispensaryOwner(resource.data.dispensaryId);
    }

    // --- Product Sharing Pool ---
    match /productRequests/{requestId} {
      // Any signed-in user can create requests.
      allow create: if isSignedIn();
      // Only the requester or the product owner can read/update a request.
      allow read, update: if isSignedIn() && (isOwner(resource.data.requesterDispensaryId) || isDispensaryOwner(resource.data.productOwnerDispensaryId));
      // Deleting requests is handled by the global Super Admin rule.
      allow delete: if false;
    }

    match /poolIssues/{issueId} {
        // Any signed-in user can create or read an issue.
        allow read, create: if isSignedIn();
        // Updating/deleting issues is handled by the global Super Admin rule.
        allow update, delete: if false;
    }
    
    // --- Publicly Readable Data ---
    match /creditPackages/{packageId} {
      allow read: if true;
      allow write: if false; // Managed by Super Admin
    }
    
    match /stickersets/{setId} {
      allow read: if true; 
      allow create: if isSignedIn();
      allow update, delete: if isOwner(resource.data.creatorUid);
    }
    
    match /my-seeded-collection/{strainId} {
        allow read: if true;
        allow write: if false; // Managed by Super Admin
    }
  }
}
