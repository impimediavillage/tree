rules_version = '2';

// Helper functions to reduce repetition
function isSignedIn() {
  return request.auth != null;
}

function isSuperAdmin() {
  return isSignedIn() && request.auth.token.role == 'Super Admin';
}

function isDispensaryOwner(dispensaryId) {
  return isSignedIn() && request.auth.token.role == 'DispensaryOwner' && request.auth.token.dispensaryId == dispensaryId;
}

// Check if the user is the owner of the document by matching UID to ownerId field
function isOwner(docId) {
  return isSignedIn() && request.auth.uid == docId;
}

// Check if the user owns the dispensary associated with the data
function isResourceDispensaryOwner(resource) {
    return isSignedIn() &&
           request.auth.token.role == 'DispensaryOwner' &&
           resource.data.dispensaryId == request.auth.token.dispensaryId;
}

service cloud.firestore {
  match /databases/{database}/documents {
  
    // =====================================================================
    //  Publicly readable data (for browsing, etc.)
    // =====================================================================
    
    // Anyone can read approved dispensaries
    match /dispensaries/{dispensaryId} {
      allow read: if resource.data.status == 'Approved';
      // Create, Update, Delete handled by specific roles below
    }
    
    // Anyone can read products from approved dispensaries
    match /products/{productId} {
      allow read: if get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved';
       // Create, Update, Delete handled by specific roles below
    }
    
    // All users need to read dispensary types for UI elements (filters, dropdowns)
    match /dispensaryTypes/{typeId} {
        allow read: if true;
        // Create, Update, Delete handled by Super Admin only
    }

    // Public can read public sticker sets
    match /stickersets/{setId} {
      allow read: if resource.data.isPublic == true;
       // Create, Update, Delete handled by document owner or admin
    }


    // =====================================================================
    //  Admin-only Collections
    // =====================================================================

    match /admin/{docId} {
      allow read, write: if isSuperAdmin();
    }
    
    match /scrapeLogs/{logId} {
      allow read, write: if isSuperAdmin();
    }

    match /importsHistory/{historyId} {
       allow read, write: if isSuperAdmin();
    }
    
    match /justbrand_catalog/{doc=**} {
        allow read, write: if isSuperAdmin();
    }
    
    // =====================================================================
    //  User and Role-Based Permissions
    // =====================================================================

    // Users collection
    match /users/{userId} {
      allow read: if isSignedIn(); // Any signed-in user can read any other user's basic profile
      allow create: if request.auth.uid == userId; // Users can create their own profile
      allow update: if isOwner(userId) || isSuperAdmin(); // Users can update their own profile, Super Admin can update any
      allow delete: if isSuperAdmin(); // Only Super Admin can delete users
    }

    // Dispensaries collection
    match /dispensaries/{dispensaryId} {
      // Anyone can submit a new application
      allow create: if true;
      
      // Owners can read their own dispensary document, SuperAdmins can read any
      allow read: if isDispensaryOwner(dispensaryId) || isSuperAdmin() || resource.data.status == 'Approved';

      // Owners can update their own dispensary, SuperAdmins can update any
      allow update: if isDispensaryOwner(dispensaryId) || isSuperAdmin();

      // Only Super Admin can delete
      allow delete: if isSuperAdmin();
    }
    
    // Products collection
    match /products/{productId} {
      allow read: if get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved';
      allow create: if isResourceDispensaryOwner(request.resource);
      allow update, delete: if isResourceDispensaryOwner(resource);
    }

    // Product Requests
    match /productRequests/{requestId} {
      allow read, update: if isSignedIn() && (
                            resource.data.requesterDispensaryId == request.auth.token.dispensaryId ||
                            resource.data.productOwnerDispensaryId == request.auth.token.dispensaryId
                          ) || isSuperAdmin();
      allow create: if isResourceDispensaryOwner(request.resource);
      allow delete: if isSuperAdmin();
    }

    // Pool Issues
    match /poolIssues/{issueId} {
      allow read, create, update: if isSignedIn() || isSuperAdmin();
      allow delete: if isSuperAdmin();
    }
    
    // Notifications
    match /notifications/{notificationId} {
      allow read, update, delete: if isOwner(resource.data.recipientUid);
      allow create: if isSignedIn(); // Allow server-side functions to create notifications
    }

    // Credits System
    match /creditPackages/{packageId} {
      allow read: if true; // All users can see packages to buy
      allow create, update, delete: if isSuperAdmin(); // Only admin can manage packages
    }

    match /aiInteractionsLog/{logId} {
      allow read: if isSignedIn() && request.auth.uid == resource.data.userId;
      allow create: if isSignedIn(); // Created by backend function
    }

    // My Seeded Collection (for strain data)
    match /my-seeded-collection/{strainId} {
        allow read: if true;
        // Updating the image URL is handled by a callable function which enforces auth
        allow write: if isSuperAdmin(); 
    }

    // Sticker Sets
    match /stickersets/{setId} {
      // Public can read, owners can read their own private ones
      allow read: if resource.data.isPublic == true || isOwner(resource.data.creatorUid);
      // Users create their own sets
      allow create: if isOwner(request.resource.data.creatorUid);
      // Users can update their own sets
      allow update: if isOwner(resource.data.creatorUid);
      // Users can delete their own sets, admins can delete any
      allow delete: if isOwner(resource.data.creatorUid) || isSuperAdmin();
    }
    
    // Dispensary Types can be read by anyone, but only managed by Super Admins
     match /dispensaryTypes/{typeId} {
        allow read: if true;
        allow create, update, delete: if isSuperAdmin();
    }
    
    // Product Categories for a type are managed by Super Admins
    match /dispensaryTypeProductCategories/{docId} {
         allow read: if true;
         allow write: if isSuperAdmin();
    }
  }
}