rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if a user is the owner of a document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Helper function to get user data
    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    // Helper function to check for Super Admin role
    function isSuperAdmin() {
      return isAuthenticated() && getUserData(request.auth.uid).role == 'Super Admin';
    }

    // Helper function to check for Dispensary Owner role for a specific dispensary
    function isDispensaryOwner(dispensaryId) {
       let userData = getUserData(request.auth.uid);
       return isAuthenticated() && 
              userData.role == 'DispensaryOwner' && 
              userData.dispensaryId == dispensaryId;
    }
    
    function isAnyDispensaryOwner() {
       let userData = getUserData(request.auth.uid);
       return isAuthenticated() && userData.role == 'DispensaryOwner';
    }

    // Users collection rules
    match /users/{userId} {
      // Anyone can create their own user document (on signup)
      allow create: if isAuthenticated() && request.resource.data.uid == request.auth.uid;
      // Only the user themselves or a Super Admin can read/update their data
      allow read, update: if isOwner(userId) || isSuperAdmin();
      // Only Super Admins can delete user accounts from Firestore
      allow delete: if isSuperAdmin();
    }
    
    // Dispensary Types collection can be read by anyone, but only managed by Super Admin
    match /dispensaryTypes/{typeId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }
    
    // Product Categories for a dispensary type
    match /dispensaryTypeProductCategories/{typeId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }

    // Dispensaries can be created by any authenticated user (via signup form)
    // Public can read approved dispensaries.
    // Only owners or admins can update.
    match /dispensaries/{dispensaryId} {
      allow create: if isAuthenticated();
      allow read: if resource.data.status == 'Approved'; // Public can view approved dispensaries
      allow update: if isDispensaryOwner(dispensaryId) || isSuperAdmin();
      allow delete: if isSuperAdmin();
    }
    
    // Products can be read by anyone if their parent dispensary is approved.
    // Writes are restricted to the dispensary owner or an admin.
    match /products/{productId} {
        allow read: if get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved';
        allow create: if isDispensaryOwner(request.resource.data.dispensaryId) || isSuperAdmin();
        allow update: if isDispensaryOwner(resource.data.dispensaryId) || isSuperAdmin();
        allow delete: if isDispensaryOwner(resource.data.dispensaryId) || isSuperAdmin();
    }

    // Notifications are private to the recipient.
    match /notifications/{notificationId} {
        allow read, write, delete: if isOwner(resource.data.recipientUid);
        allow create: if isAuthenticated(); // Can be created by functions/other users
    }
    
    // Product Requests can be created by authenticated users.
    // They can only be read/updated by the involved parties or an admin.
    match /productRequests/{requestId} {
        allow create: if isAuthenticated();
        allow read, update: if isOwner(resource.data.requesterId) || isDispensaryOwner(resource.data.productOwnerDispensaryId) || isSuperAdmin();
        allow delete: if isSuperAdmin();
    }
    
    // Pool Issues can be created by dispensary owners.
    // Only admins can manage them.
    match /poolIssues/{issueId} {
        allow create: if isAnyDispensaryOwner();
        allow read, update, delete: if isSuperAdmin();
    }
    
    // Credit packages can be read by anyone, managed by admin.
    match /creditPackages/{packageId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }
    
    // AI Interaction Logs are private to the user who made them or an admin.
    match /aiInteractionsLog/{logId} {
        allow create: if isAuthenticated();
        allow read: if isOwner(resource.data.userId) || isSuperAdmin();
        allow write, delete: if isSuperAdmin();
    }

    // Sticker sets can be created by any authenticated user.
    // Public can read public sets.
    // Only creator or admin can update/delete.
    match /stickersets/{setId} {
      allow create: if isAuthenticated() && request.resource.data.creatorUid == request.auth.uid;
      allow read: if resource.data.isPublic == true;
      allow update, delete: if isOwner(resource.data.creatorUid) || isSuperAdmin();
    }
    
    // Scrape Logs & History should only be accessible by Super Admins
    match /scrapeLogs/{logId} {
      allow read, write: if isSuperAdmin();
    }
    match /importsHistory/{logId} {
       allow read, write: if isSuperAdmin();
    }
    
    // JustBrand catalog data should be readable by all
    match /justbrand_catalog/{categoryId} {
      allow read: if true;
      allow write: if isSuperAdmin(); // Only admin can write/update
      
      match /products/{productId} {
        allow read: if true;
        allow write: if isSuperAdmin();
      }
    }
    
     // Seeded strain data should be readable by all
    match /my-seeded-collection/{strainId} {
      allow read: if true;
      allow write: if isSuperAdmin(); // Only admin can modify seed data
    }
  }
}