
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for Super Admin role
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }
    
    // Helper function to check for any authenticated user
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check for Dispensary Owner role
    function isDispensaryOwner() {
      return request.auth.token.role == 'DispensaryOwner';
    }
    
    // Helper function to check if the user is the owner of a specific dispensary document
    function isOwnerOfDispensary(dispensaryId) {
      return request.auth.token.dispensaryId == dispensaryId;
    }

    // Helper function to check if the user's UID matches the ownerId field on a document
    function isDocumentOwner(doc) {
      return request.auth.uid == doc.ownerId;
    }

    // Publicly readable, admin-only write access
    match /dispensaryTypes/{typeId} {
      allow read: if true; // Everyone can read the types of dispensaries
      allow write: if isSuperAdmin(); // Only super admins can create, update, delete types
    }
    
    // Publicly readable, admin-only write access
    match /dispensaryTypeProductCategories/{docId} {
      allow read: if isAuthenticated(); // All authenticated users can read category structures for forms
      allow write: if isSuperAdmin(); // Only super admins can manage these
    }

    match /dispensaries/{dispensaryId} {
      // Allow anyone to create (submit an application)
      allow create: if true;
      
      // Allow read if the dispensary is 'Approved', OR if the user is the owner, OR if the user is a Super Admin
      allow read: if resource.data.status == 'Approved' || (isAuthenticated() && isDocumentOwner(resource.data)) || isSuperAdmin();
      
      // Allow update only by Super Admin or the owner of the document
      allow update: if isSuperAdmin() || (isAuthenticated() && isDocumentOwner(resource.data));
      
      // Only Super Admins can delete dispensaries
      allow delete: if isSuperAdmin();
    }

    match /users/{userId} {
      // Any authenticated user can create their own user document
      allow create: if isAuthenticated() && request.auth.uid == userId;

      // Users can only read/update/delete their own document
      allow read, update, delete: if isAuthenticated() && request.auth.uid == userId;
      
      // Super Admins can read/update any user document
      allow read, update: if isSuperAdmin();
    }
    
    match /products/{productId} {
      // Public can read products from approved dispensaries
      allow read: if get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved';

      // Only an authenticated dispensary owner can create a product for their own dispensary
      allow create: if isDispensaryOwner() && isOwnerOfDispensary(request.resource.data.dispensaryId);

      // Only the owner of the product's dispensary can update/delete it
      allow update, delete: if isDispensaryOwner() && isOwnerOfDispensary(resource.data.dispensaryId);
      
      // Super Admins can do anything
      allow write: if isSuperAdmin();
    }

    // Notifications are private to the recipient or Super Admins
    match /notifications/{notificationId} {
      allow read, update, delete: if isAuthenticated() && request.auth.uid == resource.data.recipientUid;
      allow create: if isAuthenticated(); // Allow any authenticated user to potentially create a notification (e.g., via a function)
      allow list, write: if isSuperAdmin();
    }

    // Interaction logs are private to the user or Super Admins
    match /aiInteractionsLog/{logId} {
        allow create: if isAuthenticated();
        allow read: if (isAuthenticated() && request.auth.uid == resource.data.userId) || isSuperAdmin();
        allow list: if isSuperAdmin();
    }

    // Credit packages are public to read, admin-only to write
    match /creditPackages/{packageId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }
    
    match /productRequests/{requestId} {
      allow create: if isDispensaryOwner(); // Only owners can create requests
      // Allow read/update if user is the requester OR the product owner OR a super admin
      allow read, update: if (isDispensaryOwner() && (isOwnerOfDispensary(resource.data.requesterDispensaryId) || isOwnerOfDispensary(resource.data.productOwnerDispensaryId))) || isSuperAdmin();
      allow delete: if isSuperAdmin();
    }
    
    match /poolIssues/{issueId} {
        allow create: if isDispensaryOwner(); // Only owners can report issues
        // Only Super Admins can manage pool issues
        allow read, update, delete: if isSuperAdmin();
    }

    // Scrape history and logs are admin-only
    match /scrapeLogs/{logId} {
        allow read, write: if isSuperAdmin();
    }
    match /importsHistory/{historyId} {
        allow read, write: if isSuperAdmin();
    }
    match /justbrand_catalog/{docId} {
        allow read, write: if isSuperAdmin();
    }
     match /justbrand_catalog/{docId}/{subcollection}/{subdocId}{
        allow read, write: if isSuperAdmin();
    }
    
    // Seeded data is readable by authenticated users for product creation, writable by admin
    match /my-seeded-collection/{strainId} {
        allow read: if isAuthenticated();
        allow write: if isSuperAdmin();
    }

    // Sticker sets can be created by authenticated users
    // Can be read by anyone if public
    // Can only be updated/deleted by the creator or a super admin
    match /stickersets/{stickerId} {
        allow create: if isAuthenticated();
        allow read: if resource.data.isPublic == true || (isAuthenticated() && request.auth.uid == resource.data.creatorUid) || isSuperAdmin();
        allow update, delete: if (isAuthenticated() && request.auth.uid == resource.data.creatorUid) || isSuperAdmin();
    }
  }
}
