
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Global rule for Super Admins
    // This allows any user with the 'Super Admin' custom claim to read/write any document.
    match /{document=**} {
      allow read, write: if request.auth.token.role == 'Super Admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow users to read and update their own document
      allow read, update: if request.auth.uid == userId;
      // Super Admins can create and delete user documents
      allow create, delete: if request.auth.token.role == 'Super Admin';
    }

    // Rules for the 'dispensaries' collection
    match /dispensaries/{dispensaryId} {
      // Anyone can read approved dispensaries
      allow read: if resource.data.status == 'Approved';
      // Only dispensary owners can update their own dispensary document
      allow update: if request.auth.token.dispensaryId == dispensaryId;
      // Super Admins can create and delete dispensary documents
      allow create, delete: if request.auth.token.role == 'Super Admin';
    }

    // Rules for dispensary types
    match /dispensaryTypes/{typeId} {
      // Anyone can read the list of available dispensary types
      allow read: if true;
      // Only Super Admins can create, update, or delete them
      allow write: if request.auth.token.role == 'Super Admin';
    }

    // Rules for products
    match /products/{productId} {
      // Anyone can read products
      allow read: if true;
      // Only the assigned dispensary owner can create or update their own products
      allow create, update: if request.auth.token.dispensaryId == request.resource.data.dispensaryId;
      // Only the dispensary owner or a super admin can delete a product
      allow delete: if request.auth.token.dispensaryId == resource.data.dispensaryId || request.auth.token.role == 'Super Admin';
    }

    // Rules for product requests
    match /productRequests/{requestId} {
      // Only involved parties (requester or owner) or super admins can read
      allow read: if request.auth.token.dispensaryId == resource.data.requesterDispensaryId || request.auth.token.dispensaryId == resource.data.productOwnerDispensaryId || request.auth.token.role == 'Super Admin';
      // Only the requester can create a request
      allow create: if request.auth.token.dispensaryId == request.resource.data.requesterDispensaryId;
      // Only involved parties can update (add notes, change status)
      allow update: if request.auth.token.dispensaryId == resource.data.requesterDispensaryId || request.auth.token.dispensaryId == resource.data.productOwnerDispensaryId;
    }
    
    // Rules for sticker sets
    match /stickersets/{stickerId} {
      // Anyone can read public sticker sets
      allow read: if resource.data.isPublic == true;
      // Authenticated users can create sticker sets
      allow create: if request.auth != null;
      // Only the creator or a Super Admin can update/delete
      allow update, delete: if request.auth.uid == resource.data.creatorUid || request.auth.token.role == 'Super Admin';
    }

    // Rules for credit packages - anyone can read them to purchase
    match /creditPackages/{packageId} {
        allow read: if true;
        allow write: if request.auth.token.role == 'Super Admin';
    }

    // Rules for interaction logs - only the user can read their own logs
    match /aiInteractionsLog/{logId} {
        allow read, create: if request.auth.uid == request.resource.data.userId;
        allow write: if request.auth.token.role == 'Super Admin';
    }

    // Rules for notifications - users can read/update their own
    match /notifications/{notificationId} {
      allow read, update: if request.auth.uid == resource.data.recipientUid;
      allow create, delete: if request.auth.token.role == 'Super Admin';
    }

    // Fallback for any other collections - deny all access by default
    match /{path=**} {
      allow read, write: if false;
    }
  }
}
