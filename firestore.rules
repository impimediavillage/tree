
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // ============================================
    // Helper Functions
    // ============================================
    function isSignedIn() {
      return request.auth != null;
    }

    function isSuperAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    function isOwnerOfDispensary(dispensaryId) {
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return isSignedIn() && userDoc.role == 'DispensaryOwner' && userDoc.dispensaryId == dispensaryId;
    }
    
    function isStaffOfDispensary(dispensaryId) {
       let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
       return isSignedIn() && (userDoc.role == 'DispensaryStaff' || userDoc.role == 'DispensaryOwner') && userDoc.dispensaryId == dispensaryId;
    }

    // ============================================
    // Collection Rules
    // ============================================

    // Publicly readable collections, only writable by Admins
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    match /dispensaryTypeProductCategories/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    match /my-seeded-collection/{strainId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    match /justbrand_catalog/{categoryId} {
      allow read: if true;
      allow write: if isSuperAdmin();
      
      match /products/{productId} {
        allow read: if true;
        allow write: if isSuperAdmin();
      }
    }
    
    match /creditPackages/{packageId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    // Users: Can manage their own doc, Admins can read all.
    match /users/{userId} {
      allow get: if isSignedIn();
      allow list: if isSuperAdmin();
      allow create: if isSignedIn();
      allow update: if request.auth.uid == userId || isSuperAdmin();
      allow delete: if isSuperAdmin();
    }

    // Dispensaries: Public can read approved. Owners can update their own. Admins can do anything.
    match /dispensaries/{dispensaryId} {
      allow get: if resource.data.status == 'Approved' || (isSignedIn() && (isOwnerOfDispensary(dispensaryId) || isSuperAdmin()));
      allow list: if true;
      allow create: if isSuperAdmin(); 
      allow update: if (isSignedIn() && isOwnerOfDispensary(dispensaryId)) || isSuperAdmin();
      allow delete: if isSuperAdmin();
    }

    // Products: Public can read. Owners/Staff can manage their own.
    match /products/{productId} {
      function dispensaryIsApproved() {
        return get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved';
      }

      allow read: if dispensaryIsApproved();
      allow create: if isSignedIn() && isStaffOfDispensary(request.resource.data.dispensaryId);
      allow update, delete: if isSignedIn() && isStaffOfDispensary(resource.data.dispensaryId);
    }
    
    // Product Requests: Only involved parties can access.
    match /productRequests/{requestId} {
       function isRequestParticipant() {
         let userDispensaryId = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId;
         return userDispensaryId == resource.data.productOwnerDispensaryId || userDispensaryId == resource.data.requesterDispensaryId;
       }

      allow read, update: if isSignedIn() && isRequestParticipant();
      allow create: if isSignedIn(); 
      allow delete: if isSuperAdmin();
    }
    
    // Notifications: Only recipient can access.
    match /notifications/{notificationId} {
      allow read, write: if isSignedIn() && request.auth.uid == resource.data.recipientUid;
      allow create: if isSuperAdmin();
    }

    // AI Interactions Log: Only the user themselves or an Admin can access.
    match /aiInteractionsLog/{logId} {
      allow read: if (isSignedIn() && request.auth.uid == resource.data.userId) || isSuperAdmin();
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.userId;
    }
    
    // Pool Issues: Only involved parties and Admins can access.
    match /poolIssues/{issueId} {
       function isIssueParticipant() {
         let userDispensaryId = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId;
         return userDispensaryId == resource.data.reporterDispensaryId || userDispensaryId == resource.data.reportedDispensaryId;
       }
       
       allow read, update: if (isSignedIn() && isIssueParticipant()) || isSuperAdmin();
       allow create: if isSignedIn();
       allow delete: if isSuperAdmin();
    }
    
    // Admin-only logs
    match /scrapeLogs/{logId} {
      allow read, write: if isSuperAdmin();
    }

    match /importsHistory/{historyId} {
      allow read, write: if isSuperAdmin();
    }
  }
}
