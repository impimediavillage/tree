rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to get a user's role and dispensaryId from their user document.
    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can create their own user document.
      allow create: if request.auth != null && request.auth.uid == userId;

      // A user can read their own document.
      allow get: if request.auth != null && request.auth.uid == userId;
      
      // A user can update their own document.
      allow update: if request.auth != null && request.auth.uid == userId;

      // Allow a user to list/read other users ONLY if they belong to the same dispensary.
      // This is for dispensary owners/staff to manage their own team.
      allow list: if request.auth != null && getUserData(request.auth.uid).dispensaryId == request.query.where.dispensaryId;
      
      // Deletion is typically restricted to admins, but for now, we'll prevent it.
      allow delete: if false;
    }

    // Rules for the 'dispensaries' collection
    match /dispensaries/{dispensaryId} {
      // Anyone can read dispensary info (for public listings).
      allow read: if true;
      
      // Only Super Admins can create/update/delete dispensaries.
      allow write: if request.auth != null && getUserData(request.auth.uid).role == 'Super Admin';
    }

    // Rules for the 'products' collection
    match /products/{productId} {
      // ANY authenticated user can read product data.
      // This is crucial for public-facing store pages where users browse products.
      allow read: if request.auth != null;
      
      // WRITE rule: A user can only create, update, or delete a product
      // if their dispensaryId matches the product's dispensaryId.
      allow write: if request.auth != null && getUserData(request.auth.uid).dispensaryId == request.resource.data.dispensaryId;
    }

    // Rules for other collections
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if request.auth != null && getUserData(request.auth.uid).role == 'Super Admin';
    }
    
    match /dispensaryTypeProductCategories/{docId} {
      allow read: if true;
      allow write: if request.auth != null && getUserData(request.auth.uid).role == 'Super Admin';
    }

    match /productRequests/{requestId} {
        allow read, write: if request.auth != null; // Simplified for now, can be tightened later
    }

    match /poolIssues/{issueId} {
        allow read, write: if request.auth != null; // Simplified for now
    }
    
    match /creditPackages/{packageId} {
        allow read: if true;
        allow write: if request.auth != null && getUserData(request.auth.uid).role == 'Super Admin';
    }
    
    match /aiInteractionsLog/{logId} {
        allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    match /stickersets/{stickerId} {
        allow read: if true; // Public can view sticker sets
        // Only the creator can create or update their own set.
        allow create, update: if request.auth != null && request.auth.uid == request.resource.data.creatorUid;
        // Only the creator or a Super Admin can delete a set.
        allow delete: if request.auth != null && (request.auth.uid == resource.data.creatorUid || getUserData(request.auth.uid).role == 'Super Admin');
    }
    
  }
}
