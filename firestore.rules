
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // =================================
    // Helper Functions
    // =================================
    
    function isSuperAdmin() {
      // Check if the requesting user exists and their role is 'Super Admin'.
      return request.auth != null &&
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    function isDispensaryOwner(dispensaryId) {
        // Check if user is the owner of a specific dispensary.
        return request.auth != null && 
               exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
               get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'DispensaryOwner' &&
               get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == dispensaryId;
    }

    function isDispensaryMember(dispensaryId) {
        // Check if user is owner OR staff of a specific dispensary.
        let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
        return request.auth != null &&
               exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
               userDoc.dispensaryId == dispensaryId &&
               (userDoc.role == 'DispensaryOwner' || userDoc.role == 'DispensaryStaff');
    }

    function isRequestingOwnDispensaryData(dispensaryId) {
      // Check if the query is filtering for the user's own dispensaryId.
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return userDoc.dispensaryId == dispensaryId;
    }

    // =================================
    // Collection Rules
    // =================================

    match /users/{userId} {
      // Any authenticated user can create their own user document.
      allow create: if request.auth != null && request.auth.uid == userId;
      // Users can only read their own data. Super Admins can read anyone's.
      allow read: if request.auth != null && (request.auth.uid == userId || isSuperAdmin());
      // Users can update their own profile. Super Admins can update any.
      allow update: if request.auth != null && (request.auth.uid == userId || isSuperAdmin());
      // Only Super Admins can delete users.
      allow delete: if isSuperAdmin();
    }
    
    match /dispensaries/{dispensaryId} {
      // Anyone can create a dispensary application.
      allow create: if true;
      // Only Super Admins and the owner/staff of the dispensary can read its full details.
      // All other authenticated users can only read 'Approved' dispensaries.
      allow read: if isDispensaryMember(dispensaryId) || isSuperAdmin() || (request.auth != null && resource.data.status == 'Approved');
      // Only Super Admins or the owner of the dispensary can update it.
      allow update: if isSuperAdmin() || isDispensaryOwner(dispensaryId);
      // Only Super Admins can delete dispensaries.
      allow delete: if isSuperAdmin();
    }

    match /dispensaryTypes/{typeId} {
      // Publicly readable.
      allow read: if true;
      // Only Super Admins can create, update, or delete wellness types.
      allow write: if isSuperAdmin();
    }

    match /dispensaryTypeProductCategories/{docId} {
        // Publicly readable for dynamic forms.
        allow read: if true;
        // Only Super Admins can manage categories.
        allow write: if isSuperAdmin();
    }
    
    match /products/{productId} {
      // A product can be read by anyone if it belongs to an Approved dispensary.
      allow read: if get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved';
      // A product can only be created or updated by a member of that dispensary.
      allow create, update: if isDispensaryMember(request.resource.data.dispensaryId);
      // A product can only be deleted by the owner of that dispensary or a Super Admin.
      allow delete: if isDispensaryOwner(resource.data.dispensaryId) || isSuperAdmin();
    }
    
    match /productRequests/{requestId} {
      // Can be read by the requester, the owner, or a Super Admin.
      allow read: if isDispensaryMember(resource.data.requesterDispensaryId) || isDispensaryMember(resource.data.productOwnerDispensaryId) || isSuperAdmin();
      // Can be created by any dispensary member.
      allow create: if isDispensaryMember(request.resource.data.requesterDispensaryId);
      // Can be updated by the requester, the owner, or a Super Admin.
      allow update: if isDispensaryMember(resource.data.requesterDispensaryId) || isDispensaryMember(resource.data.productOwnerDispensaryId) || isSuperAdmin();
    }

    match /creditPackages/{packageId} {
      // Publicly readable.
      allow read: if true;
      // Only Super Admins can manage credit packages.
      allow write: if isSuperAdmin();
    }
    
    match /aiInteractionsLog/{logId} {
      // Logs can only be read by the user who created them or a Super Admin.
      allow read: if request.auth.uid == resource.data.userId || isSuperAdmin();
      // Only the user themselves can create their own log entries.
      allow create: if request.auth.uid == request.resource.data.userId;
      // Logs are immutable.
      allow update, delete: if false;
    }
    
    match /poolIssues/{issueId} {
        // Only involved parties or Super Admins can read.
        allow read: if isDispensaryMember(resource.data.reporterDispensaryId) || isDispensaryMember(resource.data.reportedDispensaryId) || isSuperAdmin();
        // Only the reporter can create.
        allow create: if isDispensaryMember(request.resource.data.reporterDispensaryId);
        // Only Super Admins can update/resolve issues.
        allow update: if isSuperAdmin();
    }
    
    match /stickersets/{setId} {
        // Public sets are readable by anyone, private sets only by the creator/admin.
        allow read: if resource.data.isPublic == true || (request.auth != null && request.auth.uid == resource.data.creatorUid) || isSuperAdmin();
        // Only the creator can create/update.
        allow create, update: if request.auth != null && request.auth.uid == request.resource.data.creatorUid;
        // The creator or an admin can delete.
        allow delete: if (request.auth != null && request.auth.uid == resource.data.creatorUid) || isSuperAdmin();
    }

    // LIST Rules - IMPORTANT for dashboard queries
    match /products/{productId} {
      // Allow a dispensary member to LIST products belonging to THEIR dispensary
      allow list: if isRequestingOwnDispensaryData(request.query.filters[0].value);
    }

    match /productRequests/{requestId} {
      // Allow a dispensary member to LIST requests where they are the owner OR the requester
      allow list: if isRequestingOwnDispensaryData(request.query.filters[0].value);
    }
  }
}
