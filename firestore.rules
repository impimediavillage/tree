rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function getUserData() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data
    }

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isSuperAdmin() {
      return request.auth != null && getUserData().role == 'Super Admin';
    }

    function isDispensaryOwner() {
        return request.auth != null && getUserData().role == 'DispensaryOwner';
    }

    match /users/{userId} {
      allow read: if isOwner(userId) || isSuperAdmin();
      allow write: if isOwner(userId);
      allow create: if request.auth != null;
    }

    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    match /dispensaryTypeProductCategories/{docId} {
        allow read: if isDispensaryOwner() || isSuperAdmin();
        allow write: if isSuperAdmin();
    }

    match /dispensaries/{dispensaryId} {
      allow read: if resource.data.status == 'Approved' || 
                      (request.auth != null && getUserData().dispensaryId == dispensaryId) ||
                      isSuperAdmin();
      allow update: if (request.auth != null && getUserData().dispensaryId == dispensaryId) || 
                       isSuperAdmin();
      allow create: if request.auth != null;
      allow delete: if isSuperAdmin();
    }

    match /products/{productId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && getUserData().dispensaryId == resource.data.dispensaryId;
    }
    
    match /productRequests/{requestId} {
      allow read, write: if request.auth != null && 
                           (getUserData().dispensaryId == resource.data.productOwnerDispensaryId ||
                            getUserData().dispensaryId == resource.data.requesterDispensaryId);
    }

    match /creditPackages/{packageId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    match /aiInteractionsLog/{logId} {
      allow read: if request.auth != null && 
                    (resource.data.userId == request.auth.uid || 
                     (resource.data.dispensaryId != null && resource.data.dispensaryId == getUserData().dispensaryId) ||
                     isSuperAdmin());
      allow create: if true; // Created by backend functions
    }
    
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && resource.data.recipientUid == request.auth.uid;
      allow create: if true; // Created by backend functions
    }
    
    match /poolIssues/{issueId} {
      allow read, write: if request.auth != null &&
                            (getUserData().dispensaryId == resource.data.reporterDispensaryId ||
                             getUserData().dispensaryId == resource.data.reportedDispensaryId ||
                             isSuperAdmin());
       allow create: if request.auth != null;
    }

    // Scraped data collections
    match /justbrand_catalog/{doc=**} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }
    
    match /my-seeded-collection/{docId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /scrapeLogs/{logId} {
        allow read: if isSuperAdmin();
    }
    
    match /importsHistory/{logId} {
        allow read: if isSuperAdmin();
    }
  }
}