rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // ======== HELPER FUNCTIONS ========
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Checks if the requesting user's role is 'Super Admin' from their user document.
    function isSuperAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    // Checks if the requesting user is the owner of a specific dispensary.
    // This is more robust as it checks the user document directly.
    function isDispensaryOwner(dispensaryId) {
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return userDoc.role == 'DispensaryOwner' && userDoc.dispensaryId == dispensaryId;
    }

    // ======== COLLECTION RULES ========

    // Publicly readable data
    match /dispensaries/{dispensaryId} {
      allow read: if true;
      allow write: if isSuperAdmin(); 
    }

    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    match /dispensaryTypeProductCategories/{docId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    match /creditPackages/{packageId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    match /stickersets/{setId} {
      allow read: if true; // Sticker sets are public to view
      allow create: if isSignedIn();
      allow update, delete: if isOwner(resource.data.creatorUid) || isSuperAdmin();
    }

    // Products: Readable by anyone, writable by the dispensary owner
    match /products/{productId} {
      allow read: if true;
      allow create: if isSignedIn() && isDispensaryOwner(request.resource.data.dispensaryId);
      allow update, delete: if isSignedIn() && isDispensaryOwner(resource.data.dispensaryId);
    }

    // Users: Can only be read/updated by themselves or a Super Admin.
    match /users/{userId} {
      allow read, update: if isOwner(userId) || isSuperAdmin();
      allow create: if true; // Anyone can sign up
      allow list: if isSuperAdmin();
      allow delete: if isSuperAdmin();
    }
    
    // Authenticated users can manage their own requests.
    match /productRequests/{requestId} {
      allow read, create, update: if isSignedIn();
      allow delete: if isSuperAdmin();
    }
    
    // Authenticated users can report issues, only admins can manage them.
    match /poolIssues/{issueId} {
      allow read, create: if isSignedIn();
      allow update, delete: if isSuperAdmin();
    }
    
    // Users can create their own logs. Only they or an admin can read them.
    match /aiInteractionsLog/{logId} {
      allow read: if isOwner(resource.data.userId) || isSuperAdmin();
      allow create: if isOwner(request.resource.data.userId);
    }
    
    match /mushroom_products/{productId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    match /my-seeded-collection/{strainId} {
        allow read: if true;
        allow write: if isSuperAdmin(); // Or isSignedIn() if users can update images
    }

    // Add any other collections here
  }
}
