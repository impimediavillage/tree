rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to get a user's role from their auth token claims
    function getRole() {
      return request.auth.token.role;
    }

    // Helper function to check if a user is a Super Admin
    function isSuperAdmin() {
      return getRole() == 'Super Admin';
    }

    // Helper function to check if a user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Helper function to check if a user is associated with a specific dispensary
    function isDispensaryMember(dispensaryId) {
        return request.auth.token.dispensaryId == dispensaryId;
    }


    // =================================
    //  Publicly readable collections
    // =================================

    // Dispensary Types can be read by anyone to browse the site.
    // Only Super Admins can create, update, or delete them.
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    // Product categories can be read by any authenticated user for dynamic forms.
    // Only Super Admins can write them.
    match /dispensaryTypeProductCategories/{docId} {
      allow read: if isAuthenticated();
      allow write: if isSuperAdmin();
    }

    // Dispensaries can be read by the public if they are 'Approved'.
    // Creation is handled by the public signup form (implicitly allowed).
    // Updates are restricted to the owner or a Super Admin.
    match /dispensaries/{dispensaryId} {
      allow read: if resource.data.status == 'Approved' || isOwner(resource.data.ownerId) || isSuperAdmin();
      allow create: if true; // Public signup
      allow update: if isOwner(resource.data.ownerId) || isSuperAdmin();
      allow delete: if isSuperAdmin();
    }

    // Products can be read by the public if the parent dispensary is approved.
    // Writes are restricted to the owner of the dispensary.
    match /products/{productId} {
      allow read: if get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved';
      allow write: if isDispensaryMember(resource.data.dispensaryId) || isSuperAdmin();
    }

    // Public users can read featured sticker sets.
    match /stickersets/{setId} {
      allow read: if resource.data.isPublic == true;
      // Write access is handled at the user-specific level below.
    }

    // =================================
    //  Authenticated user collections
    // =================================

    // Users can read/update their own document. Super Admins can manage all users.
    match /users/{userId} {
      allow read, update: if isOwner(userId) || isSuperAdmin();
      allow create: if true; // Public signup or admin creation
      allow delete: if isSuperAdmin();
    }

    // Notifications are private to the recipient or Super Admins.
    match /notifications/{notificationId} {
      allow read, update, delete: if isOwner(resource.data.recipientUid) || isSuperAdmin();
      allow create: if isAuthenticated(); // Functions create these
    }

    // Users can read and write their own sticker sets.
    match /stickersets/{setId} {
      // Extend read access to authenticated users for their own sets
      allow read: if resource.data.isPublic == true || isOwner(resource.data.creatorUid);
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.creatorUid;
      allow update, delete: if isOwner(resource.data.creatorUid) || isSuperAdmin();
    }
    
    // =================================
    //  Dispensary Owner specific rules
    // =================================

    // Product requests can be created by any dispensary member.
    // They can only be read/updated by the parties involved or an admin.
    match /productRequests/{requestId} {
      allow create: if isAuthenticated();
      allow read, update: if isDispensaryMember(resource.data.requesterDispensaryId) || isDispensaryMember(resource.data.productOwnerDispensaryId) || isSuperAdmin();
      allow delete: if isSuperAdmin();
    }
    
    // Pool issues can be created by authenticated users.
    // Read/write is restricted to admins.
    match /poolIssues/{issueId} {
      allow create: if isAuthenticated();
      allow read, write: if isSuperAdmin();
    }
    
    // =================================
    //  Admin-only collections
    // =================================

    // Credit packages are managed only by Super Admins.
    // Authenticated users can read them to make purchases.
    match /creditPackages/{packageId} {
      allow read: if isAuthenticated();
      allow write: if isSuperAdmin();
    }

    // Interaction logs are write-only for functions and read-only for admins/the specific user.
    match /aiInteractionsLog/{logId} {
      allow create: if isAuthenticated(); // Created by functions
      allow read: if isOwner(resource.data.userId) || isSuperAdmin();
      allow update, delete: if isSuperAdmin();
    }

    // Scrape logs are admin-only
    match /scrapeLogs/{logId} {
        allow read, write: if isSuperAdmin();
    }
    match /importsHistory/{historyId} {
        allow read, write: if isSuperAdmin();
    }
    match /justbrand_catalog/{docId} {
      allow read, write: if isSuperAdmin();
    }
     match /justbrand_catalog/{docId}/{subcollection}/{productId} {
      allow read, write: if isSuperAdmin();
    }
     match /my-seeded-collection/{docId} {
      allow read: if isAuthenticated();
      allow write: if isSuperAdmin();
    }
  }
}
