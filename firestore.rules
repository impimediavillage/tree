rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // PUBLIC-READABLE COLLECTIONS
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    match /dispensaryTypeProductCategories/{docId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    // AUTHENTICATED-USER RULES
    match /users/{userId} {
      allow read: if request.auth != null;
      allow update: if request.auth.uid == userId; // Users can update their own profile
      
      // Allow Super Admins to write to any user doc
      // Allow Dispensary Owners to update users within their dispensary
      allow write: if request.auth != null && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin' ||
         (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'DispensaryOwner' &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == resource.data.dispensaryId));
          
      allow list: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }
    
    // DISPENSARY-LINKED RULES
    match /products/{productId} {
      // Allow public reads for storefronts
      allow get: if true;

      // Allow a user to list products that belong to their dispensary
      allow list: if request.auth != null &&
                   request.query.where.dispensaryId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId;

      // Allow a user to write (create, update, delete) to a product
      // if their dispensaryId matches the product's dispensaryId.
      allow write: if request.auth != null &&
                    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == request.resource.data.dispensaryId;
    }

    match /dispensaries/{dispensaryId} {
      // Public can read approved dispensaries for store listings
      allow get: if resource.data.status == 'Approved';

      // Admins can read/list any dispensary
      allow read, list: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';

      // Public can create (for signup), Admins can update/delete
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin' || request.auth == null;
    }

    match /productRequests/{requestId} {
      allow read, write: if request.auth != null &&
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == resource.data.requesterDispensaryId ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == resource.data.productOwnerDispensaryId ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin');
    }

    // ADMIN-ONLY RULES
    match /poolIssues/{issueId} {
       allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

     match /creditPackages/{packageId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }
    
    // LOGGING (write-only for authenticated users)
    match /aiInteractionsLog/{logId} {
      allow read: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
    }

    match /importsHistory/{logId} {
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }
    
    match /stickersets/{stickerId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update, delete: if request.auth != null && request.auth.uid == resource.data.creatorUid;
    }

  }
}
