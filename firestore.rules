
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isSuperAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    function isOwnerOfDispensary(dispensaryId) {
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return userDoc.role == 'DispensaryOwner' && userDoc.dispensaryId == dispensaryId;
    }

    function isStaffOfDispensary(dispensaryId) {
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return userDoc.role == 'DispensaryStaff' && userDoc.dispensaryId == dispensaryId;
    }
    
    function isOwnerOrStaffOfDispensary(dispensaryId) {
       let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
       return (userDoc.role == 'DispensaryOwner' || userDoc.role == 'DispensaryStaff') && userDoc.dispensaryId == dispensaryId;
    }

    // Collection: users
    match /users/{userId} {
      // Any authenticated user can create their own user document (on signup)
      allow create: if request.auth != null && request.auth.uid == userId;

      // Users can only read/update their own profile
      // Super Admins can read/update any user profile
      allow read, update: if request.auth.uid == userId || isSuperAdmin();

      // Only Super Admins can delete users
      allow delete: if isSuperAdmin();
    }

    // Collection: dispensaries
    match /dispensaries/{dispensaryId} {
      // Anyone can read approved dispensaries
      allow read: if resource.data.status == 'Approved';

      // Only Super Admins can create dispensaries
      allow create: if isSuperAdmin();

      // Only Super Admins or the owner of the dispensary can update it
      allow update: if isSuperAdmin() || isOwnerOfDispensary(dispensaryId);
      
      // Only Super Admins can delete dispensaries
      allow delete: if isSuperAdmin();
    }
    
     // Collection: dispensaryTypes
    match /dispensaryTypes/{typeId} {
      // Anyone can read the types
      allow read: true;
      // Only Super Admins can create, update, or delete types
      allow write: if isSuperAdmin();
    }
    
     // Collection: dispensaryTypeProductCategories
    match /dispensaryTypeProductCategories/{docId} {
      // Anyone can read the category structures
      allow read: true;
      // Only Super Admins can write them
      allow write: if isSuperAdmin();
    }

    // Collection: products
    match /products/{productId} {
      // Rules now use the custom claim set on the user's auth token.
      // This is efficient and works for both single doc reads and list queries.
      
      // Allow list/query if the 'where' clause matches the user's token claim
      allow list: if request.auth.token.dispensaryId == request.query.where.dispensaryId;
      
      // Allow read/write/delete if the document's dispensaryId matches the user's token claim
      allow read, write, delete: if request.auth.token.dispensaryId == resource.data.dispensaryId;

      // Public read for products from approved dispensaries
      allow get: if get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved';
    }

    // Collection: productRequests
    match /productRequests/{requestId} {
      // A user can create a request if they are staff/owner of the requesting dispensary
      allow create: if isOwnerOrStaffOfDispensary(request.resource.data.requesterDispensaryId);
      
      // A user can read/update a request if they are part of the requesting or owning dispensary
      allow read, update: if isOwnerOrStaffOfDispensary(resource.data.requesterDispensaryId) || isOwnerOrStaffOfDispensary(resource.data.productOwnerDispensaryId);

      // Allow Super Admins to read/update any request
      allow read, update: if isSuperAdmin();
      
      // Queries: a user can query for requests where they are either the requester or the owner
      allow list: if isOwnerOrStaffOfDispensary(request.query.where.requesterDispensaryId) || isOwnerOrStaffOfDispensary(request.query.where.productOwnerDispensaryId);
    }
    
     // Collection: poolIssues
    match /poolIssues/{issueId} {
        // Super admins can see everything
        allow read, list: if isSuperAdmin();
        
        // Users can create an issue if they are part of the reporting dispensary
        allow create: if isOwnerOrStaffOfDispensary(request.resource.data.reporterDispensaryId);
        
        // Users can see issues they are involved in
        allow get: if isOwnerOrStaffOfDispensary(resource.data.reporterDispensaryId) || isOwnerOrStaffOfDispensary(resource.data.reportedDispensaryId);
    }

    // Collection: creditPackages
    match /creditPackages/{packageId} {
        // Anyone can read active packages
        allow read: if resource.data.isActive == true;
        
        // Super admins can manage packages
        allow write, list: if isSuperAdmin();
    }
    
    // Collection: aiInteractionsLog
    match /aiInteractionsLog/{logId} {
      // Users can only read their own interaction logs
      allow read, list: if request.auth.uid == resource.data.userId;
      
      // Backend function creates these, so no direct client creation
      allow create: if false; 
    }
    
    // Collection: stickersets
    match /stickersets/{setId} {
      // Anyone can read public sticker sets
      allow read, list: if resource.data.isPublic == true;
      
      // Users can manage their own sticker sets
      allow create: if request.auth.uid == request.resource.data.creatorUid;
      allow update, delete: if request.auth.uid == resource.data.creatorUid;
    }
  }
}
