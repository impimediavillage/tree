
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to make rules clearer
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }

    function isDispensaryOwner(dispensaryId) {
      return request.auth.token.role == 'DispensaryOwner' && request.auth.token.dispensaryId == dispensaryId;
    }
    
    function isOwnerOfDoc() {
      return request.auth.uid == resource.id;
    }

    function isDispensaryStaff(dispensaryId) {
       return request.auth.token.role == 'DispensaryStaff' && request.auth.token.dispensaryId == dispensaryId;
    }

    function isAuthenticated() {
      return request.auth != null;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      allow read, write: if isSuperAdmin() || isOwnerOfDoc();
      allow read: if isDispensaryOwner(resource.data.dispensaryId);
    }
    
    // Rules for the 'dispensaryTypes' collection
    match /dispensaryTypes/{typeId} {
      allow read: if isAuthenticated();
      allow write: if isSuperAdmin();
    }
    
    // Rules for the 'dispensaryTypeProductCategories' collection
    match /dispensaryTypeProductCategories/{docId} {
        allow read: if isAuthenticated();
        allow write: if isSuperAdmin();
    }
    
    // Rules for the 'dispensaries' collection
    match /dispensaries/{dispensaryId} {
      // Super Admin: full access
      allow read, write: if isSuperAdmin();

      // Dispensary Owner: can update their own profile, can read it
      allow get, update: if isDispensaryOwner(dispensaryId);
      
      // Public & Authenticated Users: can read approved dispensaries
      allow get, list: if resource.data.status == 'Approved';

      // Public Signup: Anyone can create a new dispensary application
      allow create: if request.resource.data.status == 'Pending Approval';
    }

    // Rules for the 'products' collection and its subcollections
    match /products/{productId} {
      // Super Admin: full access
      allow read, write: if isSuperAdmin();
      
      // Dispensary Owner: full access to their own products
      allow read, write: if isDispensaryOwner(request.resource.data.dispensaryId) || isDispensaryOwner(resource.data.dispensaryId);

      // Public & Authenticated Users: can read products from approved dispensaries
      allow get, list: if get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved';
    }
    
    // Rules for 'productRequests'
    match /productRequests/{requestId} {
        // Super Admin: full access
        allow read, write: if isSuperAdmin();
        
        // Involved Dispensary Owners: full access
        allow read, write: if isDispensaryOwner(resource.data.productOwnerDispensaryId) || isDispensaryOwner(resource.data.requesterDispensaryId);
        
        // Allow creation by authenticated owners
        allow create: if isDispensaryOwner(request.resource.data.requesterDispensaryId);
    }
    
    // Rules for 'poolIssues'
    match /poolIssues/{issueId} {
        allow read, write: if isSuperAdmin();
        allow create: if isDispensaryOwner(request.resource.data.reporterDispensaryId);
    }
    
    // Rules for 'notifications'
    match /notifications/{notificationId} {
        allow read, delete: if isSuperAdmin() || request.auth.uid == resource.data.recipientUid;
        allow write: if isSuperAdmin(); // Typically only backend/functions write here
    }
    
    // Rules for 'creditPackages'
    match /creditPackages/{packageId} {
        allow read: if isAuthenticated(); // All authenticated users can see packages to buy them
        allow write: if isSuperAdmin(); // Only super admins can create/edit them
    }

    // Rules for 'aiInteractionsLog'
    match /aiInteractionsLog/{logId} {
      allow read: if isSuperAdmin() || request.auth.uid == resource.data.userId;
      // Writes should only come from a trusted backend (Cloud Function)
      allow write: if false; 
    }
    
    // Rules for 'stickersets'
    match /stickersets/{setId} {
      allow read: if resource.data.isPublic == true || request.auth.uid == resource.data.creatorUid || isSuperAdmin();
      allow create: if isAuthenticated();
      allow update, delete: if request.auth.uid == resource.data.creatorUid || isSuperAdmin();
    }
    
    // Deny all access to log collections from client by default.
    match /scrapeLogs/{logId} { allow read, write: if false; }
    match /importsHistory/{historyId} { allow read, write: if false; }
    
    // Read-only access to seeded data collections for authenticated users
    match /my-seeded-collection/{strainId} {
      allow read: if isAuthenticated();
      allow write: if isSuperAdmin(); // Allow admin to fix data if needed
    }
    
    match /justbrand_catalog/{docId} {
        allow read, write: if false; // Should only be written by scraper function
        match /{allChildren=**} {
            allow read, write: if false;
        }
    }
  }
}
