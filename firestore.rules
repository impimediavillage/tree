rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions to make rules more readable
    function isSuperAdmin() {
      return request.auth.token.role == 'SuperAdmin';
    }
    
    function isDispensaryOwner() {
      return request.auth.token.role == 'DispensaryOwner';
    }

    function isOwnerOfDispensary(dispensaryId) {
      return isDispensaryOwner() && request.auth.token.dispensaryId == dispensaryId;
    }

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwnerOfDoc(userId) {
      return request.auth.uid == userId;
    }

    // Publicly readable collections
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /creditPackages/{packageId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    match /dispensaries/{dispensaryId} {
      allow read: if true;
      // Allow create for anyone (public signup form)
      allow create: if true;
      // Allow update for super admin or owner of the dispensary
      allow update: if isSuperAdmin() || isOwnerOfDispensary(dispensaryId);
      allow delete: if isSuperAdmin();
    }
    
    match /products/{productId} {
      allow read: if true;
      // Allow create/update/delete for super admin or owner of the product's dispensary
      allow create, update, delete: if isSuperAdmin() || isOwnerOfDispensary(resource.data.dispensaryId);
    }

    // User-specific data
    match /users/{userId} {
      // Allow users to read their own data, and super admins to read any user's data
      allow read: if isOwnerOfDoc(userId) || isSuperAdmin();
      // Allow create for anyone (signup), and update for self or admin
      allow create: if true;
      allow update: if isOwnerOfDoc(userId) || isSuperAdmin();
      allow delete: if isSuperAdmin();
    }

    match /notifications/{notificationId} {
      // Users can only access their own notifications. Admins can manage all.
      allow read, write: if (isSignedIn() && resource.data.recipientUid == request.auth.uid) || isSuperAdmin();
    }
    
    match /aiInteractionsLog/{logId} {
      // Users can only read their own logs. No client writes.
      allow read: if isSignedIn() && resource.data.userId == request.auth.uid;
      allow write: if false; 
    }

    // Product Sharing Pool rules
    match /productRequests/{requestId} {
      // Allow access for the requester, the owner, or a super admin
      allow read, write: if isSuperAdmin() ||
                         (isSignedIn() && (resource.data.requesterDispensaryId == request.auth.token.dispensaryId ||
                                           resource.data.productOwnerDispensaryId == request.auth.token.dispensaryId));
    }

    match /poolIssues/{issueId} {
        // Allow access for the reporter, the reported party, or a super admin
        allow read, write: if isSuperAdmin() ||
                            (isSignedIn() && (resource.data.reporterDispensaryId == request.auth.token.dispensaryId ||
                                              resource.data.reportedDispensaryId == request.auth.token.dispensaryId));
    }
    
    // For strain data seeding
    match /my-seeded-collection/{docId} {
        allow read: if true;
        // Writes should happen via backend/admin function, not client
        allow write: if isSuperAdmin(); 
    }
  }
}
