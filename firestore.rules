rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to get user's role and dispensaryId from their profile
    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    // Helper function to check if the requesting user is a Super Admin
    function isSuperAdmin() {
      return getUserData(request.auth.uid).role == 'Super Admin';
    }

    // Helper function to check if the requesting user is an owner or staff of a specific dispensary
    function isOwnerOrStaff(dispensaryId) {
      let userData = getUserData(request.auth.uid);
      return userData.dispensaryId == dispensaryId && (userData.role == 'DispensaryOwner' || userData.role == 'DispensaryStaff');
    }
    
    // Helper function to check if a user can write to a specific dispensary's resources
    function canWriteToDispensary(dispensaryId) {
        return isSuperAdmin() || isOwnerOrStaff(dispensaryId);
    }

    // ============== USERS ==============
    match /users/{userId} {
      // A user can always get their own profile.
      // A Super Admin can get any user profile.
      // A dispensary owner/staff can get profiles of users linked to their dispensary.
      allow get: if request.auth.uid == userId 
                  || isSuperAdmin()
                  || (resource.data.dispensaryId != null && isOwnerOrStaff(resource.data.dispensaryId));

      // A dispensary owner/staff can list users belonging to their dispensary.
      // A Super Admin can list all users.
      allow list: if isSuperAdmin()
                   || (request.query.where.dispensaryId == getUserData(request.auth.uid).dispensaryId);

      // A user can create their own user document (on signup).
      allow create: if request.auth.uid == userId;

      // A user can update their own document.
      // A Super Admin can update any user document.
      // A dispensary owner can update users linked to their dispensary.
      allow update: if request.auth.uid == userId 
                    || isSuperAdmin()
                    || (resource.data.dispensaryId != null && isOwnerOrStaff(resource.data.dispensaryId));

      // Only a Super Admin can delete a user document.
      allow delete: if isSuperAdmin();
    }

    // ============== DISPENSARIES ==============
    match /dispensaries/{dispensaryId} {
      // Anyone can get a dispensary document IF it is approved.
      allow get: if resource.data.status == 'Approved';
      
      // Public users can list approved dispensaries.
      // Admins can list dispensaries matching their ID.
      allow list: if request.query.where.status == 'Approved'
                   || (isOwnerOrStaff(dispensaryId))
                   || isSuperAdmin();
                   
      // Anyone can create a dispensary application.
      allow create: if true;
      
      // Only Super Admins or owners/staff of that dispensary can update it.
      allow update: if canWriteToDispensary(dispensaryId);

      // Only Super Admins can delete a dispensary.
      allow delete: if isSuperAdmin();
    }

    // ============== PRODUCTS ==============
    match /products/{productId} {
      // Any authenticated user can read a single product.
      allow get: if request.auth != null;

      // Public users can query products if they are filtering by an approved dispensary.
      // Dispensary admins can query products that belong to their own dispensary.
      allow list: if (request.query.where.dispensaryId != null && get(/databases/$(database)/documents/dispensaries/$(request.query.where.dispensaryId)).data.status == 'Approved')
                  || (request.query.where.dispensaryId == getUserData(request.auth.uid).dispensaryId);
      
      // Only a user who belongs to the dispensary can write to a product.
      allow create, update, delete: if canWriteToDispensary(request.resource.data.dispensaryId);
    }
    
    // ============== DISPENSARY TYPES ==============
    match /dispensaryTypes/{typeId} {
        // Anyone can read the list of dispensary types.
        allow read: if true;
        // Only Super Admins can create, update, or delete types.
        allow write: if isSuperAdmin();
    }

    // ============== DISPENSARY TYPE PRODUCT CATEGORIES ==============
    match /dispensaryTypeProductCategories/{docId} {
        // Anyone can read the category structures.
        allow read: if true;
        // Only Super Admins can write to them.
        allow write: if isSuperAdmin();
    }

    // ============== CREDIT PACKAGES ==============
    match /creditPackages/{packageId} {
        // Anyone can read active credit packages.
        allow read: if resource.data.isActive == true || isSuperAdmin();
        // Only Super Admins can write to credit packages.
        allow write: if isSuperAdmin();
    }

    // ============== STICKER SETS ==============
    match /stickersets/{setId} {
        // Anyone can read a sticker set if it is public.
        // The creator can always read their own set.
        allow get: if resource.data.isPublic == true || request.auth.uid == resource.data.creatorUid;
        // Anyone can list public sticker sets.
        allow list: if request.query.where.isPublic == true;
        // Any authenticated user can create a sticker set.
        allow create: if request.auth.uid == request.resource.data.creatorUid;
        // Only the creator can update or delete their own sticker set.
        allow update, delete: if request.auth.uid == resource.data.creatorUid;
    }
    
    // ============== PRODUCT REQUESTS ==============
    match /productRequests/{requestId} {
        // You can read a request if you are the requester or the owner of the product.
        allow read: if isOwnerOrStaff(resource.data.productOwnerDispensaryId) 
                     || isOwnerOrStaff(resource.data.requesterDispensaryId)
                     || isSuperAdmin();
        
        // You can create a request if you are the requester.
        allow create: if isOwnerOrStaff(request.resource.data.requesterDispensaryId);
        
        // You can update a request if you are the requester or owner.
        allow update: if isOwnerOrStaff(resource.data.productOwnerDispensaryId) 
                     || isOwnerOrStaff(resource.data.requesterDispensaryId);
        
        // You can only delete a request if you are the requester and it's pending.
        allow delete: if isOwnerOrStaff(resource.data.requesterDispensaryId) && resource.data.requestStatus == 'pending_owner_approval';
    }

    // ============== AI INTERACTIONS LOG ==============
    match /aiInteractionsLog/{logId} {
        // A user can only read or write their own interaction logs.
        allow read, write: if request.auth.uid == resource.data.userId
                            || (getUserData(request.auth.uid).dispensaryId == resource.data.dispensaryId)
                            || isSuperAdmin();
    }
  }
}
