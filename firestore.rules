
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to keep rules DRY
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }

    function isDispensaryOwner(dispensaryId) {
      return request.auth.token.role == 'DispensaryOwner' && request.auth.token.dispensaryId == dispensaryId;
    }

    function isDispensaryStaff(dispensaryId) {
       return request.auth.token.role == 'DispensaryStaff' && request.auth.token.dispensaryId == dispensaryId;
    }

    function isOwnerOrStaff(dispensaryId) {
      return isDispensaryOwner(dispensaryId) || isDispensaryStaff(dispensaryId);
    }
    
    // USERS collection
    match /users/{userId} {
      allow read: if isSignedIn(); // Allow any signed-in user to read basic profile info of others
      allow create: if !isSignedIn(); // Allow anyone to create their user doc during signup
      allow update: if request.auth.uid == userId || isSuperAdmin(); // Allow user to update their own profile, or Super Admin to update any
    }

    // DISPENSARIES collection
    match /dispensaries/{dispensaryId} {
      // Anyone can create a dispensary application
      allow create: if isSignedIn(); 
      // Anyone can read an approved dispensary profile
      allow read: if resource.data.status == 'Approved' || isOwnerOrStaff(dispensaryId) || isSuperAdmin();
      // Only the owner of the dispensary or a Super Admin can update it
      allow update: if isOwnerOrStaff(dispensaryId) || isSuperAdmin();
      // Only Super Admin can delete a dispensary
      allow delete: if isSuperAdmin();
    }

    // PRODUCTS subcollection (nested under dispensaries for clarity, but using root collection)
    match /products/{productId} {
      // Anyone can read a product from an approved dispensary
      allow read: if get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved';
      // Only the owner/staff of the dispensary or a Super Admin can create/update/delete products
      allow write: if isOwnerOrStaff(request.resource.data.dispensaryId) || isSuperAdmin();
    }

    // PRODUCT REQUESTS collection
    match /productRequests/{requestId} {
      // Owner/Staff of either involved dispensary can read. Super Admin can read all.
      allow read: if isSignedIn() && (isOwnerOrStaff(resource.data.productOwnerDispensaryId) || isOwnerOrStaff(resource.data.requesterDispensaryId) || isSuperAdmin());
      // Requester creates. Owner/Requester can update (status changes, notes). Super Admin can update.
      allow write: if isSignedIn() && (isOwnerOrStaff(request.resource.data.requesterDispensaryId) || isOwnerOrStaff(request.resource.data.productOwnerDispensaryId) || isSuperAdmin());
    }

    // POOL ISSUES collection
    match /poolIssues/{issueId} {
      // Involved parties and Super Admins can read
      allow read: if isSignedIn() && (isOwnerOrStaff(resource.data.reporterDispensaryId) || isOwnerOrStaff(resource.data.reportedDispensaryId) || isSuperAdmin());
      // Only the reporter can create an issue. Only Super Admin can update/delete.
      allow create: if isSignedIn() && isOwnerOrStaff(request.resource.data.reporterDispensaryId);
      allow update, delete: if isSuperAdmin();
    }

    // NOTIFICATIONS collection
    match /notifications/{notificationId} {
      // Only the recipient can read/update their own notifications
      allow read, update, delete: if isSignedIn() && request.auth.uid == resource.data.recipientUid;
      // Notifications are created by backend functions, not clients directly.
      allow create: if false;
    }
    
    // AI INTERACTIONS LOG collection
    match /aiInteractionsLog/{logId} {
       // Only backend functions can create logs.
      allow create: if false;
      // Users can read their own interaction logs. Super Admins can read all logs.
      allow read: if (isSignedIn() && request.auth.uid == resource.data.userId) || isSuperAdmin();
      // No one can update or delete logs from the client.
      allow update, delete: if false;
    }
    
    // CREDIT PACKAGES collection
    match /creditPackages/{packageId} {
      // Anyone (including non-signed-in users) can read active packages
      allow read: if resource.data.isActive == true;
      // Only Super Admins can create, update, or delete packages
      allow write: if isSuperAdmin();
    }

    // DISPENSARY TYPES collection
    match /dispensaryTypes/{typeId} {
      // Anyone can read dispensary types
      allow read: true;
      // Only Super Admins can create, update, or delete them
      allow write: if isSuperAdmin();
    }

    // STICKER SETS collection
    match /stickersets/{setId} {
      // Anyone can read public sticker sets
      allow read: if resource.data.isPublic == true;
      // Only the creator can create/update/delete their own sticker sets
      allow write: if isSignedIn() && request.auth.uid == request.resource.data.creatorUid;
    }

    // Other collections should be locked down by default
    // e.g., match /{document=**} { allow read, write: if false; }
  }
}
