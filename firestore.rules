rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Super Admins have unrestricted read/write access to ALL documents.
    // This rule is checked first for any path.
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }

    // Default deny all reads/writes unless explicitly allowed.
    match /{document=**} {
      allow read, write: if isSuperAdmin();
    }

    // ** USER PROFILES **
    match /users/{userId} {
      // ANY authenticated user can read their OWN document. This is crucial for login.
      allow read, update: if request.auth.uid == userId;
      // Admins can read/write any user document (already covered by global rule).
    }

    // ** DISPENSARIES **
    match /dispensaries/{dispensaryId} {
      // Anyone can read approved dispensaries (for public store listings).
      allow read: if resource.data.status == 'Approved';
      // Only the assigned owner can update their own dispensary.
      allow update: if request.auth.token.role == 'DispensaryOwner' && request.auth.token.dispensaryId == dispensaryId;
    }
    
    // ** PRODUCTS **
    match /products/{productId} {
      // Anyone can read any product.
      allow read: if true;
      // Only the assigned owner can create, update, or delete their own products.
      allow create, update, delete: if request.auth.token.role == 'DispensaryOwner' && request.auth.token.dispensaryId == request.resource.data.dispensaryId;
    }

    // ** DISPENSARY TYPES & CATEGORIES **
    // These are public information for populating dropdowns and UI.
    match /dispensaryTypes/{typeId} {
      allow read: if true;
    }
    match /dispensaryTypeProductCategories/{docId} {
      allow read: if true;
    }
    
    // ** PRODUCT REQUESTS / POOL **
    match /productRequests/{requestId} {
        // The owner of the product being requested can read/update.
        allow read, update: if request.auth.token.dispensaryId == resource.data.productOwnerDispensaryId;
        // The dispensary that made the request can read/update/create.
        allow read, update, create: if request.auth.token.dispensaryId == resource.data.requesterDispensaryId;
    }

    // ** NOTIFICATIONS **
    match /notifications/{notificationId} {
      // A user can read/update/delete their own notifications.
      allow read, update, delete: if request.auth.uid == resource.data.recipientUid;
    }

    // ** POOL ISSUES **
    match /poolIssues/{issueId} {
        // Only involved parties can read. Super Admin can read/write globally.
        allow read: if request.auth.token.dispensaryId == resource.data.reporterDispensaryId || request.auth.token.dispensaryId == resource.data.reportedDispensaryId;
        // Only reporter can create.
        allow create: if request.auth.token.dispensaryId == request.resource.data.reporterDispensaryId;
    }

    // ** CREDIT PACKAGES **
    // Publicly readable for purchase pages.
    match /creditPackages/{packageId} {
        allow read: if true;
    }
    
    // ** STICKER SETS **
    match /stickersets/{setId} {
      // Public sets are readable by anyone.
      allow read: if resource.data.isPublic == true;
      // The creator can read/update/delete their own sets.
      allow read, update, delete: if request.auth.uid == resource.data.creatorUid;
      // Anyone authenticated can create a new set.
      allow create: if request.auth.uid != null;
    }

    // Deny all access to log collections by default from the client.
    match /aiInteractionsLog/{logId} {
      allow read, write: if false;
    }
     match /scrapeLogs/{logId} {
      allow read, write: if false;
    }
     match /importsHistory/{historyId} {
      allow read, write: if false;
    }
     match /justbrand_catalog/{docId} {
      allow read, write: if false;
    }
     match /my-seeded-collection/{docId} {
      allow read: if request.auth.uid != null;
      allow write: if isSuperAdmin(); // Or some other specific rule
    }
  }
}
