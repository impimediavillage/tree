rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to check user roles from the auth token.
    // This is more secure and efficient than reading from the database.
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }

    function isOwner(dispensaryId) {
      return request.auth.token.dispensaryId == dispensaryId && request.auth.token.role == 'DispensaryOwner';
    }
    
    function isStaff(dispensaryId) {
        return request.auth.token.dispensaryId == dispensaryId && request.auth.token.role == 'DispensaryStaff';
    }

    // Any authenticated user can read their own user document.
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      // SuperAdmins can manage any user.
      allow read, write: if isSuperAdmin();
    }
    
    // Public read for approved dispensaries.
    // Owners can manage their own dispensary.
    match /dispensaries/{dispensaryId} {
      allow read: if resource.data.status == 'Approved' || isOwner(dispensaryId) || isSuperAdmin();
      allow create: if request.auth != null; // Anyone can apply
      allow update: if isOwner(dispensaryId) || isSuperAdmin();
      allow delete: if isSuperAdmin();
    }

    // Public read for products of approved dispensaries.
    // Staff and Owners can manage products for their own dispensary.
    match /products/{productId} {
      allow read: if get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved';
      allow write: if isOwner(resource.data.dispensaryId) || isStaff(resource.data.dispensaryId) || isSuperAdmin();
    }
    
    // Public read for public sticker sets
    // Any authenticated user can create a sticker set.
    // Creator can manage their own sticker sets.
    match /stickersets/{stickerId} {
      allow read: if resource.data.isPublic == true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth.uid == resource.data.creatorUid || isSuperAdmin();
    }

    // Requests are only visible to the parties involved or an admin.
    match /productRequests/{requestId} {
      allow read, update: if isOwner(resource.data.productOwnerDispensaryId) || isStaff(resource.data.productOwnerDispensaryId) || isOwner(resource.data.requesterDispensaryId) || isStaff(resource.data.requesterDispensaryId) || isSuperAdmin();
      allow create: if request.auth != null && (isOwner(request.resource.data.requesterDispensaryId) || isStaff(request.resource.data.requesterDispensaryId));
    }

    // Pool issues can be created by owners/staff, but only managed by admins.
    match /poolIssues/{issueId} {
        allow create: if request.auth != null && (isOwner(request.resource.data.reporterDispensaryId) || isStaff(request.resource.data.reporterDispensaryId));
        allow read, write: if isSuperAdmin();
    }
    
    // Interaction logs can be created by any authenticated user for themselves.
    // Admins can read them. No updates or deletes.
    match /aiInteractionsLog/{logId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read: if request.auth != null && request.auth.uid == resource.data.userId || isSuperAdmin();
    }
    
    // Credit packages can be read by anyone, but only managed by admins.
    match /creditPackages/{packageId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }
    
    // Dispensary Types can be read by anyone, but only managed by admins.
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    // Category structures can be read by anyone, but only managed by admins.
    match /dispensaryTypeProductCategories/{docId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }

    // Seeded data collection is readable by authenticated users.
    match /my-seeded-collection/{strainId} {
        allow read: if request.auth != null;
    }
  }
}
