rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // HELPER FUNCTIONS
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }

    function isSignedIn() {
      return request.auth != null;
    }
    
    function isDispensaryOwner(dispensaryId) {
      return isSignedIn() && request.auth.token.dispensaryId == dispensaryId && request.auth.token.role == 'DispensaryOwner';
    }

    function isDispensaryStaff(dispensaryId) {
      return isSignedIn() && request.auth.token.dispensaryId == dispensaryId && request.auth.token.role == 'DispensaryStaff';
    }
    
    function isOwnerOrStaff(dispensaryId) {
        return isDispensaryOwner(dispensaryId) || isDispensaryStaff(dispensaryId);
    }

    function isThemselves(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isCloudFunction() {
        return request.auth.token.admin == true;
    }
    
    function isApprovedDispensary(dispensaryId) {
        return exists(/databases/$(database)/documents/dispensaries/$(dispensaryId)) &&
               get(/databases/$(database)/documents/dispensaries/$(dispensaryId)).data.status == 'Approved';
    }

    // COLLECTION RULES

    // Dispensaries: Public can read approved, Owners can read their own, Admin can read all.
    match /dispensaries/{dispensaryId} {
      allow get: if isSuperAdmin() || isDispensaryOwner(dispensaryId) || resource.data.status == 'Approved';
      allow list: if isSuperAdmin(); // Public listing is handled via queries, not direct list calls
      allow create, update, delete: if isSuperAdmin();
    }

    // Users: Users can read/update their own doc. Admins have full access.
    match /users/{userId} {
      allow get, update: if isSuperAdmin() || isThemselves(userId);
      allow list: if isSuperAdmin(); // Only admins can list all users
      allow create: if isSuperAdmin() || isCloudFunction() || (isSignedIn() && request.auth.uid == userId);
      allow delete: if isSuperAdmin();
    }
    
    // Dispensary Types: Publicly readable. Only admins can write.
    match /dispensaryTypes/{typeId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }
    
    // Dispensary Type Product Categories: Readable by owners/staff, writable by admin.
    match /dispensaryTypeProductCategories/{typeId} {
      allow read: if isSuperAdmin() || isSignedIn(); // Allow any signed-in user to read for populating forms
      allow write: if isSuperAdmin();
    }

    // Products: Public can read from approved dispensaries. Owner/staff can manage their own.
    match /products/{productId} {
      allow get: if isSuperAdmin() || isApprovedDispensary(resource.data.dispensaryId);
      allow list: if isSuperAdmin() || isOwnerOrStaff(request.query.dispensaryId); // Allow listing for owner's specific dispensary
      allow create, update, delete: if isSuperAdmin() || isOwnerOrStaff(request.resource.data.dispensaryId);
    }
    
    // Product Requests: Only involved parties or admin can access.
    match /productRequests/{requestId} {
      allow read, update: if isSuperAdmin() || 
                           isOwnerOrStaff(resource.data.productOwnerDispensaryId) || 
                           isOwnerOrStaff(resource.data.requesterDispensaryId);
      allow create: if isOwnerOrStaff(request.resource.data.requesterDispensaryId);
      allow delete: if isSuperAdmin();
      allow list: if isSuperAdmin() || isSignedIn(); // Allow listing by owners via queries
    }
    
    // Pool Issues: Only involved parties or admin can access.
    match /poolIssues/{issueId} {
       allow read, create, update: if isSuperAdmin() || 
                                     isOwnerOrStaff(request.resource.data.reporterDispensaryId);
       allow list: if isSuperAdmin();
       allow delete: if isSuperAdmin();
    }
    
    // Notifications: Only recipient or admin can read. Only functions can create.
    match /notifications/{notificationId} {
        allow read, update, delete: if isSuperAdmin() || isThemselves(resource.data.recipientUid);
        allow create: if isCloudFunction();
        allow list: if isSuperAdmin() || isSignedIn(); // Allow listing by user via queries
    }
    
    // Credit Packages: Publicly readable. Admin writable.
    match /creditPackages/{packageId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }
    
    // AI Interaction Logs: Only the user who made them or an admin can read.
    match /aiInteractionsLog/{logId} {
        allow read: if isSuperAdmin() || isThemselves(resource.data.userId);
        allow create: if isCloudFunction() || isThemselves(request.resource.data.userId); // Allow creation by user or function
        allow list: if isSuperAdmin() || isSignedIn(); // Allow listing by user via queries
    }
    
    // Sticker Sets: Public can read public sets. Creator can manage their own. Admin has full access.
    match /stickersets/{setId} {
        allow get: if resource.data.isPublic == true || isSuperAdmin() || isThemselves(resource.data.creatorUid);
        allow list: if isSuperAdmin(); // Public listing is handled via queries
        allow create: if isSignedIn();
        allow update, delete: if isSuperAdmin() || isThemselves(resource.data.creatorUid);
    }
    
    // Scrape Logs & History: Admin only
    match /scrapeLogs/{logId} { allow read, write: if isSuperAdmin(); }
    match /importsHistory/{historyId} { allow read, write: if isSuperAdmin(); }

    // Seed Data & Scraped Catalogs: Admin read/write, public/users read-only
    match /my-seeded-collection/{strainId} {
        allow read: if isSignedIn();
        allow write: if isSuperAdmin() || isCloudFunction();
    }
    
    match /justbrand_catalog/{catId} {
      allow read: if isSuperAdmin();
      allow write: if isCloudFunction();
      match /products/{prodId} {
        allow read: if isSuperAdmin();
        allow write: if isCloudFunction();
      }
    }
  }
}
