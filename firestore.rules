
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }

    function isDispensaryOwner() {
      return request.auth.token.role == 'DispensaryOwner';
    }
    
    function isDispensaryStaff() {
        return request.auth.token.role == 'DispensaryStaff';
    }

    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwnerOfDispensary(dispensaryId) {
      return isDispensaryOwner() && request.auth.token.dispensaryId == dispensaryId;
    }

    function isStaffOfDispensary(dispensaryId) {
      return isDispensaryStaff() && request.auth.token.dispensaryId == dispensaryId;
    }
    
    // USERS
    // Users can read/update their own profile.
    // Super Admins can read/write any user profile.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isSuperAdmin();
      allow create: if !exists(/databases/$(database)/documents/users/$(request.resource.data.uid));
      allow list: if isSuperAdmin();
      allow delete: if isSuperAdmin();
    }

    // DISPENSARIES
    // Public can read approved dispensaries.
    // Owners can read their own dispensary.
    // Super Admins can read/write any dispensary.
    match /dispensaries/{dispensaryId} {
      allow get: if resource.data.status == 'Approved' || (isAuthenticated() && resource.data.ownerId == request.auth.uid) || isSuperAdmin();
      allow list: if isAuthenticated(); // All authenticated users can list for browsing
      allow create: if isAuthenticated();
      allow update: if isOwnerOfDispensary(dispensaryId) || isSuperAdmin();
      allow delete: if isSuperAdmin();
    }

    // DISPENSARY TYPES
    // All authenticated users can read the types for UI population.
    // Only Super Admins can create/update/delete types.
    match /dispensaryTypes/{typeId} {
        allow read: if isAuthenticated();
        allow create, update, delete: if isSuperAdmin();
    }
    
    // DISPENSARY TYPE PRODUCT CATEGORIES
    // All authenticated users can read category structures for dynamic forms.
    // Only Super Admins can modify them.
    match /dispensaryTypeProductCategories/{docId} {
        allow read: if isAuthenticated();
        allow create, update, delete: if isSuperAdmin();
    }

    // PRODUCTS
    // Public can read products of approved dispensaries.
    // Owners/Staff can manage products for their own dispensary.
    // Super Admins have full access.
    match /products/{productId} {
      function isProductOfApprovedDispensary() {
        let dispensaryDoc = get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId));
        return dispensaryDoc.data.status == 'Approved';
      }

      allow get: if isProductOfApprovedDispensary() || isOwnerOfDispensary(resource.data.dispensaryId) || isSuperAdmin();
      allow list: if isAuthenticated();
      allow create: if isOwnerOfDispensary(request.resource.data.dispensaryId) || isSuperAdmin();
      allow update: if isOwnerOfDispensary(request.resource.data.dispensaryId) || isSuperAdmin();
      allow delete: if isOwnerOfDispensary(resource.data.dispensaryId) || isSuperAdmin();
    }
    
    // PRODUCT REQUESTS
    // Involved parties (requester/owner) and Super Admins can access.
    match /productRequests/{requestId} {
      function isRequester() {
        return request.auth.token.dispensaryId == resource.data.requesterDispensaryId;
      }
      function isProductOwner() {
        return request.auth.token.dispensaryId == resource.data.productOwnerDispensaryId;
      }

      allow read, update: if (isOwnerOfDispensary(resource.data.productOwnerDispensaryId) || isOwnerOfDispensary(resource.data.requesterDispensaryId)) || isSuperAdmin();
      allow create: if isOwnerOfDispensary(request.resource.data.requesterDispensaryId) || isSuperAdmin();
      allow list: if isDispensaryOwner() || isSuperAdmin();
    }

    // NOTIFICATIONS, POOL ISSUES, CREDIT PACKAGES, etc.
    // Generally restricted to involved users or admins.
    match /notifications/{notificationId} {
        allow read, update: if request.auth.uid == resource.data.recipientUid || isSuperAdmin();
        allow list: if isAuthenticated(); // List own notifications
        allow create, delete: if isSuperAdmin(); // System-generated
    }

    match /poolIssues/{issueId} {
        allow read, create, update, list: if isDispensaryOwner() || isSuperAdmin();
        allow delete: if isSuperAdmin();
    }

    match /creditPackages/{packageId} {
        allow read: if isAuthenticated();
        allow create, update, delete: if isSuperAdmin();
    }
    
    match /aiInteractionsLog/{logId} {
        allow read: if request.auth.uid == resource.data.userId || isSuperAdmin();
        allow create: if isAuthenticated();
    }
    
    // SCRAPING & SEED DATA (Admin only)
    match /my-seeded-collection/{strainId} {
      allow read: if isAuthenticated();
      allow update: if isAuthenticated(); // For image URL updates
      allow create, delete: if isSuperAdmin();
    }
    
    match /justbrand_catalog/{docId}/{document=**} {
        allow read, write: if isSuperAdmin();
    }
    
    match /scrapeLogs/{logId} {
        allow read: if isSuperAdmin();
        allow write: if isSuperAdmin(); // Functions need to write here
    }
    
    match /importsHistory/{historyId} {
        allow read: if isSuperAdmin();
        allow write: if isSuperAdmin(); // Functions need to write here
    }

    // STICKER SETS
    // Public read for public sets, owner has full access.
    match /stickersets/{setId} {
      allow get: if resource.data.isPublic == true || (isAuthenticated() && resource.data.creatorUid == request.auth.uid) || isSuperAdmin();
      allow list: if isAuthenticated(); // Allow listing for browsing
      allow create: if isAuthenticated();
      allow update, delete: if (isAuthenticated() && resource.data.creatorUid == request.auth.uid) || isSuperAdmin();
    }
  }
}
