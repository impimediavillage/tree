rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is a Super Admin
    function isSuperAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    // Helper function to get the user's dispensary ID
    function getUserDispensaryId(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.dispensaryId;
    }

    // Users can read/update their own profile.
    // Super Admins can read/write any user profile.
    // Dispensary owners can manage users associated with their dispensary.
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId || isSuperAdmin();
      allow list: if isSuperAdmin() || 
                     (request.auth.uid != null && request.query.where.dispensaryId == getUserDispensaryId(request.auth.uid));
    }
    
    // Dispensaries can be read by anyone.
    // Only Super Admins can create/update/delete dispensaries.
    match /dispensaries/{dispensaryId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    // Product rules: Public can read, owners/staff can write their own products.
    // The 'list' rule is crucial for allowing dispensary admins to query their own products.
    match /products/{productId} {
        allow get: if request.auth != null;
        allow list: if request.auth.uid != null && request.query.where.dispensaryId == getUserDispensaryId(request.auth.uid);
        allow write: if request.auth.uid != null && getUserDispensaryId(request.auth.uid) == request.resource.data.dispensaryId;
    }
    
    // Product Requests can only be accessed by the involved parties or a super admin.
    match /productRequests/{requestId} {
        allow read, write: if request.auth.uid != null &&
                              (getUserDispensaryId(request.auth.uid) == resource.data.requesterDispensaryId ||
                               getUserDispensaryId(request.auth.uid) == resource.data.productOwnerDispensaryId ||
                               isSuperAdmin());
    }

    // Pool Issues can be read by involved parties or super admin.
    match /poolIssues/{issueId} {
      allow read, write: if isSuperAdmin() || (request.auth.uid != null && 
                          (getUserDispensaryId(request.auth.uid) == resource.data.reporterDispensaryId ||
                           getUserDispensaryId(request.auth.uid) == resource.data.reportedDispensaryId));
    }

    // Dispensary Types can be read by anyone, written only by Super Admins.
    match /dispensaryTypes/{typeId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }
    
    // Dispensary Type Product Categories can be read by anyone, written only by Super Admins.
    match /dispensaryTypeProductCategories/{docId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }

    // AI interaction logs can only be accessed by the user who created them or a super admin.
    match /aiInteractionsLog/{logId} {
      allow read, create: if request.auth.uid == request.resource.data.userId || isSuperAdmin();
    }
    
    // Credit packages can be read by anyone, but only managed by Super Admins.
    match /creditPackages/{packageId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }

    // Sticker sets can be read by anyone if public, but only created/updated/deleted by their creator or a Super Admin.
    match /stickersets/{setId} {
        allow get: if resource.data.isPublic == true || (request.auth.uid != null && request.auth.uid == resource.data.creatorUid) || isSuperAdmin();
        allow list: if request.query.where.isPublic == true;
        allow create: if request.auth.uid != null && request.auth.uid == request.resource.data.creatorUid;
        allow update, delete: if request.auth.uid != null && (request.auth.uid == resource.data.creatorUid || isSuperAdmin());
    }

    // Allow read access for seeded data collections
    match /my-seeded-collection/{docId} {
      allow read: if true;
    }
     match /importsHistory/{docId} {
      allow read: if isSuperAdmin();
    }

  }
}