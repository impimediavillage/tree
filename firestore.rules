
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user has a specific role
    function isRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    // Helper function to check if a user is the owner of a specific dispensary
    function isDispensaryOwner(dispensaryId) {
      let user = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return user.role == 'DispensaryOwner' && user.dispensaryId == dispensaryId;
    }

    // Helper function to check if user is a staff member of a dispensary
    function isDispensaryStaff(dispensaryId) {
      let user = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return user.role == 'DispensaryStaff' && user.dispensaryId == dispensaryId;
    }

    // Publicly readable collections
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isRole('Super Admin');
    }

    match /dispensaries/{dispensaryId} {
      // Public can read approved dispensaries
      allow read: if resource.data.status == 'Approved';
      
      // Creating a new dispensary application is public
      allow create: if true;
      
      // Only Super Admins or the owner of the dispensary can update it
      allow update: if isRole('Super Admin') || isDispensaryOwner(dispensaryId);
      
      // Only Super Admins can delete
      allow delete: if isRole('Super Admin');
    }
    
    match /products/{productId} {
      // Public can read any product
      allow read: if true;
      
      // Only the owner or staff of the dispensary can create/update products for it
      allow create, update: if isDispensaryOwner(request.resource.data.dispensaryId) || isDispensaryStaff(request.resource.data.dispensaryId);
      
      // Only the owner of the product's dispensary or a Super Admin can delete it
      allow delete: if isDispensaryOwner(resource.data.dispensaryId) || isRole('Super Admin');
    }
    
    match /creditPackages/{packageId} {
      // Public can read active credit packages
      allow read: if resource.data.isActive == true;
      // Admins can write
      allow write: if isRole('Super Admin');
    }

    match /stickersets/{setId} {
      // Public can read public sets
      allow read: if resource.data.isPublic == true;
      allow create: if request.auth != null; // Any authenticated user can create
      allow update, delete: if request.auth.uid == resource.data.creatorUid || isRole('Super Admin');
    }

    // Authenticated user-specific collections
    match /users/{userId} {
      // A user can read their own document
      allow read: if request.auth.uid == userId || isRole('Super Admin');
      
      // A user can update their own document, and admins can update any
      allow update: if request.auth.uid == userId || isRole('Super Admin');
      
      // Only Super Admins can create or delete user records directly
      allow create, delete: if isRole('Super Admin');
    }

    match /notifications/{notificationId} {
      // A user can read/write their own notifications
      allow read, write: if request.auth.uid == resource.data.recipientUid;
      // Admins can read all notifications for moderation/support
      allow list: if isRole('Super Admin');
    }

    match /productRequests/{requestId} {
      // Authenticated users can create requests
      allow create: if request.auth != null;
      
      // Only involved parties or an admin can read/update a request
      allow read, update: if request.auth.uid == resource.data.requesterUid 
                          || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == resource.data.productOwnerDispensaryId
                          || isRole('Super Admin');
    }

    match /poolIssues/{issueId} {
      // Authenticated users can create issues
      allow create: if request.auth != null;
      // Involved parties or an admin can read/update an issue
      allow read, update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == resource.data.reporterDispensaryId
                          || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == resource.data.reportedDispensaryId
                          || isRole('Super Admin');
    }
    
    match /aiInteractionsLog/{logId} {
       // A user can create their own log entries
       allow create: if request.auth.uid == request.resource.data.userId;
       // Only the user themselves or a Super Admin can read their logs
       allow read: if request.auth.uid == resource.data.userId || isRole('Super Admin');
       // No updates or deletes allowed
       allow update, delete: if false;
    }
    
    // Scraper related collections - Admin only
    match /scrapeLogs/{logId} {
      allow read, write: if isRole('Super Admin');
    }
    match /importsHistory/{historyId} {
       allow read, write: if isRole('Super Admin');
    }
    match /justbrand_catalog/{docId} {
       allow read, write: if isRole('Super Admin');
       match /{allChildren=**} {
         allow read, write: if isRole('Super Admin');
       }
    }
  }
}
