rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    function isSuperAdmin() {
      return request.auth != null && request.auth.token.role == 'Super Admin';
    }

    function isDispensaryOwner(dispensaryId) {
      return request.auth != null && request.auth.token.role == 'DispensaryOwner' && request.auth.token.dispensaryId == dispensaryId;
    }
    
    function isDispensaryStaff(dispensaryId) {
      return request.auth != null && request.auth.token.role == 'DispensaryStaff' && request.auth.token.dispensaryId == dispensaryId;
    }
    
    function isOwnerOrStaffOfDispensary(dispensaryId) {
      return isDispensaryOwner(dispensaryId) || isDispensaryStaff(dispensaryId);
    }
    
    function isOwnerOfResource() {
      return request.auth != null && request.auth.uid == resource.data.uid;
    }

    match /{document=**} {
      allow read, write: if isSuperAdmin();
    }

    match /dispensaries/{dispensaryId} {
      allow create: if true; 
      allow read: if request.auth != null; // Any authenticated user can read
      allow update: if isDispensaryOwner(dispensaryId);
      allow delete: if false; 
    }
    
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId; // Users can read their own data
      allow create: if true;
      allow update: if request.auth != null && request.auth.uid == userId; // Users can update their own data
    }
    
    match /products/{productId} {
      allow read: if true; // Products should be publicly readable
      allow create, update, delete: if isOwnerOrStaffOfDispensary(resource.data.dispensaryId);
    }

    match /productRequests/{requestId} {
      allow read, update: if isOwnerOrStaffOfDispensary(resource.data.requesterDispensaryId) || isOwnerOrStaffOfDispensary(resource.data.productOwnerDispensaryId);
      allow create: if request.auth != null;
    }
    
     match /poolIssues/{issueId} {
      allow read, update: if isSuperAdmin();
      allow create: if request.auth != null;
    }
    
    match /aiInteractionsLog/{logId} {
      allow read: if isOwnerOfResource();
      allow create: if true; // Created from backend functions
    }
    
    match /notifications/{notificationId} {
      allow read, update: if isOwnerOfResource();
      allow create: if true; // Created from backend functions
    }
    
    match /creditPackages/{packageId} {
      allow read: if true; // Public can see packages to buy
      allow write: if isSuperAdmin();
    }
    
    match /stickersets/{stickerId} {
      allow read: if true;
      allow create: if request.auth != null; // Any logged in user can create a set
      allow update, delete: if isOwnerOfResource(); // Only the creator can edit/delete
    }

    // Default deny all other collections
    match /{path=**}/documents {
      allow read, write: if false;
    }
  }
}