rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for Super Admin role via token claim
    function isSuperAdmin() {
      return request.auth != null && request.auth.token.role == 'Super Admin';
    }

    // Helper function to check if the user is the owner of a document
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Helper function to check if the user is an owner of a specific dispensary via token claim
    function isDispensaryOwner(dispensaryId) {
      return request.auth != null && 
             request.auth.token.role == 'DispensaryOwner' && 
             request.auth.token.dispensaryId == dispensaryId;
    }
    
    // ======== GLOBAL ADMIN OVERRIDE ========
    // Super Admins have unrestricted access to all documents.
    // This rule is checked first. If true, access is granted and other rules are skipped.
    match /{document=**} {
      allow read, write: if isSuperAdmin();
    }

    // ======== COLLECTION-SPECIFIC RULES ========

    // Dispensaries: Public can only read approved ones. Owners can update their own.
    match /dispensaries/{dispensaryId} {
      allow read: if resource.data.status == 'Approved';
      // Owners can update their own dispensary, but NOT the status field.
      allow update: if isDispensaryOwner(dispensaryId) && !('status' in request.resource.data);
      allow create: if request.auth != null; // Anyone signed in can apply.
    }

    // Dispensary Types: Publicly readable.
    match /dispensaryTypes/{typeId} {
      allow read: if true;
    }
    
    // Product Categories: Publicly readable.
    match /dispensaryTypeProductCategories/{docId} {
      allow read: if true;
    }
    
    // Credit Packages: Publicly readable.
    match /creditPackages/{packageId} {
      allow read: if true;
    }
    
    // Sticker Sets: Publicly readable, creators can manage their own.
    match /stickersets/{setId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if isOwner(resource.data.creatorUid);
    }

    // Products: Publicly readable, owners can manage their own.
    match /products/{productId} {
      allow read: if true;
      allow create, update, delete: if isDispensaryOwner(request.resource.data.dispensaryId);
    }

    // Users: Can only be read/updated by themselves. List/Delete by admin is covered by global rule.
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      allow create: if true; // Allow public signup
    }
    
    // Product Requests: Authenticated users can manage their own.
    match /productRequests/{requestId} {
      allow read, create, update: if request.auth != null && (
        isOwner(resource.data.requesterEmail) || // placeholder, needs UID
        isDispensaryOwner(resource.data.productOwnerDispensaryId) ||
        isDispensaryOwner(resource.data.requesterDispensaryId)
      );
    }
    
    // Pool Issues: Authenticated users can create them.
    match /poolIssues/{issueId} {
      allow read, create: if request.auth != null;
    }
    
    // AI Logs: Only owner can read/create.
    match /aiInteractionsLog/{logId} {
      allow read, create: if isOwner(request.resource.data.userId);
    }

    // Seed data collections
    match /mushroom_products/{productId} {
      allow read: if true;
    }
    
    match /my-seeded-collection/{strainId} {
        allow read: if true;
    }

  }
}
