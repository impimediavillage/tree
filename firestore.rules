rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to get user's dispensaryId from their user document
    function getUserDispensaryId(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.dispensaryId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // A user can read/write their own document
      allow read, write: if request.auth.uid == userId;

      // A user can read another user's document if they belong to the same dispensary
      allow get: if request.auth.uid != null &&
                   getUserDispensaryId(request.auth.uid) == resource.data.dispensaryId;
      
      // A user can list other users ONLY if the query is filtered by their own dispensaryId
      allow list: if request.auth.uid != null &&
                    request.query.where.dispensaryId == getUserDispensaryId(request.auth.uid);
    }
    
    // Rules for the 'products' collection
    match /products/{productId} {
        // ANY authenticated user can get a single product document (for public storefronts)
        allow get: if request.auth.uid != null;
        
        // A user can LIST products ONLY if they are querying for products belonging to their own dispensary
        allow list: if request.auth.uid != null &&
                      request.query.where.dispensaryId == getUserDispensaryId(request.auth.uid);

        // A user can write (create, update, delete) a product ONLY if their dispensaryId matches the product's dispensaryId
        allow write: if request.auth.uid != null &&
                      getUserDispensaryId(request.auth.uid) == request.resource.data.dispensaryId;
    }

    // Rules for other collections
    match /dispensaries/{dispensaryId} {
      allow read, write: if request.auth.uid != null; // Simplistic rule, tighten if needed
    }

    match /dispensaryTypes/{typeId} {
      allow read: if true; // Publicly readable
      allow write: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }
    
    match /dispensaryTypeProductCategories/{docId} {
        allow read: if true; // Publicly readable
        allow write: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    match /creditPackages/{packageId} {
        allow read: if true;
        allow write: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    match /aiInteractionsLog/{logId} {
        allow read, write: if request.auth.uid == request.resource.data.userId;
    }

    match /productRequests/{requestId} {
        allow read, write: if request.auth.uid != null; // Needs refinement if sensitive
    }
    
    match /poolIssues/{issueId} {
        allow read, write: if request.auth.uid != null; // Needs refinement
    }

    match /stickersets/{setId} {
        allow read: if resource.data.isPublic == true || request.auth.uid == resource.data.creatorUid;
        allow create: if request.auth.uid != null;
        allow update, delete: if request.auth.uid == resource.data.creatorUid;
    }
    
  }
}
