rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to check user roles and ownership from the auth token.
    // This is more secure and performant than reading from the DB in rules.
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }

    function isDispensaryOwner(dispensaryId) {
      return request.auth.token.role == 'DispensaryOwner' && request.auth.token.dispensaryId == dispensaryId;
    }
    
    function isDispensaryStaff(dispensaryId) {
        return request.auth.token.role == 'DispensaryStaff' && request.auth.token.dispensaryId == dispensaryId;
    }

    function isOwnerOrStaff(dispensaryId) {
        return isDispensaryOwner(dispensaryId) || isDispensaryStaff(dispensaryId);
    }

    function isAuthenticated() {
      return request.auth != null;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // A user can read/update their own document. Super Admin can access any.
      allow read, update: if isSuperAdmin() || request.auth.uid == userId;
      // Only Super Admin can create or delete user documents directly.
      allow create, delete: if isSuperAdmin();
    }

    // Rules for 'dispensaries' collection
    match /dispensaries/{dispensaryId} {
        // Anyone can read approved dispensaries
        allow read: if resource.data.status == 'Approved' || isSuperAdmin() || isOwnerOrStaff(dispensaryId);
        // Creation is public for sign-ups
        allow create: if true;
        // Only the owner or a Super Admin can update their own dispensary
        allow update: if isSuperAdmin() || isDispensaryOwner(dispensaryId);
        // Only Super Admin can delete
        allow delete: if isSuperAdmin();
    }
    
    // Rules for 'dispensaryTypes' collection
    match /dispensaryTypes/{typeId} {
        // Publicly readable
        allow read: if true;
        // Writable only by Super Admin
        allow write: if isSuperAdmin();
    }

    // Rules for 'dispensaryTypeProductCategories' collection
    match /dispensaryTypeProductCategories/{docId} {
        // Publicly readable for product forms
        allow read: if true;
        // Writable only by Super Admin
        allow write: if isSuperAdmin();
    }
    
    // Rules for 'products' collection and their subcollections
    match /products/{productId} {
        // Anyone can read a product
        allow read: if true;
        // Only the owner, staff, or a Super Admin can create/update/delete products
        allow create: if isSuperAdmin() || isOwnerOrStaff(request.resource.data.dispensaryId);
        allow update, delete: if isSuperAdmin() || isOwnerOrStaff(resource.data.dispensaryId);
    }
    
    // Rules for 'productRequests' collection
    match /productRequests/{requestId} {
        // Involved parties (owner/staff of either dispensary) or Super Admin can read/update
        allow read, update: if isSuperAdmin() || isOwnerOrStaff(resource.data.productOwnerDispensaryId) || isOwnerOrStaff(resource.data.requesterDispensaryId);
        // Only owner/staff of the requesting dispensary or Super Admin can create
        allow create: if isSuperAdmin() || isOwnerOrStaff(request.resource.data.requesterDispensaryId);
        // Only Super Admin can delete
        allow delete: if isSuperAdmin();
    }

    // Rules for 'poolIssues' collection
    match /poolIssues/{issueId} {
        // Involved parties or Super Admin can read/update
        allow read, update: if isSuperAdmin() || isOwnerOrStaff(resource.data.reporterDispensaryId) || isOwnerOrStaff(resource.data.reportedDispensaryId);
        // The reporting party or Super Admin can create
        allow create: if isSuperAdmin() || isOwnerOrStaff(request.resource.data.reporterDispensaryId);
        // Only Super Admin can delete
        allow delete: if isSuperAdmin();
    }
    
    // Rules for 'notifications' collection
    match /notifications/{notificationId} {
        // Only the recipient or Super Admin can access
        allow read, update, delete: if isSuperAdmin() || resource.data.recipientUid == request.auth.uid;
        // Notifications are created by backend functions only, so no client creation allowed
        allow create: if false; 
    }
    
    // Rules for 'aiInteractionsLog' collection
    match /aiInteractionsLog/{logId} {
        // Users can only create logs for themselves
        allow create: if request.auth.uid == request.resource.data.userId;
        // Only the user who created it or a super admin can read it
        allow read: if isSuperAdmin() || resource.data.userId == request.auth.uid;
        // No client updates or deletes
        allow update, delete: if false;
    }

    // Rules for 'creditPackages' collection
    match /creditPackages/{packageId} {
        // Publicly readable if active
        allow read: if resource.data.isActive == true || isSuperAdmin();
        // Only Super Admin can manage credit packages
        allow write: if isSuperAdmin();
    }

    // Rules for 'stickersets' collection
    match /stickersets/{setId} {
        // Public can read if marked public
        allow read: if resource.data.isPublic == true || isSuperAdmin() || request.auth.uid == resource.data.creatorUid;
        // Users can create their own sticker sets
        allow create: if isAuthenticated() && request.auth.uid == request.resource.data.creatorUid;
        // Only the creator or Super Admin can update/delete
        allow update, delete: if isSuperAdmin() || request.auth.uid == resource.data.creatorUid;
    }

    // Rules for scraped data
    match /justbrand_catalog/{docId} {
      allow read: if true;
      allow write: if isSuperAdmin();
      match /{allChildren=**} {
        allow read: if true;
        allow write: if isSuperAdmin();
      }
    }
    
    // Rules for logs
     match /scrapeLogs/{docId} {
      allow read: if isSuperAdmin();
      allow write: if false;
    }
     match /importsHistory/{docId} {
      allow read: if isSuperAdmin();
      allow write: if false;
    }

    // Rules for seeded data
    match /my-seeded-collection/{docId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }
  }
}
