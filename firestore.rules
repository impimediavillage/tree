
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if the requesting user is a Super Admin
    function isSuperAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    // Helper function to check if the user is an owner of a given dispensaryId
    function isDispensaryOwner(dispensaryId) {
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return userDoc.role == 'DispensaryOwner' && userDoc.dispensaryId == dispensaryId;
    }
    
    // Helper function to check if the user is staff of a given dispensaryId
    function isDispensaryStaff(dispensaryId) {
       let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return userDoc.role == 'DispensaryStaff' && userDoc.dispensaryId == dispensaryId;
    }
    
    // Helper function to check if user is owner or staff of a given dispensaryId
    function isOwnerOrStaff(dispensaryId) {
    	return isDispensaryOwner(dispensaryId) || isDispensaryStaff(dispensaryId);
    }
    
    // Helper function to check if a user owns the document they are trying to access
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // ===============================================================
    //                       COLLECTION RULES
    // ===============================================================

    // --- Users Collection ---
    match /users/{userId} {
      // Allow create for any new user (public signup)
      allow create: if request.auth != null;
      
      // Allow read for the owner of the document or a Super Admin
      allow read: if isOwner(userId) || isSuperAdmin();
      
      // Allow update for the owner of the document or a Super Admin
      // Allow a dispensary owner to update their own staff/linked leaf users
      allow update: if isOwner(userId) || isSuperAdmin() || isDispensaryOwner(resource.data.dispensaryId);
      
      // Only Super Admins can delete user accounts
      allow delete: if isSuperAdmin();
    }

    // --- Dispensaries Collection ---
    match /dispensaries/{dispensaryId} {
      // Allow any authenticated user to create a dispensary application
      allow create: if request.auth != null;
      
      // Allow read for approved dispensaries to the public
      // Allow read for owners/staff of their own dispensary regardless of status
      // Allow read for Super Admins for any dispensary
      allow read: if resource.data.status == 'Approved' || isOwnerOrStaff(dispensaryId) || isSuperAdmin();
      
      // Allow update only by the owner of the dispensary or a Super Admin
      allow update: if isDispensaryOwner(dispensaryId) || isSuperAdmin();
      
      // Only Super Admins can delete dispensaries
      allow delete: if isSuperAdmin();
    }

    // --- Products Collection ---
    match /products/{productId} {
      // Allow create only by owner or staff of the dispensary the product belongs to
      allow create: if isOwnerOrStaff(request.resource.data.dispensaryId);
      
      // Anyone can read a product (for public storefronts)
      allow read: if true;
      
      // Allow update only by owner or staff of the dispensary the product belongs to, or Super Admin
      allow update: if isOwnerOrStaff(resource.data.dispensaryId) || isSuperAdmin();
      
      // Allow delete only by owner of the dispensary or Super Admin
      allow delete: if isDispensaryOwner(resource.data.dispensaryId) || isSuperAdmin();
    }
    
    // --- Dispensary Types Collection ---
    match /dispensaryTypes/{typeId} {
      // Anyone can read the types
      allow read: if true;
      // Only Super Admins can create, update, or delete types
      allow write: if isSuperAdmin();
    }
    
    // --- Dispensary Type Product Categories Collection ---
    match /dispensaryTypeProductCategories/{docId} {
       // Anyone can read the category structures
      allow read: if true;
      // Only Super Admins can create or update them
      allow write: if isSuperAdmin();
    }
    
    // --- Credit Packages Collection ---
    match /creditPackages/{packageId} {
      // Anyone can read active packages
      allow read: if true;
      // Only Super Admins can create, update, or delete them
      allow write: if isSuperAdmin();
    }

    // --- Product Requests Collection ---
    match /productRequests/{requestId} {
      // Only owner/staff of the requesting dispensary can create
      allow create: if isOwnerOrStaff(request.resource.data.requesterDispensaryId);
      
      // Allow read/update by either the requester or the owner of the product, or a Super Admin
      allow read, update: if isOwnerOrStaff(resource.data.requesterDispensaryId) || isOwnerOrStaff(resource.data.productOwnerDispensaryId) || isSuperAdmin();
      
      // Only the requester can delete (cancel) their own request, or a Super Admin
      allow delete: if isDispensaryOwner(resource.data.requesterDispensaryId) || isSuperAdmin();
    }

    // --- AI Interactions Log Collection ---
    match /aiInteractionsLog/{logId} {
       // A user can create their own log entries
       allow create: if isOwner(request.resource.data.userId);
       // A user can only read their own log entries. Super Admins can read all.
       allow read: if isOwner(resource.data.userId) || isSuperAdmin();
       // No one can update or delete logs
       allow update, delete: if false;
    }
    
    // --- Sticker Sets Collection ---
    match /stickersets/{setId} {
        // Authenticated users can create sticker sets
        allow create: if request.auth != null;
        // Anyone can read public sticker sets
        allow read: if resource.data.isPublic == true;
        // Only the creator can update or delete their own set, or a Super Admin
        allow update, delete: if isOwner(resource.data.creatorUid) || isSuperAdmin();
    }
  }
}
