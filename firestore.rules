
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isSuperAdmin() {
      return isSignedIn() && request.auth.token.role == 'Super Admin';
    }

    function isOwner(dispensaryId) {
      return isSignedIn() && request.auth.token.dispensaryId == dispensaryId && request.auth.token.role == 'DispensaryOwner';
    }

    function isOwnerOrStaff(dispensaryId) {
      return isSignedIn() && request.auth.token.dispensaryId == dispensaryId && (request.auth.token.role == 'DispensaryOwner' || request.auth.token.role == 'DispensaryStaff');
    }
    
    function isOwnerOfProduct(productId) {
      let productData = get(/databases/$(database)/documents/products/$(productId)).data;
      return isOwnerOrStaff(productData.dispensaryId);
    }
    
    function isOwnerOfProductRequest(productRequestId) {
        let requestData = get(/databases/$(database)/documents/productRequests/$(productRequestId)).data;
        return isOwner(requestData.productOwnerDispensaryId);
    }
    
    function isRequesterOfProductRequest(productRequestId) {
        let requestData = get(/databases/$(database)/documents/productRequests/$(productRequestId)).data;
        return isOwner(requestData.requesterDispensaryId);
    }
    
    // PUBLIC: Dispensaries - Anyone can read approved dispensaries
    match /dispensaries/{dispensaryId} {
      allow read: if resource.data.status == 'Approved' || isOwner(dispensaryId) || isSuperAdmin();
      allow create: if isSignedIn(); // Allows public signup applications
      allow update, delete: if isOwner(dispensaryId) || isSuperAdmin();
    }

    // PUBLIC: Dispensary Types - Anyone can read
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    // PUBLIC: Product Categories - Anyone can read
    match /dispensaryTypeProductCategories/{docId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }

    // PUBLIC: Products - Anyone can read approved products
    match /products/{productId} {
      allow read: if get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved';
      allow list: if isSignedIn(); // Allows owners to query for their own products.
      allow create, update, delete: if isOwnerOrStaff(request.resource.data.dispensaryId);
    }
    
    // PUBLIC: Sticker Sets - anyone can read public sets
    match /stickersets/{stickerSetId} {
        allow read: if resource.data.isPublic == true || (isSignedIn() && request.auth.uid == resource.data.creatorUid) || isSuperAdmin();
        allow create: if isSignedIn();
        allow update: if isSignedIn() && request.auth.uid == resource.data.creatorUid;
        allow delete: if (isSignedIn() && request.auth.uid == resource.data.creatorUid) || isSuperAdmin();
    }

    // USERS: Can read/write their own document. Super Admins can manage all users.
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isSuperAdmin() || isOwner(resource.data.dispensaryId);
      allow create: if isSignedIn();
      allow update: if request.auth.uid == userId || isSuperAdmin() || isOwner(resource.data.dispensaryId);
      allow delete: if isSuperAdmin();
    }
    
    // PRODUCT REQUESTS: Only involved parties or Super Admins
    match /productRequests/{requestId} {
      allow read: if isRequesterOfProductRequest(requestId) || isOwnerOfProductRequest(requestId) || isSuperAdmin();
      allow create: if isOwner(request.resource.data.requesterDispensaryId);
      allow update: if isRequesterOfProductRequest(requestId) || isOwnerOfProductRequest(requestId) || isSuperAdmin();
      allow delete: if isSuperAdmin();
    }

    // POOL ISSUES: Only involved parties or Super Admins
    match /poolIssues/{issueId} {
      allow read, update: if isOwner(resource.data.reporterDispensaryId) || isOwner(resource.data.reportedDispensaryId) || isSuperAdmin();
      allow create: if isOwner(request.resource.data.reporterDispensaryId);
      allow delete: if isSuperAdmin();
    }
    
    // NOTIFICATIONS: Only the recipient can read/write their own.
    match /notifications/{notificationId} {
        allow read, write: if isSignedIn() && request.auth.uid == resource.data.recipientUid;
        allow create: if isSignedIn(); // Server-side function creates notifications
    }
    
    // PUBLIC: Credit Packages - Anyone can read active packages
    match /creditPackages/{packageId} {
        allow read: if resource.data.isActive == true;
        allow write: if isSuperAdmin();
    }
    
    // AI INTERACTION LOGS: Only the user can read their own logs.
    match /aiInteractionsLog/{logId} {
        allow read: if isSignedIn() && request.auth.uid == resource.data.userId;
        // Creation is handled by a trusted cloud function.
        allow create: if true; 
    }
    
    // INTERNAL: Scrape logs - Only Super Admins
    match /scrapeLogs/{logId} {
        allow read, write: if isSuperAdmin();
    }
    
    // INTERNAL: Imports History - Only Super Admins
    match /importsHistory/{historyId} {
        allow read, write: if isSuperAdmin();
    }
    
    // SEED DATA: Read-only for authenticated users.
    match /my-seeded-collection/{strainId} {
      allow read: if isSignedIn();
      // Writing is handled by a trusted function that checks for auth
      allow write: if isSignedIn(); 
    }
    
    // SCRAPED DATA: Read-only for authenticated users.
    match /justbrand_catalog/{doc=**} {
      allow read: if isSignedIn();
    }
  }
}
