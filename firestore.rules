
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }
    
    function isOwner(dispensaryId) {
      return request.auth.token.dispensaryId == dispensaryId;
    }
    
    function isStaff(dispensaryId) {
      return request.auth.token.role == 'DispensaryStaff' && request.auth.token.dispensaryId == dispensaryId;
    }
    
    function isOwnerOrStaff(dispensaryId) {
        return isOwner(dispensaryId) || isStaff(dispensaryId);
    }
    
    function isSignedIn() {
      return request.auth != null;
    }

    // USERS
    // Users can read/write their own document.
    // SuperAdmins can read/write any user document.
    match /users/{userId} {
      allow read, write: if isSuperAdmin() || request.auth.uid == userId;
    }

    // DISPENSARIES
    // Public can read approved dispensaries.
    // Owners/Staff can read their own dispensary.
    // SuperAdmins can read any dispensary.
    // Owners and SuperAdmins can update their own dispensary.
    // SuperAdmins can create/delete dispensaries.
    match /dispensaries/{dispensaryId} {
      allow read: if isSuperAdmin() || resource.data.status == 'Approved' || isOwnerOrStaff(dispensaryId);
      allow create, delete: if isSuperAdmin();
      allow update: if isSuperAdmin() || isOwner(dispensaryId);
    }

    // DISPENSARY TYPES
    // Publicly readable. Only SuperAdmins can write.
    match /dispensaryTypes/{typeId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }
    
    // DISPENSARY TYPE PRODUCT CATEGORIES
    // Publicly readable. Only SuperAdmins can write.
    match /dispensaryTypeProductCategories/{docId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }

    // PRODUCTS
    // Public can read products of approved dispensaries.
    // Owners/Staff can manage products for their own dispensary.
    // SuperAdmins can do anything.
    match /products/{productId} {
      function isProductOfApprovedDispensary() {
        return get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved';
      }
      
      allow read: if isSuperAdmin() || isProductOfApprovedDispensary() || isOwnerOrStaff(resource.data.dispensaryId);
      allow create, update, delete: if isSuperAdmin() || isOwnerOrStaff(request.resource.data.dispensaryId);
    }

    // PRODUCT REQUESTS
    // Owners/Staff can manage requests related to their dispensary.
    // SuperAdmins can do anything.
    match /productRequests/{requestId} {
      allow read: if isSuperAdmin() || isOwnerOrStaff(resource.data.productOwnerDispensaryId) || isOwnerOrStaff(resource.data.requesterDispensaryId);
      allow create: if isOwnerOrStaff(request.resource.data.requesterDispensaryId);
      allow update: if isSuperAdmin() || isOwnerOrStaff(request.resource.data.productOwnerDispensaryId) || isOwnerOrStaff(request.resource.data.requesterDispensaryId);
      allow delete: if isSuperAdmin();
    }
    
    // NOTIFICATIONS
    // Users can read their own notifications.
    match /notifications/{notificationId} {
        allow read, write: if isSignedIn() && resource.data.recipientUid == request.auth.uid;
        allow create: if isSignedIn(); // Function must validate recipient
    }
    
    // POOL ISSUES
    // Only SuperAdmins can manage pool issues.
    // Owners/Staff can create issues.
    match /poolIssues/{issueId} {
        allow read: if isSuperAdmin() || isOwnerOrStaff(resource.data.reporterDispensaryId) || isOwnerOrStaff(resource.data.reportedDispensaryId);
        allow create: if isOwnerOrStaff(request.resource.data.reporterDispensaryId);
        allow update, delete: if isSuperAdmin();
    }
    
    // AI INTERACTIONS LOG
    // Users can create their own logs. Only SuperAdmins can read them.
    match /aiInteractionsLog/{logId} {
        allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
        allow read, write, delete: if isSuperAdmin();
    }

    // CREDIT PACKAGES
    // Publicly readable. Only SuperAdmins can write.
    match /creditPackages/{packageId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }
    
    // STICKER SETS
    // Public can read public sets. Users can create. Owner of set or SuperAdmin can write/delete.
    match /stickersets/{setId} {
        allow read: if resource.data.isPublic == true || (isSignedIn() && resource.data.creatorUid == request.auth.uid) || isSuperAdmin();
        allow create: if isSignedIn() && request.resource.data.creatorUid == request.auth.uid;
        allow update, delete: if isSuperAdmin() || (isSignedIn() && resource.data.creatorUid == request.auth.uid);
    }

    // Seed data collections
    match /my-seeded-collection/{docId} {
      allow read: if true;
      allow write: if isSuperAdmin() || isSignedIn(); // Allow authenticated users to update image URLs
    }
    
    match /justbrand_catalog/{docId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
     match /justbrand_catalog/{docId}/products/{productId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    // Logs for scraping, admin only
    match /scrapeLogs/{logId} {
        allow read, write: if isSuperAdmin();
    }
    
    match /importsHistory/{historyId} {
        allow read, write: if isSuperAdmin();
    }

  }
}
    