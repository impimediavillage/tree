rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper Functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isSuperAdmin() {
      return isSignedIn() && request.auth.token.role == 'Super Admin';
    }

    function isDispensaryOwner(dispensaryId) {
      return isSignedIn() && request.auth.token.role == 'DispensaryOwner' && request.auth.token.dispensaryId == dispensaryId;
    }
    
    function isDispensaryStaff(dispensaryId) {
       return isSignedIn() && request.auth.token.role == 'DispensaryStaff' && request.auth.token.dispensaryId == dispensaryId;
    }

    function isOwnerOrStaff(dispensaryId) {
      return isDispensaryOwner(dispensaryId) || isDispensaryStaff(dispensaryId);
    }
    
    function isOwnerOrAdmin(dispensaryId) {
      return isDispensaryOwner(dispensaryId) || isSuperAdmin();
    }
    
    function isOwnerOrStaffOrAdmin(dispensaryId) {
      return isOwnerOrStaff(dispensaryId) || isSuperAdmin();
    }
    
    // Anyone can read their own user document, Admins/Owners can update roles/status
    match /users/{userId} {
      allow read: if isSignedIn() && (request.auth.uid == userId || isSuperAdmin());
      allow create: if isSignedIn(); // Allows public signup to create their own user doc
      allow update: if (isSignedIn() && request.auth.uid == userId) || isSuperAdmin();
    }

    // Public can create new applications.
    // Admins can manage all. Owners can only update their own.
    match /dispensaries/{dispensaryId} {
        allow read: if resource.data.status == 'Approved' || isOwnerOrAdmin(dispensaryId);
        allow list: if isSuperAdmin(); // SuperAdmins can list all for their dashboard
        allow create: if true; // Anyone can submit an application
        allow update: if isOwnerOrAdmin(dispensaryId);
        allow delete: if isSuperAdmin();
    }

    // Public can read approved store types
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    // Admins can manage product categories for store types
    match /dispensaryTypeProductCategories/{docId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }
    
    // Public can read products from approved dispensaries
    // Owners/Staff can manage products for their own dispensary
    match /products/{productId} {
      allow read: if get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved';
      allow list: if isSuperAdmin();
      allow create, update: if isOwnerOrStaff(request.resource.data.dispensaryId);
      allow delete: if isOwnerOrStaff(resource.data.dispensaryId) || isSuperAdmin();
    }

    // Product requests can be created by any signed-in user.
    // They can only be read/updated by the involved parties or an admin.
    match /productRequests/{requestId} {
      allow read, update: if isOwnerOrStaff(resource.data.productOwnerDispensaryId) || isOwnerOrStaff(resource.data.requesterDispensaryId) || isSuperAdmin();
      allow create: if isSignedIn();
      allow delete: if isSuperAdmin(); // Only admins can delete requests
    }

    // Pool issues can be created by signed-in users.
    // They can only be viewed/managed by an admin.
    match /poolIssues/{issueId} {
      allow read, update: if isSuperAdmin();
      allow create: if isSignedIn();
    }
    
    // Notifications are private to the recipient.
    match /notifications/{notificationId} {
      allow read, update, delete: if isSignedIn() && request.auth.uid == resource.data.recipientUid;
      allow create: if isSignedIn(); // Functions create these
    }
    
    // Credit packages are publicly readable but only managed by admins.
    match /creditPackages/{packageId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    // Interaction logs are private to the user, but can be viewed by admins
    match /aiInteractionsLog/{logId} {
      allow read: if isSignedIn() && (request.auth.uid == resource.data.userId || isSuperAdmin());
      allow create: if isSignedIn();
    }
    
    // Sticker sets can be created by authenticated users, public read, deletable by owner/admin
    match /stickersets/{setId} {
        allow read: if true;
        allow create: if isSignedIn();
        allow update, delete: if isSignedIn() && (resource.data.creatorUid == request.auth.uid || isSuperAdmin());
    }
    
    // Scrape logs readable by admin only
    match /scrapeLogs/{logId} {
        allow read: if isSuperAdmin();
        allow write: if isSuperAdmin(); // Functions write these
    }
    
    // Imports history readable by admin only
     match /importsHistory/{historyId} {
        allow read: if isSuperAdmin();
        allow write: if isSuperAdmin(); // Functions write these
    }
    
    // Seeded data collection readable by all, writable only by admin
    match /my-seeded-collection/{strainId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
  }
}