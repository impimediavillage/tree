
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check user role from their document
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }
    
    // Helper function to check a user's dispensaryId
    function getUserDispensaryId(userId) {
        return get(/databases/$(database)/documents/users/$(userId)).data.dispensaryId;
    }

    // Helper function to check if the user is a Super Admin
    function isSuperAdmin() {
      return request.auth != null && getUserRole(request.auth.uid) == 'Super Admin';
    }

    // Helper function to check if the user is a Dispensary Owner
    function isOwner(dispensaryId) {
      return request.auth != null 
             && getUserRole(request.auth.uid) == 'DispensaryOwner'
             && getUserDispensaryId(request.auth.uid) == dispensaryId;
    }
    
    // Helper function to check if a user is staff of a given dispensary
    function isStaff(dispensaryId) {
        return request.auth != null
               && getUserRole(request.auth.uid) == 'DispensaryStaff'
               && getUserDispensaryId(request.auth.uid) == dispensaryId;
    }
    
    // Helper function to check if user owns the document via ownerId field
    function isDocumentOwner(doc) {
      return request.auth.uid == doc.data.ownerId;
    }

    // Helper to check if a user is an owner or staff of a dispensary
    function isOwnerOrStaff(dispensaryId) {
        return isOwner(dispensaryId) || isStaff(dispensaryId);
    }
    
    // Users can read/write their own profile. Admins can manage all users.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isSuperAdmin();
      allow create: if request.auth != null; // Any authenticated user can create their own doc
      allow list, delete: if isSuperAdmin();
    }
    
    // Dispensaries can be read by anyone if approved.
    // They can only be written to by their owner or a super admin.
    match /dispensaries/{dispensaryId} {
      allow read: if resource.data.status == 'Approved' || isOwner(dispensaryId) || isSuperAdmin();
      allow create: if request.auth != null; // New applications
      allow update, delete: if isOwner(dispensaryId) || isSuperAdmin();
    }

    // Products can be read by anyone.
    // They can only be written to by their owner or a super admin.
    match /products/{productId} {
      allow read: if true;
      allow create, update, delete: if isOwnerOrStaff(request.resource.data.dispensaryId) || isSuperAdmin();
    }
    
    // Dispensary types can be read by any authenticated user. Only admins can modify.
    match /dispensaryTypes/{typeId} {
        allow read: if request.auth != null;
        allow write: if isSuperAdmin();
    }
    
    // Categories for dispensary types can be read by any authenticated user. Only admins can modify.
    match /dispensaryTypeProductCategories/{typeId} {
        allow read: if request.auth != null;
        allow write: if isSuperAdmin();
    }

    // Product requests can be read/written by the involved parties or an admin.
    match /productRequests/{requestId} {
      allow read, update: if isOwnerOrStaff(resource.data.requesterDispensaryId) 
                          || isOwnerOrStaff(resource.data.productOwnerDispensaryId) 
                          || isSuperAdmin();
      allow create: if request.auth != null;
    }
    
    // Pool issues can be read by involved parties or admins.
    match /poolIssues/{issueId} {
       allow read, create: if request.auth != null;
       allow update, delete: if isSuperAdmin();
    }

    // Notifications are private to the recipient.
    match /notifications/{notificationId} {
        allow read, update, delete: if request.auth.uid == resource.data.recipientUid;
        allow create: if request.auth != null;
    }
    
    // Credit packages can be read by anyone, managed by admin.
    match /creditPackages/{packageId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }

    // AI Interaction logs are private.
    match /aiInteractionsLog/{logId} {
        allow read, create: if request.auth.uid == resource.data.userId;
        allow list, write: if isSuperAdmin();
    }

    // Scraper logs are admin-only
    match /scrapeLogs/{logId} {
        allow read, write: if isSuperAdmin();
    }
    
    // Imports history is admin-only
    match /importsHistory/{logId} {
        allow read, write: if isSuperAdmin();
    }

    // Seed data collection
    match /my-seeded-collection/{strainId} {
        allow read: if true;
        allow write: if isSuperAdmin(); // Or specific authenticated users if needed
    }
    
    // JustBrand catalog data
    match /justbrand_catalog/{docId} {
        allow read: if true;
        allow write: if isSuperAdmin();
        match /products/{productId} {
            allow read: if true;
            allow write: if isSuperAdmin();
        }
    }
    
    // Sticker sets can be read by anyone, write by creator or admin
    match /stickersets/{setId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update, delete: if request.auth.uid == resource.data.creatorUid || isSuperAdmin();
    }
  }
}
