
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is a Super Admin
    function isSuperAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    // Helper function to check if the user is a Dispensary Owner or Staff for a specific dispensary
    function isDispensaryAdmin(dispensaryId) {
      return request.auth != null && request.auth.token.dispensaryId == dispensaryId;
    }

    // Publicly readable, but only admins can write
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    match /dispensaryTypeProductCategories/{docId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }

    // Dispensaries can be read by anyone if approved, but only updated by their owner or a super admin
    match /dispensaries/{dispensaryId} {
      allow read: if resource.data.status == 'Approved' || isDispensaryAdmin(dispensaryId) || isSuperAdmin();
      allow list: if isSuperAdmin(); // Only super admins can list all dispensaries
      allow create, update, delete: if isSuperAdmin() || (isDispensaryAdmin(dispensaryId) && request.resource.data.dispensaryId == dispensaryId);
    }
    
    // Users can read/update their own doc. Admins can manage users.
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow list, create, delete: if isSuperAdmin();
    }

    // This is the critical fix for product queries.
    // It allows any authenticated user to perform a 'list' (query) operation.
    // The security is then handled by the query on the client-side, which filters by dispensaryId.
    match /{path=**}/products/{productId} {
      allow list: if request.auth != null;
      allow read: if true;
      allow create, update, delete: if request.auth != null && isDispensaryAdmin(request.resource.data.dispensaryId);
    }
    
    // Product Requests can only be seen by the parties involved or super admins.
    match /productRequests/{requestId} {
      allow read, update, create: if request.auth != null && (isDispensaryAdmin(request.resource.data.productOwnerDispensaryId) || isDispensaryAdmin(request.resource.data.requesterDispensaryId) || isSuperAdmin());
      allow list: if isSuperAdmin();
    }

    // Generic fallback for collections only manageable by Super Admins
    match /{collection}/{docId} {
      // Catch-all for collections like creditPackages, poolIssues, etc.
      allow read, write: if isSuperAdmin();
    }
  }
}
