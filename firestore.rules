rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return request.auth.token.role == 'Super Admin';
    }

    // Helper function to check if a user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to get dispensaryId from a user's doc
    function getUserDispensaryId(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.dispensaryId;
    }
    
    // Users Collection
    match /users/{userId} {
      // Admins can read/write any user document
      // Users can read/write their own document
      allow read, write: if isAdmin() || isOwner(userId);
      // Allow creation for any user (during signup)
      allow create: if request.auth.uid == userId;
    }

    // Dispensaries Collection
    match /dispensaries/{dispensaryId} {
      // Anyone can read approved dispensaries
      allow read: if resource.data.status == 'Approved';
      // Admins can read/write any dispensary document
      // Owners can write to their own dispensary document
      allow write: if isAdmin() || (isAuthenticated() && getUserDispensaryId(request.auth.uid) == dispensaryId);
      // Allow creation for authenticated users
      allow create: if isAuthenticated();
    }
    
    // Dispensary Types Collection
    match /dispensaryTypes/{typeId} {
        // Public read access for all
        allow read: if true;
        // Only admins can create, update, or delete types
        allow write: if isAdmin();
    }
    
    // Dispensary Type Product Categories Collection
    match /dispensaryTypeProductCategories/{docId} {
        // Public read access
        allow read: if true;
        // Only admins can write
        allow write: if isAdmin();
    }
    
    // Products Collection
    match /products/{productId} {
        // Public read access
        allow read: if true;
        // Only owners of the dispensary can write to their products
        allow write: if isAuthenticated() && getUserDispensaryId(request.auth.uid) == resource.data.dispensaryId;
        allow create: if isAuthenticated();
    }
    
    // Credit Packages Collection
    match /creditPackages/{packageId} {
        // Public read access for active packages
        allow read: if resource.data.isActive == true;
        // Only admins can write
        allow write: if isAdmin();
    }

    // My Seeded Collection (for strain search)
    match /my-seeded-collection/{strainId} {
        // **THIS IS THE FIX**: Allow any authenticated user to read from this collection
        allow read: if isAuthenticated();
        // Keep write access restricted to admins
        allow write: if isAdmin();
    }

    // Product Requests Collection
    match /productRequests/{requestId} {
      // Only the requester or the owner of the product can read the request
      allow read: if isAuthenticated() && (getUserDispensaryId(request.auth.uid) == resource.data.requesterDispensaryId || getUserDispensaryId(request.auth.uid) == resource.data.productOwnerDispensaryId || isAdmin());
      // Allow creation for authenticated users
      allow create: if isAuthenticated();
      // Allow updates from requester, owner, or admin
      allow update: if isAuthenticated() && (getUserDispensaryId(request.auth.uid) == resource.data.requesterDispensaryId || getUserDispensaryId(request.auth.uid) == resource.data.productOwnerDispensaryId || isAdmin());
    }

    // Pool Issues Collection
    match /poolIssues/{issueId} {
      // Only involved parties or admins can read/write
      allow read, write: if isAdmin() || (isAuthenticated() && (getUserDispensaryId(request.auth.uid) == resource.data.reporterDispensaryId || getUserDispensaryId(request.auth.uid) == resource.data.reportedDispensaryId));
      allow create: if isAuthenticated();
    }
    
    // Notifications Collection
    match /notifications/{notificationId} {
      // Users can read/update their own notifications
      allow read, update: if isOwner(resource.data.recipientUid);
      // Functions write notifications, so no client-side create needed generally. Admins can create if necessary.
      allow create: if isAdmin();
    }
    
    // AI Interaction Log Collection
    match /aiInteractionsLog/{logId} {
       // Users can read their own logs. Admins can read all.
       allow read: if isAdmin() || isOwner(resource.data.userId);
       // Logs should only be created by backend functions, not clients.
       allow write: if false; 
    }

    // Sticker Sets Collection
    match /stickersets/{stickerSetId} {
      // Public read for public sets
      allow read: if resource.data.isPublic == true;
      // Creator can read/write their own. Admins can read/write all.
      allow read, write: if isAdmin() || isOwner(resource.data.creatorUid);
      // Allow authenticated users to create
      allow create: if isAuthenticated();
    }

    // Scrape Logs & History - Admin Only
    match /scrapeLogs/{logId} {
      allow read, write: if isAdmin();
    }
    match /importsHistory/{historyId} {
      allow read, write: if isAdmin();
    }
    match /justbrand_catalog/{categoryId} {
        allow read, write: if isAdmin();
        match /products/{productId} {
            allow read, write: if isAdmin();
        }
    }
  }
}
