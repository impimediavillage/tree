
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is a Super Admin
    function isSuperAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    // Helper function to check if the user is the owner of a document
    function isOwner(doc) {
      return request.auth.uid == doc.data.uid || request.auth.uid == doc.data.ownerId || request.auth.uid == doc.data.creatorUid;
    }

    // Helper function to check if the user is a staff member of a dispensary
    function isStaff(dispensaryId) {
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return userDoc.role == 'DispensaryStaff' && userDoc.dispensaryId == dispensaryId;
    }

    // Helper function to check if the user is the owner of a dispensary
    function isDispensaryOwner(dispensaryId) {
        let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
        return userDoc.role == 'DispensaryOwner' && userDoc.dispensaryId == dispensaryId;
    }

    // Users can only read/update their own profile. Super Admins can manage all users.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isSuperAdmin();
      allow create, delete: if isSuperAdmin();
    }

    // Public read for approved dispensaries. Only owner or Super Admin can create/update/delete.
    match /dispensaries/{dispensaryId} {
      allow read: if resource.data.status == 'Approved' || isOwner(resource) || isSuperAdmin();
      allow create: if request.auth != null; // Any authenticated user can apply
      allow update: if isOwner(resource) || isSuperAdmin();
      allow delete: if isSuperAdmin();
    }

    // Public can read dispensary types. Only Super Admin can manage them.
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    // Public can read product categories. Only Super Admin can manage them.
    match /dispensaryTypeProductCategories/{docId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }

    // Public read for products. Write access for dispensary owner/staff or super admin.
    match /products/{productId} {
      allow read: if true;
      allow create: if isDispensaryOwner(request.resource.data.dispensaryId) || isStaff(request.resource.data.dispensaryId) || isSuperAdmin();
      allow update, delete: if isDispensaryOwner(resource.data.dispensaryId) || isStaff(resource.data.dispensaryId) || isSuperAdmin();
    }

    // Requests can be read by the involved parties or super admin.
    // Creation by any authenticated user. Updates are conditional.
    match /productRequests/{requestId} {
      allow read: if request.auth.uid == resource.data.productOwnerId || request.auth.uid == resource.data.requesterId || isSuperAdmin();
      allow create: if request.auth.uid != null;
      allow update: if request.auth.uid == resource.data.productOwnerId || request.auth.uid == resource.data.requesterId || isSuperAdmin();
      allow delete: if isSuperAdmin();
    }
    
    // Pool issues can be created by authenticated users.
    // Read/update by involved parties or super admin.
    match /poolIssues/{issueId} {
      allow create: if request.auth.uid != null;
      allow read, update: if request.auth.uid == resource.data.reporterId || request.auth.uid == resource.data.reportedId || isSuperAdmin();
      allow delete: if isSuperAdmin();
    }
    
    // Notifications are private to the recipient or super admin.
    match /notifications/{notificationId} {
        allow read, update: if request.auth.uid == resource.data.recipientUid || isSuperAdmin();
        allow create, delete: if isSuperAdmin();
    }
    
    // Credit packages can be read by anyone, but only managed by super admin.
    match /creditPackages/{packageId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }
    
    // AI interaction logs are private to the user or super admin.
    match /aiInteractionsLog/{logId} {
        allow read, create: if request.auth.uid == resource.data.userId || isSuperAdmin();
        allow write: if isSuperAdmin();
    }
    
    // Sticker sets can be read by anyone if public.
    // Creator or admin can manage.
    match /stickersets/{setId} {
      allow read: if resource.data.isPublic == true || isOwner(resource) || isSuperAdmin();
      allow create: if request.auth.uid != null;
      allow update: if isOwner(resource) || isSuperAdmin();
      allow delete: if isOwner(resource) || isSuperAdmin();
    }

    // Seed data collections
    match /my-seeded-collection/{docId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }
    
    match /importsHistory/{docId} {
        allow read, write: if isSuperAdmin();
    }
    
    match /scrapeLogs/{docId} {
        allow read, write: if isSuperAdmin();
    }
    
    match /justbrand_catalog/{docId} {
        allow read, write: if isSuperAdmin();
    }
  }
}
