
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isSuperAdmin() {
      return isSignedIn() && request.auth.token.role == 'Super Admin';
    }

    function isOwnerOfDispensary(dispensaryId) {
      return isSignedIn() && request.auth.token.dispensaryId == dispensaryId;
    }
    
    function isOwnerOfDoc() {
      return request.auth.uid == resource.data.uid;
    }

    // Collection: users
    match /users/{userId} {
      // Super Admin can do anything.
      // A user can read/write their own document.
      allow read, write: if isSuperAdmin() || (isSignedIn() && request.auth.uid == userId);
    }
    
    // Collection: dispensaries
    match /dispensaries/{dispensaryId} {
      // Anyone can read an approved dispensary.
      allow get: if resource.data.status == 'Approved';
      // Super admins can list/read all.
      allow list: if isSuperAdmin();
      // Super Admins or the assigned owner can write to it.
      allow write: if isSuperAdmin() || isOwnerOfDispensary(dispensaryId);
      // Let anyone create a dispensary application.
      allow create: if true;
    }

    // Collection: dispensaryTypes
    match /dispensaryTypes/{typeId} {
      // Anyone can read types.
      allow read: if true;
      // Only super admins can write.
      allow write: if isSuperAdmin();
    }
    
    // Collection: dispensaryTypeProductCategories
    match /dispensaryTypeProductCategories/{docId} {
        // Owners need to read this to build the product form.
        allow get: if isSignedIn();
        // Super Admins can write.
        allow write: if isSuperAdmin();
    }
    
    // Collection: products
    match /products/{productId} {
        // Anyone can read any product.
        allow read: if true;
        // Only the owner of the dispensary can create/update/delete products for it.
        allow write: if isOwnerOfDispensary(request.resource.data.dispensaryId);
    }

    // Collection: productRequests
    match /productRequests/{requestId} {
        // Only involved parties or super admins can read.
        allow get: if isSuperAdmin() || isOwnerOfDispensary(resource.data.productOwnerDispensaryId) || isOwnerOfDispensary(resource.data.requesterDispensaryId);
        // Only involved parties can create/update.
        allow write: if isOwnerOfDispensary(request.resource.data.productOwnerDispensaryId) || isOwnerOfDispensary(request.resource.data.requesterDispensaryId);
        // Super admin can update/delete.
        allow update, delete: if isSuperAdmin();
    }

    // Collection: notifications
    match /notifications/{notificationId} {
        // Only the recipient or a super admin can access.
        allow read, write: if isSuperAdmin() || (isSignedIn() && resource.data.recipientUid == request.auth.uid);
    }
    
    // Collection: poolIssues
    match /poolIssues/{issueId} {
        // Super admins can manage all issues.
        allow read, write: if isSuperAdmin();
        // Involved parties can create them.
        allow create: if isOwnerOfDispensary(request.resource.data.reporterDispensaryId);
    }

    // Collection: aiInteractionsLog
    match /aiInteractionsLog/{logId} {
      // User can create their own logs.
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      // User can read their own logs. Super Admin can read all.
      allow read: if isSuperAdmin() || (isSignedIn() && resource.data.userId == request.auth.uid);
    }
    
    // Collection: creditPackages
    match /creditPackages/{packageId} {
      // Anyone can read active packages.
      allow read: if resource.data.isActive == true;
      // Super admins can manage all packages.
      allow write: if isSuperAdmin();
      allow list: if isSuperAdmin();
    }
    
    // Collection: my-seeded-collection (for strain lookups)
    match /my-seeded-collection/{strainId} {
      // Any authenticated user (e.g., dispensary owner adding a product) can read.
      allow read: if isSignedIn();
      // Only super admins can write to the seed data.
      allow write: if isSuperAdmin();
    }
    
    // Collection: stickersets
    match /stickersets/{setId} {
        // Anyone can read public sets.
        allow get: if resource.data.isPublic == true;
        allow list: if true; // Allow browsing
        // Only the creator can create/update/delete their own sets.
        allow write: if isSignedIn() && request.resource.data.creatorUid == request.auth.uid;
        // Super admins have full access.
        allow read, update, delete: if isSuperAdmin();
    }
    
    // Any other collections (scrapeLogs, importsHistory) are admin-only
    match /{path=**}/{docId} {
        allow read, write: if isSuperAdmin();
    }
  }
}
