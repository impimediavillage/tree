rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }

    function isDispensaryOwner(dispensaryId) {
      return request.auth.token.role == 'DispensaryOwner' && request.auth.token.dispensaryId == dispensaryId;
    }
    
    function isDispensaryStaff(dispensaryId) {
       return request.auth.token.role == 'DispensaryStaff' && request.auth.token.dispensaryId == dispensaryId;
    }

    function isOwnerOrStaff(dispensaryId) {
      return isDispensaryOwner(dispensaryId) || isDispensaryStaff(dispensaryId);
    }
    
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwnerOf(userId) {
      return request.auth.uid == userId;
    }

    // Global rule: Super Admins have universal access. This is checked first.
    match /{document=**} {
      allow read, write: if isSuperAdmin();
    }

    // USERS collection
    match /users/{userId} {
      // Any authenticated user can read their own profile data.
      // A Super Admin can read/write any user profile (covered by global rule).
      allow read, update: if isSignedIn() && isOwnerOf(userId);
      // Allow creation by anyone (for signup)
      allow create: if isSignedIn();
    }

    // DISPENSARIES collection
    match /dispensaries/{dispensaryId} {
      // Anyone can create a dispensary (application)
      allow create: if true;
      // Approved dispensaries can be read by anyone
      allow read: if resource.data.status == 'Approved';
      // Only the owner can update their own dispensary profile
      allow update: if isOwnerOrStaff(dispensaryId);
    }
    
    // DISPENSARY TYPES collection
    match /dispensaryTypes/{typeId} {
        // Anyone can read the types of dispensaries available
        allow read: if true;
        // Only Super Admins can create/update/delete types (covered by global rule)
    }
    
    // DISPENSARY TYPE CATEGORIES collection
    match /dispensaryTypeProductCategories/{docId} {
        // Anyone can read the product categories for a type
        allow read: if true;
    }

    // PRODUCTS collection
    match /products/{productId} {
      // Any owner/staff can create a product for their own dispensary
      allow create: if isOwnerOrStaff(request.resource.data.dispensaryId);
      // Anyone can read any product
      allow read: if true;
      // Only the owner/staff of that dispensary can update/delete their own products
      allow update, delete: if isOwnerOrStaff(resource.data.dispensaryId);
    }

    // PRODUCT REQUESTS collection
    match /productRequests/{requestId} {
      // An authenticated user can create a request
      allow create: if isSignedIn();
      // The product owner/staff OR the requester/staff can read the request
      allow read, update: if isOwnerOrStaff(resource.data.productOwnerDispensaryId) || isOwnerOrStaff(resource.data.requesterDispensaryId);
    }
    
    // NOTIFICATIONS collection
    match /notifications/{notificationId} {
        // Only the recipient can read/update/delete their own notifications
        allow read, update, delete: if isSignedIn() && resource.data.recipientUid == request.auth.uid;
    }
    
    // AI INTERACTIONS LOG collection
    match /aiInteractionsLog/{logId} {
        // Only the user who made the interaction can read it
        allow read: if isSignedIn() && resource.data.userId == request.auth.uid;
        // Creation is handled by backend functions
    }
    
    // CREDIT PACKAGES collection
    match /creditPackages/{packageId} {
        // Anyone can read active credit packages
        allow read: if resource.data.isActive == true;
        // Creation/updates handled by Super Admin (covered by global rule)
    }
    
    // POOL ISSUES collection
    match /poolIssues/{issueId} {
        allow create: if isSignedIn();
        // Only involved parties can read, Super Admin can manage (covered by global rule)
        allow read: if isSignedIn() && (resource.data.reporterEmail == request.auth.email || resource.data.reportedDispensaryEmail == request.auth.email);
    }
    
    // STICKERSETS collection
    match /stickersets/{setId} {
        allow create: if isSignedIn();
        allow read: if resource.data.isPublic == true;
        allow update, delete: if isSignedIn() && resource.data.creatorUid == request.auth.uid;
    }
    
    // Catch-all for any other collections - deny by default
    match /{path=**} {
      allow read, write: if false;
    }
  }
}
