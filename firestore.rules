rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for Super Admin role
    function isSuperAdmin() {
      return request.auth != null && request.auth.token.role == 'Super Admin';
    }

    // Helper function to check if the user is the owner of a document
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Helper function to check for any authenticated user
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Match all collections to give Super Admins full access
    match /{document=**} {
      allow read, write: if isSuperAdmin();
    }

    // Public read access for collections needed by unauthenticated users
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    match /creditPackages/{packageId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /stickersets/{setId} {
      allow read: if true; 
      allow write: if isOwner(resource.data.creatorUid);
    }

    // Rules for Dispensaries
    match /dispensaries/{dispensaryId} {
      // Anyone can submit a dispensary application
      allow create: if true; 
      // Authenticated users can view approved dispensaries
      allow read: if isAuthenticated();
      // Only SuperAdmins can update/delete
      allow update, delete: if isSuperAdmin();
    }
    
    // Rules for Users
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      // SuperAdmins can create/delete users (covered by wildcard rule)
    }

    // Fallback for other collections - deny all access unless specified otherwise
    match /{path=**} {
      allow read, write: if isSuperAdmin();
    }
  }
}
