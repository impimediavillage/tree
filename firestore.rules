
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return request.auth.token.role == 'Super Admin';
    }

    // Helper function to check if a user is the owner of a document
    function isOwner(ownerId) {
      return request.auth.uid == ownerId;
    }
    
    // Helper function to check if user is owner of the dispensary
    function isDispensaryOwner(dispensaryId) {
        return request.auth.token.dispensaryId == dispensaryId;
    }

    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Admins can do anything
    match /{document=**} {
        allow read, write: if isAdmin();
    }
    
    // Read-only access for public data
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /dispensaryTypeProductCategories/{docId} {
      allow read: if request.auth != null; // Any authenticated user can read categories for forms
      allow write: if isAdmin();
    }

    match /dispensaries/{dispensaryId} {
      allow read: if resource.data.status == 'Approved' || isDispensaryOwner(dispensaryId) || isAdmin();
      allow create: if request.auth != null; // Logged in users can apply
      allow update: if isDispensaryOwner(dispensaryId) || isAdmin();
      allow delete: if isAdmin();
    }

    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if request.auth != null; // Allow user creation on signup
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }

    match /products/{productId} {
      allow read: if resource.data.isAvailableForPool == true || isDispensaryOwner(resource.data.dispensaryId) || isAdmin();
      allow create: if isDispensaryOwner(request.resource.data.dispensaryId);
      allow update: if isDispensaryOwner(resource.data.dispensaryId);
      allow delete: if isDispensaryOwner(resource.data.dispensaryId);
    }
    
    match /productRequests/{requestId} {
        allow read, update: if isDispensaryOwner(resource.data.productOwnerDispensaryId) || isDispensaryOwner(resource.data.requesterDispensaryId) || isAdmin();
        allow create: if isDispensaryOwner(request.resource.data.requesterDispensaryId);
        allow delete: if isAdmin();
    }
    
    match /poolIssues/{issueId} {
        allow read, update: if isAdmin();
        allow create: if isDispensaryOwner(request.resource.data.reporterDispensaryId);
    }
    
    match /creditPackages/{packageId} {
        allow read: if true;
        allow create, update, delete: if isAdmin();
    }

    match /aiInteractionsLog/{logId} {
      allow read, create: if isOwner(request.resource.data.userId) || isDispensaryOwner(request.resource.data.dispensaryId) || isAdmin();
    }
    
    match /notifications/{notificationId} {
      allow read, update: if isOwner(resource.data.recipientUid);
      allow create: if request.auth != null; // Allow backend services to create notifications
    }
    
    match /stickersets/{stickerId} {
        allow read: if resource.data.isPublic == true || isOwner(resource.data.creatorUid) || isAdmin();
        allow create: if request.auth.uid == request.resource.data.creatorUid;
        allow update, delete: if isOwner(resource.data.creatorUid) || isAdmin();
    }
    
    // Seed data collection for strains - allow read for authenticated users
    match /my-seeded-collection/{strainId} {
        allow read: if request.auth != null;
        allow update: if request.auth != null; // Allow updating image url
        allow write: if isAdmin(); // Only admins can add/delete strains
    }
  }
}
