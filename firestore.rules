
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if user is a Super Admin
    function isSuperAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    // Helper function to check if a user is an owner of a specific dispensary
    function isDispensaryOwner(dispensaryId) {
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return userDoc.role == 'DispensaryOwner' && userDoc.dispensaryId == dispensaryId;
    }

    // Helper function to check if a user is staff of a specific dispensary
    function isDispensaryStaff(dispensaryId) {
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return userDoc.role == 'DispensaryStaff' && userDoc.dispensaryId == dispensaryId;
    }
    
    // Helper function to check if the user is an owner OR staff of a specific dispensary
    function isOwnerOrStaff(dispensaryId) {
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return (userDoc.role == 'DispensaryOwner' || userDoc.role == 'DispensaryStaff') && userDoc.dispensaryId == dispensaryId;
    }

    // Users can only read/write their own user document. Super Admins can read/write any.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isSuperAdmin();
      allow create: if isSuperAdmin() || request.auth.uid != null;
      allow delete: if isSuperAdmin();
    }
    
    // Public read for approved dispensaries. Only owners/admins can write.
    match /dispensaries/{dispensaryId} {
      allow read: if resource.data.status == 'Approved' || isOwnerOrStaff(dispensaryId) || isSuperAdmin();
      allow list: if isSuperAdmin(); // Only super admin can list all
      allow create, update: if isOwnerOrStaff(dispensaryId) || isSuperAdmin();
      allow delete: if isSuperAdmin();
    }
    
    // Anyone can read dispensary types. Only super admins can manage them.
    match /dispensaryTypes/{typeId} {
        allow read: if true;
        allow write, delete: if isSuperAdmin();
    }

    // Anyone can read product categories for dispensary types. Only super admins can manage them.
    match /dispensaryTypeProductCategories/{docId} {
        allow read: if true;
        allow write, delete: if isSuperAdmin();
    }

    // Products can be read by anyone. Writes are restricted.
    match /products/{productId} {
      allow read: if true;
      allow list: if request.query.where.dispensaryId == request.auth.token.dispensaryId || isSuperAdmin();
      allow create: if isOwnerOrStaff(request.resource.data.dispensaryId);
      allow update, delete: if isOwnerOrStaff(resource.data.dispensaryId);
    }
    
    // Product Requests should only be visible to participants or super admins.
    match /productRequests/{requestId} {
      allow read: if isOwnerOrStaff(resource.data.requesterDispensaryId) || isOwnerOrStaff(resource.data.productOwnerDispensaryId) || isSuperAdmin();
      allow list: if request.query.where.productOwnerDispensaryId == request.auth.token.dispensaryId || request.query.where.requesterDispensaryId == request.auth.token.dispensaryId || isSuperAdmin();
      allow create: if isOwnerOrStaff(request.resource.data.requesterDispensaryId);
      allow update: if isOwnerOrStaff(resource.data.requesterDispensaryId) || isOwnerOrStaff(resource.data.productOwnerDispensaryId) || isSuperAdmin();
    }
    
    // Only admins can see and manage pool issues.
    match /poolIssues/{issueId} {
      allow read, write, list: if isSuperAdmin();
    }

    // Interaction logs are private to the user or their dispensary owner/admin.
    match /aiInteractionsLog/{logId} {
      allow read: if resource.data.userId == request.auth.uid || 
                     (resource.data.dispensaryId != null && isOwnerOrStaff(resource.data.dispensaryId)) || 
                     isSuperAdmin();
      allow list: if request.query.where.userId == request.auth.uid || (request.query.where.dispensaryId != null && request.query.where.dispensaryId == request.auth.token.dispensaryId) || isSuperAdmin();
      allow create: if request.resource.data.userId == request.auth.uid;
    }
    
    // Credit packages can be read by anyone, but only managed by admins.
    match /creditPackages/{packageId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    // Notifications are private to the recipient.
    match /notifications/{notificationId} {
      allow read, write, delete: if resource.data.recipientUid == request.auth.uid;
      allow list: if request.query.where.recipientUid == request.auth.uid;
    }

    // Sticker sets are public to read, but write access is restricted to creator or admin
    match /stickersets/{stickerSetId} {
        allow read: if true;
        allow create: if request.resource.data.creatorUid == request.auth.uid;
        allow update, delete: if resource.data.creatorUid == request.auth.uid || isSuperAdmin();
    }

    match /my-seeded-collection/{docId} {
      allow read: if true;
      allow write: if false; // Data is seeded, not user-writable
    }

    match /importsHistory/{docId} {
        allow read: if isSuperAdmin();
        allow write: if isSuperAdmin();
    }

  }
}
