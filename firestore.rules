
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if user is Super Admin
    function isSuperAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    // Helper function to check if user is owner/staff of a specific dispensary
    function isDispensaryMember(dispensaryId) {
      return request.auth != null &&
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == dispensaryId;
    }
    
    // Helper function to check if the dispensary the user belongs to is approved
    function isDispensaryApproved() {
        let dispensaryId = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId;
        return dispensaryId != null && 
               exists(/databases/$(database)/documents/dispensaries/$(dispensaryId)) &&
               get(/databases/$(database)/documents/dispensaries/$(dispensaryId)).data.status == 'Approved';
    }


    // ==== PUBLIC COLLECTIONS ====

    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    match /dispensaryTypeProductCategories/{docId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /dispensaries/{dispensaryId} {
        // Public users can read approved dispensaries
        allow get: if resource.data.status == 'Approved';
        // Public users can list/query approved dispensaries
        allow list: if resource.data.status == 'Approved';
        // Dispensary members can read their own dispensary doc
        allow read: if isDispensaryMember(dispensaryId);
        // Only super admins can write to any dispensary
        allow write: if isSuperAdmin();
    }
    
    match /products/{productId} {
        // Anyone can read any product
        allow get: if true;
        // Anyone can list products
        allow list: if true;
        // Only approved dispensary members can write to products linked to their dispensary
        allow write: if isDispensaryMember(request.resource.data.dispensaryId) && isDispensaryApproved();
    }

    match /stickersets/{stickerSetId} {
        allow get: if true;
        allow list: if request.query.limit <= 8; // Allow limited public listing for 'featured' section
        allow create: if request.auth != null; // Any authenticated user can create
        allow update, delete: if resource.data.creatorUid == request.auth.uid || isSuperAdmin();
    }
    
    match /creditPackages/{packageId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }


    // ==== AUTHENTICATED & ROLE-BASED COLLECTIONS ====

    match /users/{userId} {
      // Users can read/write their own document
      allow read, update: if request.auth.uid == userId;
      // Super Admins can read/write any user document
      allow read, write: if isSuperAdmin();
      // Dispensary owners can list users belonging to their own dispensary
      allow list: if isDispensaryApproved() && isDispensaryMember(get(/databases/$(database)/documents/users/$(userId)).data.dispensaryId);
    }
    
    match /productRequests/{requestId} {
        allow read, write: if request.auth != null && 
                             (isDispensaryMember(resource.data.productOwnerDispensaryId) || 
                              isDispensaryMember(resource.data.requesterDispensaryId));
        allow create: if request.auth != null && isDispensaryApproved();
        allow list, delete: if isSuperAdmin(); // Only super admins can list/delete all for now
    }

    match /poolIssues/{issueId} {
      allow create: if request.auth != null && isDispensaryApproved();
      allow read, write: if isSuperAdmin();
    }

    match /aiInteractionsLog/{logId} {
        allow create: if request.auth.uid == request.resource.data.userId;
        allow read: if request.auth.uid == resource.data.userId || isSuperAdmin();
        allow list: if isSuperAdmin(); // Prevent general listing
    }
    
    match /notifications/{notificationId} {
        allow read, write: if request.auth.uid == resource.data.recipientUid;
        allow create, delete: if isSuperAdmin();
    }
    
    match /importsHistory/{logId} {
      allow read, write: if isSuperAdmin();
    }
  }
}
