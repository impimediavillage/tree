rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    
    // Checks if the requesting user has the 'Super Admin' role.
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }
    
    // Checks if the requesting user's UID matches the document's UID.
    // Useful for collections where the document ID is the user's UID.
    function isSelf(userId) {
      return request.auth.uid == userId;
    }

    // Checks if the requesting user owns the dispensary associated with a resource.
    function isOwner(dispensaryId) {
      return request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == dispensaryId;
    }

    // --- Collection Rules ---

    match /users/{userId} {
      allow read: if request.auth.uid != null || isSuperAdmin();
      allow write: if isSelf(userId) || isSuperAdmin();
    }

    match /dispensaries/{dispensaryId} {
      allow create: if true; // Public can create applications
      allow read: if resource.data.status == 'Approved' || isOwner(dispensaryId) || isSuperAdmin();
      allow update: if isOwner(dispensaryId) || isSuperAdmin();
      allow delete: if isSuperAdmin(); // Only Super Admins can delete dispensaries
    }
    
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    match /dispensaryTypeProductCategories/{docId} {
      allow read: if request.auth.uid != null || isSuperAdmin();
      allow write: if isSuperAdmin();
    }

    match /products/{productId} {
      allow read: if true;
      // Allow create/update/delete if the user owns the dispensary OR is a Super Admin.
      allow create: if isOwner(request.resource.data.dispensaryId) || isSuperAdmin();
      allow update, delete: if isOwner(resource.data.dispensaryId) || isSuperAdmin();
    }

    match /productRequests/{requestId} {
      // Allow if user is part of the request (owner/requester) or Super Admin
      allow read, write: if request.auth.uid != null || isSuperAdmin();
    }
    
    match /poolIssues/{issueId} {
      // Allow if user is involved or is Super Admin
      allow read, write: if request.auth.uid != null || isSuperAdmin();
    }
    
    match /notifications/{notificationId} {
      // Allow read/write only by the recipient user or a Super Admin
      allow read, write: if request.auth.uid == resource.data.recipientUid || isSuperAdmin();
    }
    
    match /creditPackages/{packageId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /aiInteractionsLog/{logId} {
      // Allow read only by the user who created the log or Super Admin
      allow read: if request.auth.uid == resource.data.userId || isSuperAdmin();
      // Writes should be handled by backend functions only
      allow write: if false; 
    }

    match /stickersets/{setId} {
      allow read: if resource.data.isPublic == true || (request.auth.uid != null && request.auth.uid == resource.data.creatorUid) || isSuperAdmin();
      allow create: if request.auth.uid != null;
      allow update, delete: if (request.auth.uid != null && request.auth.uid == resource.data.creatorUid) || isSuperAdmin();
    }
  }
}
