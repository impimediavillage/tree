
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for any authenticated user
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to check for Super Admin role
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }
    
    // Helper function to check if the user is the owner of a document
    function isOwner(docData) {
      return request.auth.uid == docData.uid;
    }

    // Helper function to check if the user is associated with a specific dispensary
    function isDispensaryMember(dispensaryId) {
      return request.auth.token.dispensaryId == dispensaryId;
    }

    // Helper function to check if the user is a DispensaryOwner or Staff
    function isDispensaryOwnerOrStaff(dispensaryId) {
       return request.auth.token.role == 'DispensaryOwner' && isDispensaryMember(dispensaryId);
    }
    
    // Users Collection
    match /users/{userId} {
      // Allow users to read their own document
      allow get: if isSignedIn() && request.auth.uid == userId;
      // Allow users to update their own document, but not change role or dispensaryId
      allow update: if isSignedIn() && request.auth.uid == userId 
                    && !(request.resource.data.role != resource.data.role)
                    && !(request.resource.data.dispensaryId != resource.data.dispensaryId);
      // Only Super Admins can create or delete users directly
      allow create, delete: if isSuperAdmin();
      // Allow Super Admins to update any user field
      allow update: if isSuperAdmin();
      // Allow Dispensary Owners to update users linked to their dispensary (e.g., status)
      allow update: if isDispensaryOwnerOrStaff(resource.data.dispensaryId) && !(request.resource.data.role != resource.data.role);
    }

    // Dispensaries Collection
    match /dispensaries/{dispensaryId} {
      // Anyone can create a dispensary application
      allow create: if true;
      // Approved dispensaries are public
      allow get: if resource.data.status == 'Approved';
      // Only the linked owner or Super Admin can read non-approved dispensaries
      allow get: if isSuperAdmin() || isDispensaryOwnerOrStaff(dispensaryId);
      // Only the linked owner can update their own dispensary (with field restrictions)
      allow update: if isDispensaryOwnerOrStaff(dispensaryId) 
                    && !(request.resource.data.status != resource.data.status)
                    && !(request.resource.data.ownerEmail != resource.data.ownerEmail);
      // Super Admins can update any dispensary field
      allow update: if isSuperAdmin();
      // Only Super Admin can delete
      allow delete: if isSuperAdmin();
    }
    
    // Products Collection
    match /products/{productId} {
      // Anyone can read products
      allow get: if true;
      // Only the linked dispensary owner/staff can create, update, or delete products
      allow create, update, delete: if isDispensaryOwnerOrStaff(request.resource.data.dispensaryId);
    }

    // Dispensary Types Collection
    match /dispensaryTypes/{typeId} {
      // Anyone can read the types of dispensaries
      allow get: if true;
      // Only Super Admins can create, update, or delete types
      allow create, update, delete: if isSuperAdmin();
    }
    
    // Dispensary Type Product Categories
    match /dispensaryTypeProductCategories/{docId} {
      allow get: if true;
      allow list: if true;
      allow create, update, delete: if isSuperAdmin();
    }

    // Product Requests Collection
    match /productRequests/{requestId} {
      // Allow creation by any authenticated user who is part of a dispensary
      allow create: if isSignedIn() && request.auth.token.dispensaryId != null;
      // Allow involved parties (requester or owner) and Super Admins to read/update
      allow get, update: if isSuperAdmin() || isDispensaryMember(resource.data.requesterDispensaryId) || isDispensaryMember(resource.data.productOwnerDispensaryId);
      // Only the requester or a Super Admin can delete
      allow delete: if isSuperAdmin() || isDispensaryMember(resource.data.requesterDispensaryId);
    }
    
    // Pool Issues Collection
    match /poolIssues/{issueId} {
      // Allow creation by authenticated dispensary members
      allow create: if isSignedIn() && request.auth.token.dispensaryId != null;
      // Only Super Admins can manage issues
      allow get, update, delete, list: if isSuperAdmin();
    }

    // AI Interactions Log Collection
    match /aiInteractionsLog/{logId} {
      // Only the user who created the log can read it, or a Super Admin
      allow get: if isSuperAdmin() || isOwner(resource.data);
      // Creation is handled by backend Cloud Function, which has admin privileges
      allow create: if isSignedIn();
      allow update, delete: if isSuperAdmin();
    }

    // Credit Packages Collection
    match /creditPackages/{packageId} {
      // Anyone can read active credit packages
      allow get, list: if resource.data.isActive == true || isSuperAdmin();
      // Only Super Admins can create, update, or delete packages
      allow create, update, delete: if isSuperAdmin();
    }
    
    // Notifications Collection
    match /notifications/{notificationId} {
      // Only the recipient of the notification can read/update it
      allow get, update: if isOwner(resource.data);
      // Deletion allowed for owner as well
      allow delete: if isOwner(resource.data);
      // Creation is handled by backend functions
      allow create: if isSignedIn();
    }
    
    // Sticker Sets Collection
    match /stickersets/{setId} {
        // Public sets can be read by anyone, private sets only by the creator/admin
        allow get, list: if resource.data.isPublic == true || (isSignedIn() && (isOwner(resource.data) || isSuperAdmin()));
        // Only authenticated users can create
        allow create: if isSignedIn();
        // Only the creator or a Super Admin can update/delete
        allow update, delete: if isSignedIn() && (isOwner(resource.data) || isSuperAdmin());
    }

  }
}
