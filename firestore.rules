
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user has a specific role
    function hasRole(role) {
      return request.auth.token.role == role;
    }
    
    // Helper function to check if a user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Helper function to check if user is associated with a specific dispensary
    function isDispensaryMember(dispensaryId) {
        return request.auth.token.dispensaryId == dispensaryId;
    }

    // PUBLIC: Anyone can read approved dispensaries and their types
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if hasRole('Super Admin');
    }
    match /dispensaries/{dispensaryId} {
      allow read: if resource.data.status == 'Approved';
      allow create: if true; // Public signup
      allow update, delete: if hasRole('Super Admin') || (hasRole('DispensaryOwner') && isDispensaryMember(dispensaryId));
    }
    
    // USERS: Can read/update their own profile. Admins can manage all.
    match /users/{userId} {
      allow read, update: if isOwner(userId) || hasRole('Super Admin');
      allow create, delete: if hasRole('Super Admin');
      allow list: if hasRole('Super Admin');
    }

    // PRODUCTS: Public read, restricted write
    match /{collectionId}/{productId} {
        // This rule applies to any collection like 'products', 'cannibinoid_store_products', etc.
        function isProductCollection() {
            return collectionId.matches('.*_products');
        }

        allow read: if isProductCollection();
        allow write: if isProductCollection() && request.auth != null && 
                        (hasRole('DispensaryOwner') || hasRole('DispensaryStaff')) &&
                        isDispensaryMember(request.resource.data.dispensaryId);
    }
    
    // PRODUCT REQUESTS & POOL ISSUES: Restricted access based on roles and dispensary ID
    match /productRequests/{requestId} {
        allow read, update: if request.auth != null && (isDispensaryMember(resource.data.requesterDispensaryId) || isDispensaryMember(resource.data.productOwnerDispensaryId) || hasRole('Super Admin'));
        allow create: if request.auth != null && (hasRole('DispensaryOwner') || hasRole('DispensaryStaff'));
    }
    
    match /poolIssues/{issueId} {
        allow read, create, update: if request.auth != null && (hasRole('DispensaryOwner') || hasRole('DispensaryStaff') || hasRole('Super Admin'));
    }
    
    // ADMIN-ONLY: Full access for Super Admins on specific collections
    match /aiInteractionsLog/{logId} {
      allow read, list: if hasRole('Super Admin') || isOwner(resource.data.userId);
      allow create: if request.auth != null; 
    }
    
    match /creditPackages/{packageId} {
        allow read: if true;
        allow write: if hasRole('Super Admin');
    }
    
    match /dispensaryTypeProductCategories/{docId} {
        allow read: if true;
        allow write: if hasRole('Super Admin');
    }
    
    match /my-seeded-collection/{strainId} {
        allow read: if true;
    }
    
    match /stickersets/{setId} {
        allow read: if resource.data.isPublic == true;
        allow create: if request.auth != null;
        allow update, delete: if request.auth != null && (isOwner(resource.data.creatorUid) || hasRole('Super Admin'));
    }
  }
}
