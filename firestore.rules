rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Dispensary signups (public can create, admin manages)
    match /dispensaries/{dispensaryId} {
      allow create; // Allow anyone to submit an application
      allow read, update, delete: if request.auth != null && request.auth.token.role == 'Super Admin';
    }

    // Dispensary Types (public can read, admin manages)
    match /dispensaryTypes/{typeId} {
      allow read: if true; // Allow anyone to read the types for signup forms
      allow write: if request.auth != null && request.auth.token.role == 'Super Admin';
    }
    
    // Product Categories for each type (public can read, admin manages)
    match /dispensaryTypeProductCategories/{docId} {
      allow read: if request.auth != null; // Authenticated users can read for product creation
      allow write: if request.auth != null && request.auth.token.role == 'Super Admin';
    }

    // Users can only manage their own doc, admins can manage any
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow list, create, delete: if request.auth != null && request.auth.token.role == 'Super Admin';
    }
    
    // Only authenticated users can manage their own notifications
    match /notifications/{notificationId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.recipientUid;
      allow create: if request.auth != null; // Allow server-side functions to create notifications
    }

    // Products can be read by anyone, but only written by their owner or an admin
    match /products/{productId} {
      allow read: if true;
      allow create, update: if request.auth != null && (request.auth.uid == resource.data.productOwnerId || request.auth.token.role == 'Super Admin');
      allow delete: if request.auth != null && (request.auth.uid == resource.data.productOwnerId || request.auth.token.role == 'Super Admin');
    }

    // Product Requests can be managed by the involved parties or an admin
    match /productRequests/{requestId} {
      allow create: if request.auth != null;
      allow read, update: if request.auth != null && 
                             (request.auth.uid == resource.data.requesterId || 
                              request.auth.uid == resource.data.productOwnerId || 
                              request.auth.token.role == 'Super Admin');
    }

    // Pool Issues can be read/managed by admins
    match /poolIssues/{issueId} {
      allow read, update, delete: if request.auth != null && request.auth.token.role == 'Super Admin';
      allow create: if request.auth != null; // Any authenticated user can create an issue
    }
    
    // Credit Packages can be read by anyone, but only managed by admins
    match /creditPackages/{packageId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && request.auth.token.role == 'Super Admin';
    }

    // Interaction logs are private
    match /aiInteractionsLog/{logId} {
      allow read, write: if false; // Only accessible via backend functions
    }
    
    // Scrape/Import logs are private
    match /scrapeLogs/{logId} {
      allow read: if request.auth != null && request.auth.token.role == 'Super Admin';
      allow write: if false; // Only backend can write
    }
     match /importsHistory/{logId} {
      allow read: if request.auth != null && request.auth.token.role == 'Super Admin';
      allow write: if false;
    }
    
    // Seeded data can be read by authenticated users
    match /my-seeded-collection/{strainId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && request.auth.token.role == 'Super Admin';
    }
    
    // Scraped catalog data
    match /justbrand_catalog/{categoryId} {
        allow read: if true;
        allow write: if request.auth != null && request.auth.token.role == 'Super Admin';
        match /products/{productId} {
            allow read: if true;
            allow write: if request.auth != null && request.auth.token.role == 'Super Admin';
        }
    }
    
    // Sticker sets
    match /stickersets/{stickerSetId} {
        allow read: if true; // Publicly readable if they are public
        allow create: if request.auth != null; // Any auth user can create
        allow update, delete: if request.auth != null && request.auth.uid == resource.data.creatorUid; // Only creator can manage
    }
  }
}
