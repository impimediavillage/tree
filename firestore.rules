
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }

    function isDispensaryOwner() {
      return request.auth.token.role == 'DispensaryOwner';
    }

    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwnerOfDispensary(dispensaryId) {
      return isDispensaryOwner() && request.auth.token.dispensaryId == dispensaryId;
    }
    
    // Checks if the request is coming from a server-side process (like a Cloud Function)
    function isFromAdminSDK() {
      return request.auth.token.admin == true;
    }

    // Rules for the 'dispensaries' collection
    match /dispensaries/{dispensaryId} {
      allow read: if isSuperAdmin() || (resource.data.status == 'Approved' && isSignedIn());
      allow create: if isSuperAdmin() || isFromAdminSDK(); // Allow functions to create
      allow update: if isSuperAdmin() || 
                      (isOwnerOfDispensary(dispensaryId) &&
                       request.resource.data.ownerEmail == resource.data.ownerEmail && // Cannot change owner email
                       request.resource.data.status == resource.data.status); // Cannot change own status
      allow delete: if isSuperAdmin();
    }
    
    match /dispensaryTypes/{typeId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }
    
    match /dispensaryTypeProductCategories/{docId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      allow read, write: if isSuperAdmin() || isFromAdminSDK(); // Functions need full access to create/update users
      allow read, update: if request.auth.uid == userId; // Users can read/update their own profile
    }

    // Rules for the 'products' collection
    match /products/{productId} {
      allow read: if isSuperAdmin() || get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved'; // Anyone can read products from an approved dispensary
      allow create, update: if isSuperAdmin() || isOwnerOfDispensary(request.resource.data.dispensaryId);
      allow delete: if isSuperAdmin() || isOwnerOfDispensary(resource.data.dispensaryId);
    }
    
     // Rules for the 'stickersets' collection
    match /stickersets/{stickerId} {
        allow read: if true;
        allow create: if isSignedIn(); // Any signed in user can create a set
        allow update, delete: if isSuperAdmin() || request.auth.uid == resource.data.creatorUid; // Only creator or admin can modify/delete
    }

    // Rules for product sharing pool requests
    match /productRequests/{requestId} {
      allow read, update: if isSuperAdmin() || 
                           isOwnerOfDispensary(resource.data.requesterDispensaryId) || 
                           isOwnerOfDispensary(resource.data.productOwnerDispensaryId);
      allow create: if isDispensaryOwner(); // Only owners can create requests
      allow delete: if isSuperAdmin();
    }
    
    // Rules for product sharing pool issues
    match /poolIssues/{issueId} {
      allow read, update, delete: if isSuperAdmin();
      allow create: if isDispensaryOwner(); // Only owners can report issues
    }
    
    // Rules for notifications
    match /notifications/{notificationId} {
      allow read, update, delete: if isSuperAdmin() || request.auth.uid == resource.data.recipientUid;
      allow create: if isFromAdminSDK() || isSuperAdmin(); // Only backend or admins can create notifications
    }
    
    // Rules for AI interaction logs
    match /aiInteractionsLog/{logId} {
      allow read: if isSuperAdmin() || request.auth.uid == resource.data.userId;
      allow create: if isFromAdminSDK(); // Only backend can create logs
      allow write: if isSuperAdmin(); // Admins can manage logs
    }
    
    // Rules for credit packages
    match /creditPackages/{packageId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }
    
    // Rules for seeded strain data (read-only for clients)
    match /my-seeded-collection/{strainId} {
      allow read: if isSignedIn();
      allow write: if isFromAdminSDK() || isSuperAdmin(); // Allow functions/admins to update
    }
    
    // Rules for scraper logs
    match /scrapeLogs/{logId} {
        allow read: if isSuperAdmin();
        allow write: if isFromAdminSDK();
    }
    
    match /importsHistory/{historyId} {
        allow read: if isSuperAdmin();
        allow write: if isFromAdminSDK();
    }
    
    // Rules for JustBrand catalog (read-only for clients)
    match /justbrand_catalog/{categoryId} {
        allow read: if isSuperAdmin();
        allow write: if isFromAdminSDK();
        
        match /products/{productId} {
            allow read: if isSuperAdmin();
            allow write: if isFromAdminSDK();
        }
    }
  }
}
