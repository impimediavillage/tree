rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for Super Admin role from auth token
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }
    
    // Helper function to check if the user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Helper function to check for any authenticated user
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to check if a user is linked to a specific dispensary
    function isDispensaryMember(dispensaryId) {
      return request.auth.token.dispensaryId == dispensaryId;
    }

    // Users collection rules
    match /users/{userId} {
      // Anyone can create their own user document during signup
      allow create: if isSignedIn();
      // Users can read and update their own document. Super Admins can manage any user.
      allow read, update: if isOwner(userId) || isSuperAdmin();
      // Only Super Admins can delete user documents.
      allow delete: if isSuperAdmin();

      // For listing users:
      // Super Admins can list all users.
      // Dispensary Owners can list users associated with their dispensary.
      allow list: if isSuperAdmin() || (isSignedIn() && request.auth.token.dispensaryId != null);
    }

    // Dispensaries collection rules
    match /dispensaries/{dispensaryId} {
      // Anyone can apply to create a dispensary profile
      allow create: if isSignedIn();
      // Public can read approved dispensaries. Owners and Super Admins can read any.
      allow read: if resource.data.status == 'Approved' || (isSignedIn() && isOwner(resource.data.ownerId)) || isSuperAdmin();
      // Only the owner of the dispensary or a Super Admin can update it.
      allow update: if (isSignedIn() && isOwner(resource.data.ownerId)) || isSuperAdmin();
      // Only Super Admins can delete dispensaries.
      allow delete: if isSuperAdmin();
      
      // Super Admins can list all dispensaries.
      allow list: if isSuperAdmin();
    }
    
    // Products collection rules
    match /products/{productId} {
      // Public can read any product.
      allow read: if true;
      // Only a member of the dispensary or a Super Admin can create/update/delete products.
      allow create, update, delete: if isDispensaryMember(resource.data.dispensaryId) || isSuperAdmin();
      
      // Allow dispensary members to list products for their own dispensary, and Super Admins to list all.
      allow list: if (isSignedIn() && request.auth.token.dispensaryId != null) || isSuperAdmin();
    }
    
    // Dispensary Types collection rules (generally public)
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      // Only Super Admins can create, update, or delete types.
      allow create, update, delete: if isSuperAdmin();
    }
    
    // Product Categories rules
    match /dispensaryTypeProductCategories/{docId} {
        allow read: if true;
        // Only Super Admins should be able to modify these structures.
        allow create, update, delete: if isSuperAdmin();
    }

    // Product Requests rules
    match /productRequests/{requestId} {
      // Only authenticated users can interact with requests.
      allow read, update: if isSignedIn() && (isDispensaryMember(resource.data.requesterDispensaryId) || isDispensaryMember(resource.data.productOwnerDispensaryId)) || isSuperAdmin();
      allow create: if isSignedIn();
      allow delete: if isSuperAdmin();
    }
    
    // Pool Issues rules (mostly for admins)
    match /poolIssues/{issueId} {
      allow read, update, delete: if isSuperAdmin();
      allow create: if isSignedIn() && isDispensaryMember(request.resource.data.reporterDispensaryId);
    }
    
    // AI Interactions Log rules
    match /aiInteractionsLog/{logId} {
      // Users can create their own log entries.
      allow create: if isOwner(request.resource.data.userId);
      // Users can read their own logs. Super Admins can read all.
      allow read: if isOwner(resource.data.userId) || isSuperAdmin();
    }
    
    // Credit Packages rules
    match /creditPackages/{packageId} {
      // Public can read active packages.
      allow read: if resource.data.isActive == true || isSuperAdmin();
      // Only Super Admins can manage packages.
      allow create, update, delete, list: if isSuperAdmin();
    }
    
    // Notifications rules
    match /notifications/{notificationId} {
      // Users can read/update their own notifications.
      allow read, update: if isOwner(resource.data.recipientUid);
      // Functions create notifications.
      allow create: if true; 
    }

    // Sticker sets rules
    match /stickersets/{stickerId} {
      // Public can read sets marked as public.
      allow read: if resource.data.isPublic == true || (isSignedIn() && isOwner(resource.data.creatorUid));
      // Authenticated users can create sets.
      allow create: if isSignedIn();
      // Only the creator can update or delete their own sets.
      allow update, delete: if isOwner(resource.data.creatorUid);
    }
    
    // Rules for seeded data and scraper logs (admin only)
    match /my-seeded-collection/{seedId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }
    
    match /scrapeLogs/{logId} {
        allow read, write: if isSuperAdmin();
    }
    
    match /importsHistory/{historyId} {
        allow read, write: if isSuperAdmin();
    }
    
     match /justbrand_catalog/{docId} {
        allow read: if true;
        allow write: if isSuperAdmin();
        match /products/{productId} {
          allow read: if true;
          allow write: if isSuperAdmin();
        }
    }
  }
}