
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper Functions
    function isSuperAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }
    
    function isDispensaryOwner() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'DispensaryOwner';
    }

    function isDispensaryStaff() {
        return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'DispensaryStaff';
    }

    function isLeafUser() {
       return request.auth != null && (
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'LeafUser' ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'User'
       );
    }
    
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwnerOfDispensary(dispensaryId) {
      return isDispensaryOwner() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == dispensaryId;
    }

    function isStaffOfDispensary(dispensaryId) {
        return isDispensaryStaff() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == dispensaryId;
    }
    
    function isOwnerOrStaffOfDispensary(dispensaryId) {
        return isOwnerOfDispensary(dispensaryId) || isStaffOfDispensary(dispensaryId);
    }

    // Collection Rules Start Here
    
    // Dispensaries: Anyone can view approved ones. Only Super Admins can manage them.
    // Public users can create new applications.
    match /dispensaries/{dispensaryId} {
      allow read: if isSuperAdmin() || resource.data.status == 'Approved';
      allow list: if isSuperAdmin() || isSignedIn();
      allow create: if request.resource.data.status == 'Pending Approval'; // Public signup
      allow update, delete: if isSuperAdmin() || isOwnerOfDispensary(dispensaryId);
    }
    
    // Users: Users can read/update their own doc. SuperAdmins can manage anyone.
    // Dispensary owners can manage staff/users linked to their dispensary.
    match /users/{userId} {
      allow read: if isSuperAdmin() || request.auth.uid == userId;
      allow create: if isSignedIn(); // Any signed-in user can create their own doc during signup
      allow update: if isSuperAdmin() || request.auth.uid == userId || (isDispensaryOwner() && resource.data.dispensaryId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId);
      allow delete: if isSuperAdmin();
      allow list: if isSuperAdmin() || isDispensaryOwner();
    }
    
    // Products: Public can read. Owners/Staff can manage products for their own dispensary.
    match /products/{productId} {
      allow read: true;
      allow list: if isSuperAdmin() || isDispensaryOwner() || isLeafUser();
      allow create, update, delete: if isOwnerOrStaffOfDispensary(request.resource.data.dispensaryId);
    }
    
    // Product Requests: Only involved parties or super admins can access.
    match /productRequests/{requestId} {
      allow read, update: if isSuperAdmin() || 
                           isOwnerOrStaffOfDispensary(resource.data.productOwnerDispensaryId) || 
                           isOwnerOrStaffOfDispensary(resource.data.requesterDispensaryId);
      allow create: if isDispensaryOwner() || isDispensaryStaff();
      allow list: if isSuperAdmin() || isDispensaryOwner() || isDispensaryStaff();
      allow delete: if isSuperAdmin();
    }

    // Pool Issues: Only Super Admins and involved parties can read.
    // Only owners/staff can create issues.
    match /poolIssues/{issueId} {
      allow read: if isSuperAdmin() || 
                     isOwnerOrStaffOfDispensary(resource.data.reporterDispensaryId) || 
                     isOwnerOrStaffOfDispensary(resource.data.reportedDispensaryId);
      allow create: if isDispensaryOwner() || isDispensaryStaff();
      allow update, delete: if isSuperAdmin();
      allow list: if isSuperAdmin();
    }
    
    // Notifications: Users can only see their own.
    match /notifications/{notificationId} {
        allow read, update, delete: if isSuperAdmin() || request.auth.uid == resource.data.recipientUid;
        allow create: if isSignedIn(); // Can be created by functions for a user
        allow list: if isSuperAdmin();
    }

    // Credit Packages: Public read, admin write.
    match /creditPackages/{packageId} {
      allow read: true;
      allow create, update, delete: if isSuperAdmin();
    }
    
    // AI Interaction Logs: Only admins or the user who created it can read.
    match /aiInteractionsLog/{logId} {
      allow read: if isSuperAdmin() || request.auth.uid == resource.data.userId;
      allow create: if isSignedIn(); // Created by backend function
      allow list: if isSuperAdmin();
    }
    
    // Dispensary Types: Public read, admin write.
    match /dispensaryTypes/{typeId} {
        allow read: true;
        allow create, update, delete: if isSuperAdmin();
    }

    // Dispensary Type Product Categories: Public read, admin write.
    match /dispensaryTypeProductCategories/{docId} {
        allow read: true;
        allow create, update, delete: if isSuperAdmin();
    }

    // Sticker Sets: Public read, creator can manage.
    match /stickersets/{setId} {
      allow read: true;
      allow create: if isSignedIn();
      allow update: if isSuperAdmin() || request.auth.uid == resource.data.creatorUid;
      allow delete: if isSuperAdmin() || request.auth.uid == resource.data.creatorUid;
    }

    // Seeded Collection (ReadOnly for most)
    match /my-seeded-collection/{strainId} {
        allow read: true;
        allow write: if isSuperAdmin(); // Only super admin can write
    }

    // Scraper Logs and History (Admin only)
    match /scrapeLogs/{logId} {
        allow read, write: if isSuperAdmin();
    }
    match /importsHistory/{historyId} {
        allow read, write: if isSuperAdmin();
    }
    match /justbrand_catalog/{catId} {
        allow read: if isSuperAdmin();
        allow write: if isSuperAdmin();
        match /products/{prodId} {
          allow read: if isSuperAdmin();
          allow write: if isSuperAdmin();
        }
    }
    
  }
}
