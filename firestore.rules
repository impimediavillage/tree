
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // PUBLIC READ, ADMIN WRITE
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    // ADMIN READ, ADMIN WRITE
    match /dispensaryTypeProductCategories/{docId} {
       allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    // ADMIN READ, ADMIN WRITE
    match /creditPackages/{packageId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }
    
    // PUBLIC READ, ADMIN WRITE
    match /dispensaries/{dispensaryId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    // Logged-in users can manage their own user doc.
    // Dispensary owners/admins can manage users linked to their dispensary.
    // Super admins can manage any user.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == resource.data.dispensaryId;
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    // Authenticated users can read products.
    // Dispensary owners/admins can only write products linked to their dispensaryId.
    // The 'list' rule allows queries like `where('dispensaryId', '==', user.dispensaryId)`.
    match /products/{productId} {
      allow get: if request.auth != null;
      allow list: if request.auth != null && request.query.where.dispensaryId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == request.resource.data.dispensaryId;
    }

    // Authenticated users can create requests.
    // Involved parties (requester or owner) can read/update the request.
    match /productRequests/{requestId} {
      allow create: if request.auth != null;
      allow read, update: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == resource.data.requesterDispensaryId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == resource.data.productOwnerDispensaryId);
    }
    
    // Logged-in users can write to the interaction log for their own interactions.
    match /aiInteractionsLog/{logId} {
      allow write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    // Super admins can manage pool issues.
    match /poolIssues/{issueId} {
       allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    // Users can write their own sticker sets. Public can read.
    match /stickersets/{stickerId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.creatorUid == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.creatorUid == request.auth.uid;
    }
    
    // Public read-only for seeded strain data
    match /my-seeded-collection/{strainId} {
        allow read: if true;
        allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin'; // Only admins can write
    }

     match /importsHistory/{logId} {
       allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }
  }
}
