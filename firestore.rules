rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper Functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isSuperAdmin() {
      return isSignedIn() && request.auth.token.role == 'Super Admin';
    }

    function isOwnerOfDispensary(dispensaryId) {
      return isSignedIn() && request.auth.token.dispensaryId == dispensaryId;
    }
    
    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }
    
    function getDispensaryData(dispensaryId) {
       return get(/databases/$(database)/documents/dispensaries/$(dispensaryId)).data;
    }
    
    function isOwnerOfTargetDispensary(dispensaryId) {
        return isSignedIn() && getDispensaryData(dispensaryId).ownerId == request.auth.uid;
    }

    // Collection: users
    match /users/{userId} {
      allow read: if isSignedIn() && (request.auth.uid == userId || isSuperAdmin());
      allow create: if true; // Anyone can create a user doc (signup)
      allow update: if isSignedIn() && 
                      (request.auth.uid == userId // User can update their own profile
                      || isSuperAdmin() // Super Admin can update any user
                      // Dispensary Owner can update their staff
                      || (request.auth.token.role == 'DispensaryOwner' && request.resource.data.dispensaryId == request.auth.token.dispensaryId));
      allow delete: if isSuperAdmin();
    }
    
    // Collection: dispensaries
    match /dispensaries/{dispensaryId} {
      allow read: if true; // Anyone can read dispensary info
      allow create: if true; // Anyone can apply to be a dispensary
      allow update: if isSignedIn() && (isSuperAdmin() || isOwnerOfDispensary(dispensaryId));
      allow delete: if isSuperAdmin();
    }

    // Collection: dispensaryTypes
    match /dispensaryTypes/{typeId} {
        allow read: if true; // Publicly readable
        allow write: if isSuperAdmin(); // Only Super Admins can create, update, or delete types
    }
    
    // Collection: dispensaryTypeProductCategories
    match /dispensaryTypeProductCategories/{docId} {
        allow read: if true; // Publicly readable
        allow write: if isSuperAdmin(); // Only Super Admins can manage categories
    }
    
    // Collection: products
    match /products/{productId} {
      allow read: if true; // Products are publicly viewable
      allow create: if isSignedIn() && isOwnerOfTargetDispensary(request.resource.data.dispensaryId);
      allow update: if isSignedIn() && isOwnerOfTargetDispensary(resource.data.dispensaryId);
      allow delete: if isSignedIn() && (isSuperAdmin() || isOwnerOfTargetDispensary(resource.data.dispensaryId));
    }
    
    // Collection: productRequests
    match /productRequests/{requestId} {
       allow read: if isSignedIn() && 
                    (isOwnerOfTargetDispensary(resource.data.productOwnerDispensaryId) 
                     || isOwnerOfTargetDispensary(resource.data.requesterDispensaryId)
                     || isSuperAdmin());
      allow create: if isSignedIn() && isOwnerOfTargetDispensary(request.resource.data.requesterDispensaryId);
      allow update: if isSignedIn() && 
                     (isOwnerOfTargetDispensary(resource.data.productOwnerDispensaryId) 
                      || isOwnerOfTargetDispensary(resource.data.requesterDispensaryId)
                      || isSuperAdmin());
      allow delete: if isSuperAdmin();
    }

    // Collection: poolIssues
    match /poolIssues/{issueId} {
       allow read, update: if isSuperAdmin();
       allow create: if isSignedIn() && (isOwnerOfTargetDispensary(request.resource.data.reporterDispensaryId));
    }
    
    // Collection: notifications
    match /notifications/{notificationId} {
      allow read, update: if isSignedIn() && request.auth.uid == resource.data.recipientUid;
      allow create, delete: if isSuperAdmin(); // Only backend/admins should create/delete notifications
    }
    
    // Collection: creditPackages
    match /creditPackages/{packageId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }
    
    // Collection: aiInteractionsLog
    match /aiInteractionsLog/{logId} {
        allow read: if isSignedIn() && (request.auth.uid == resource.data.userId || isSuperAdmin());
        allow create: if isSignedIn() && request.auth.uid == request.resource.data.userId;
    }
    
    // Collection: stickersets
    match /stickersets/{setId} {
      allow read: if resource.data.isPublic == true || (isSignedIn() && request.auth.uid == resource.data.creatorUid);
      allow create: if isSignedIn() && request.resource.data.creatorUid == request.auth.uid;
      allow update(path="/stickersets/$(setId)"): if isSignedIn() && request.auth.uid == resource.data.creatorUid &&
                                                    request.resource.data.keys().hasOnly(['isPublic', 'updatedAt']);
      allow delete: if isSignedIn() && (request.auth.uid == resource.data.creatorUid || isSuperAdmin());
    }

    // Collection: my-seeded-collection (read-only for authenticated users)
    match /my-seeded-collection/{strainId} {
        allow read: if isSignedIn();
        allow write: if isSuperAdmin(); // Only Super Admins can modify the seed data
    }
  }
}
