
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for Super Admin role
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }

    // Helper function to check for any authenticated user
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of a document
    function isOwner(docData) {
      return request.auth.uid == docData.uid;
    }
    
    // Helper function to check if the user is the owner of a dispensary
    function isDispensaryOwner(dispensaryId) {
        return request.auth.token.dispensaryId == dispensaryId && request.auth.token.role == 'DispensaryOwner';
    }

    // Helper function to check if the user is staff of a dispensary
    function isDispensaryStaff(dispensaryId) {
        return request.auth.token.dispensaryId == dispensaryId && request.auth.token.role == 'DispensaryStaff';
    }

    // Helper function to check if user is owner or staff of a dispensary
    function isOwnerOrStaff(dispensaryId) {
        return isDispensaryOwner(dispensaryId) || isDispensaryStaff(dispensaryId);
    }
    
    //----------------------------------------------------------------------
    //  Dispensaries Collection
    //----------------------------------------------------------------------
    match /dispensaries/{dispensaryId} {
      // ANYONE can read a dispensary IF it is approved.
      allow read: if resource.data.status == 'Approved';

      // An authenticated user who is an owner of THIS dispensary can update it.
      // Super Admins can update any dispensary.
      allow update: if isSuperAdmin() || isDispensaryOwner(dispensaryId);
      
      // Super Admins can create and delete dispensaries.
      allow create, delete: if isSuperAdmin();
    }
    
    //----------------------------------------------------------------------
    //  Users Collection
    //----------------------------------------------------------------------
    match /users/{userId} {
      // A user can read/update their own document.
      // Super Admins can read/update any user document.
      // A DispensaryOwner can read users associated with their dispensary.
      allow read, update: if isSuperAdmin() || isOwner(resource.data) || isDispensaryOwner(resource.data.dispensaryId);
      
      // Users can create their own user document during signup.
      // Super Admins can create users.
      // Dispensary Owners can create staff/leaf users for their dispensary.
      allow create: if isSuperAdmin() || isOwner(request.resource.data) || isDispensaryOwner(request.resource.data.dispensaryId);
    }

    //----------------------------------------------------------------------
    //  Dispensary Types & Categories Collections
    //----------------------------------------------------------------------
    match /dispensaryTypes/{typeId} {
        // ANYONE (including unauthenticated users) can read the list of types.
        // This is crucial for the public "Browse Wellness Types" page.
        allow read: if true;
        
        // Only Super Admins can create, update, or delete types.
        allow write: if isSuperAdmin();
    }
    
    match /dispensaryTypeProductCategories/{docId} {
        // ANY authenticated user can read the category structures.
        // This is necessary for the dynamic "Add/Edit Product" forms to work for owners.
        allow read: if isAuthenticated();
        
        // Only Super Admins can modify category structures.
        allow write: if isSuperAdmin();
    }
    
    //----------------------------------------------------------------------
    //  Products Collection
    //----------------------------------------------------------------------
    match /products/{productId} {
      // ANYONE can read a product IF its associated dispensary is approved.
      // We check the product's 'dispensaryId' field and get that dispensary document.
      allow read: if get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved';

      // ONLY a user who is an owner or staff of the product's dispensary can create/update/delete it.
      // Super Admins can also perform these actions.
      allow create, update, delete: if isSuperAdmin() || isOwnerOrStaff(request.resource.data.dispensaryId);
    }
    
    //----------------------------------------------------------------------
    //  Product Requests & Pool Issues (Inter-store communication)
    //----------------------------------------------------------------------
    match /productRequests/{requestId} {
        // Only the requester or the owner of the product can read the request.
        // Super Admins can read any request.
        allow read: if isSuperAdmin() || isOwnerOrStaff(resource.data.requesterDispensaryId) || isOwnerOrStaff(resource.data.productOwnerDispensaryId);

        // Only the requester can create a request.
        allow create: if isOwnerOrStaff(request.resource.data.requesterDispensaryId);
        
        // Only the requester or product owner can update the request (e.g., add notes, change status).
        allow update: if isOwnerOrStaff(request.resource.data.requesterDispensaryId) || isOwnerOrStaff(request.resource.data.productOwnerDispensaryId);
    }

    match /poolIssues/{issueId} {
        // Only the reporter, the reported party, or a Super Admin can read/update an issue.
        allow read, update: if isSuperAdmin() || isOwnerOrStaff(resource.data.reporterDispensaryId) || isOwnerOrStaff(resource.data.reportedDispensaryId);
        
        // Only the reporter can create an issue.
        allow create: if isOwnerOrStaff(request.resource.data.reporterDispensaryId);
    }

    //----------------------------------------------------------------------
    //  Notifications & Logs (User-specific data)
    //----------------------------------------------------------------------
    match /notifications/{notificationId} {
        // A user can only access their own notifications.
        allow read, write: if isSuperAdmin() || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.uid == resource.data.recipientUid;
    }
    
    match /aiInteractionsLog/{logId} {
        // A user can only access their own logs.
        allow read: if isSuperAdmin() || request.auth.uid == resource.data.userId;
        allow create: if isAuthenticated(); // Any authenticated user can create a log for themselves.
    }
    
    //----------------------------------------------------------------------
    //  Platform-wide Data (Publicly Readable)
    //----------------------------------------------------------------------
    match /creditPackages/{packageId} {
        // Anyone can read active credit packages.
        allow read: if resource.data.isActive == true;
        // Only Super Admins can write to credit packages.
        allow write: if isSuperAdmin();
    }
    
    match /stickerSets/{setId} {
        // Anyone can read a sticker set IF it is public.
        allow read: if resource.data.isPublic == true;
        
        // A user can create/update/delete their own sticker sets.
        // Super Admins can manage any sticker set.
        allow create: if isAuthenticated();
        allow update, delete: if isSuperAdmin() || request.auth.uid == resource.data.creatorUid;
    }
    
    //----------------------------------------------------------------------
    //  Seeded Data (Read-only for most, writable by admin)
    //----------------------------------------------------------------------
    match /my-seeded-collection/{strainId} {
      allow read: if isAuthenticated();
      allow write: if isSuperAdmin();
    }

    match /justbrand_catalog/{doc=**} {
      allow read: if isAuthenticated();
      allow write: if isSuperAdmin();
    }
    
    match /scrapeLogs/{logId} {
        allow read, write: if isSuperAdmin();
    }
    
    match /importsHistory/{historyId} {
        allow read, write: if isSuperAdmin();
    }

  }
}
