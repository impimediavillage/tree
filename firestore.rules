
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Global rule: Super Admins have unrestricted access to all documents.
    // This rule is checked first and provides a "master key" override.
    match /{document=**} {
      allow read, write: if request.auth.token.role == 'Super Admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can create their own user document during signup.
      allow create: if request.auth != null;

      // Users can read and update their own document.
      allow read, update: if request.auth.uid == userId;
    }

    // Rules for the 'dispensaries' collection
    match /dispensaries/{dispensaryId} {
      // Anyone can submit a dispensary application (create).
      allow create: if true;
      
      // Any authenticated user can read approved dispensaries.
      allow read: if resource.data.status == 'Approved';
      
      // Only the assigned dispensary owner can update their own dispensary profile.
      allow update: if request.auth.uid == resource.data.ownerId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == dispensaryId;
    }

    // Rules for the 'products' collection
    match /products/{productId} {
      // Allow anyone to read products.
      allow read: if true;
      
      // Allow the linked dispensary owner to create, update, and delete products.
      allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == resource.data.dispensaryId;
    }
    
    // Rules for dispensaryTypes
    match /dispensaryTypes/{typeId} {
        allow read: if true; // Everyone can read the types of dispensaries available.
    }

    // Rules for creditPackages
    match /creditPackages/{packageId} {
        allow read: if resource.data.isActive == true; // Anyone can see active packages.
    }

    // Rules for productRequests
    match /productRequests/{requestId} {
      // Allow authenticated users to create requests
      allow create: if request.auth != null;
      // Allow involved parties (requester or owner) to read/update.
      allow read, update: if request.auth.uid == resource.data.requesterUid || request.auth.uid == resource.data.productOwnerUid;
    }

    // Rules for poolIssues
    match /poolIssues/{issueId} {
        // Allow involved parties to create/read/update
        allow create, read, update: if request.auth.uid == resource.data.reporterUid || request.auth.uid == resource.data.reportedUid;
    }

    // Rules for aiInteractionsLog
    match /aiInteractionsLog/{logId} {
        // Users can only create and read their own logs.
        allow create, read: if request.auth.uid == request.resource.data.userId;
    }

    // Rules for notifications
    match /notifications/{notificationId} {
      // Users can only read their own notifications.
      allow read, update: if request.auth.uid == resource.data.recipientUid;
    }
    
    // Rules for sticker sets
    match /stickersets/{stickerSetId} {
      // Anyone can read public sticker sets
      allow read: if resource.data.isPublic == true;
      // The creator can write (create, update, delete) their own sets
      allow write: if request.auth.uid == resource.data.creatorUid;
    }

  }
}
