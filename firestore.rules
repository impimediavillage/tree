
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if request.auth.uid == userId;
      allow write: if request.auth.uid == userId;
    }

    match /dispensaries/{dispensaryId} {
      allow read: if true;
      allow list: if true;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }
    
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow list: if true;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }
    
    match /dispensaryTypeProductCategories/{docId} {
      allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }
    
    match /products/{productId} {
      // Allow read (get, list) if the user's dispensaryId matches the product's dispensaryId.
      // This rule works in conjunction with the client-side query which MUST filter by dispensaryId.
      allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == resource.data.dispensaryId;
      
      // Allow write (create, update, delete) if the user's dispensaryId matches the one in the new/updated document.
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == request.resource.data.dispensaryId;
    }

    match /productRequests/{requestId} {
      allow read, write: if request.auth != null; // Simplistic rule for now, can be tightened later
    }

    match /poolIssues/{issueId} {
      allow read, write: if request.auth != null;
    }

    match /aiInteractionsLog/{logId} {
      allow read, write: if request.auth.uid == resource.data.userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    match /creditPackages/{packageId} {
      allow read: if true;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    match /stickersets/{setId} {
        allow read: if true; // Publicly readable
        allow create: if request.auth.uid == request.resource.data.creatorUid;
        allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin' || resource.data.creatorUid == request.auth.uid;
    }
  }
}
