rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
      // Allow Super Admin to do anything with user docs
      allow read, write: if request.auth.token.role == 'Super Admin';
    }
    
    match /dispensaryTypes/{typeId} {
      allow read: if request.auth != null;
      allow write: if request.auth.token.role == 'Super Admin';
    }

    match /dispensaryTypeProductCategories/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth.token.role == 'Super Admin';
    }

    match /dispensaries/{dispensaryId} {
      // Allow anyone to create a dispensary application
      allow create; 
      
      // Allow Super Admins to manage all dispensaries
      allow read, update, delete: if request.auth.token.role == 'Super Admin';

      // Allow authenticated owners to read their own dispensary document
      allow get: if request.auth != null && request.auth.token.dispensaryId == dispensaryId;
    }

    match /products/{productId} {
      // Allow anyone to read products from approved dispensaries
      allow read: if get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved';

      // Allow dispensary owner to manage their own products
      allow create, update, delete: if request.auth != null && request.auth.token.dispensaryId == resource.data.dispensaryId;

      // Allow Super Admin full access
      allow write: if request.auth.token.role == 'Super Admin';
    }

    match /productRequests/{requestId} {
      // Allow involved parties to interact with their requests
      allow read, update: if request.auth != null && (request.auth.token.dispensaryId == resource.data.productOwnerDispensaryId || request.auth.token.dispensaryId == resource.data.requesterDispensaryId);
      
      // Allow creation if the requester is the one making the request
      allow create: if request.auth != null && request.auth.token.dispensaryId == request.resource.data.requesterDispensaryId;

      // Allow Super Admin full access
      allow write: if request.auth.token.role == 'Super Admin';
    }
    
     match /poolIssues/{issueId} {
        // Allow involved parties to read
        allow get: if request.auth != null && (request.auth.token.dispensaryId == resource.data.reporterDispensaryId || request.auth.token.dispensaryId == resource.data.reportedDispensaryId);

        // Allow creation by authenticated users
        allow create: if request.auth != null;
        
        // Allow Super Admin to manage
        allow read, update, delete: if request.auth.token.role == 'Super Admin';
     }
     
     match /notifications/{notificationId} {
        // Users can read/update their own notifications
        allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.recipientUid;
        
        // Functions can create notifications
        // No explicit create rule needed if writes come from backend with admin SDK
     }

     match /creditPackages/{packageId} {
        // Anyone can read active packages
        allow read: if resource.data.isActive == true;

        // Super Admins can manage packages
        allow write: if request.auth.token.role == 'Super Admin';
     }

     match /aiInteractionsLog/{logId} {
        // Users can read their own logs
        allow get: if request.auth != null && request.auth.uid == resource.data.userId;
        
        // Allow Super Admins and Dispensary Owners to read logs associated with their dispensary
        allow read: if request.auth.token.role == 'Super Admin' || (request.auth.token.dispensaryId != null && request.auth.token.dispensaryId == resource.data.dispensaryId);
        
        // Note: Creation is handled by backend functions
     }
     
     match /stickersets/{setId} {
        // Allow anyone to read public sticker sets
        allow get: if resource.data.isPublic == true;
        
        // Allow creators to read/update/delete their own sets
        allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.creatorUid;
        
        // Allow anyone authenticated to create a set
        allow create: if request.auth != null;
        
        // Allow Super Admin full access
        allow write: if request.auth.token.role == 'Super Admin';
     }
  }
}
