
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to reduce duplication
    function isSuperAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    function isOwnerOfDispensary(dispensaryId) {
      return request.auth.token.dispensaryId == dispensaryId && request.auth.token.role == 'DispensaryOwner';
    }
    
    function isStaffOfDispensary(dispensaryId) {
        return request.auth.token.dispensaryId == dispensaryId && request.auth.token.role == 'DispensaryStaff';
    }

    function isOwnerOrStaffOfDispensary(dispensaryId) {
      return isOwnerOfDispensary(dispensaryId) || isStaffOfDispensary(dispensaryId);
    }
    
    function isAuthenticated() {
        return request.auth != null;
    }

    // Unsecured collections for public read access
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    match /dispensaryTypeProductCategories/{docId} {
        allow read: if isAuthenticated(); // All authenticated users can read this for product forms
        allow write: if isSuperAdmin();
    }

    match /creditPackages/{packageId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    match /stickersets/{setId} {
        allow read: if resource.data.isPublic == true;
        allow create: if isAuthenticated(); // Allow any logged-in user to create
        allow update, delete: if isAuthenticated() && resource.data.creatorUid == request.auth.uid; // Only creator can update/delete
    }

    // Users can only manage their own document
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isSuperAdmin();
      allow create: if isAuthenticated(); // Allow any authenticated user to be created
      allow delete: if isSuperAdmin(); // Only admin can delete users
    }

    // Dispensaries can be read by public if approved, but only updated by their owner or admin
    match /dispensaries/{dispensaryId} {
      allow read: if resource.data.status == 'Approved' || isOwnerOfDispensary(dispensaryId) || isSuperAdmin();
      allow create: if true; // Anyone can apply
      allow update: if isOwnerOfDispensary(dispensaryId) || isSuperAdmin();
      allow delete: if isSuperAdmin();
    }
    
    // Products can be read by public, but only managed by their owner or admin
    match /products/{productId} {
      allow read: if true;
      allow create, update: if isOwnerOrStaffOfDispensary(request.resource.data.dispensaryId) || isSuperAdmin();
      allow delete: if isOwnerOrStaffOfDispensary(resource.data.dispensaryId) || isSuperAdmin();
    }

    // Notifications are private to the recipient
    match /notifications/{notificationId} {
        allow read, update, delete: if resource.data.recipientUid == request.auth.uid || isSuperAdmin();
        allow create: if isAuthenticated(); // Functions create notifications
    }
    
    // Product Requests involve two parties
    match /productRequests/{requestId} {
        allow read, update: if isAuthenticated() && (request.auth.uid == resource.data.productOwnerUid || request.auth.uid == resource.data.requesterUid) || isSuperAdmin();
        allow create: if isAuthenticated(); // Any authenticated user can create a request
        allow delete: if isSuperAdmin();
    }
    
    // Pool issues can be read by involved parties or admin
    match /poolIssues/{issueId} {
        allow read, create: if isAuthenticated();
        allow update, delete: if isSuperAdmin();
    }

    // Logs can be created by the system, read by admins
    match /scrapeLogs/{logId} {
        allow read, write: if isSuperAdmin();
    }
    
    match /importsHistory/{historyId} {
         allow read, write: if isSuperAdmin();
    }
    
    match /aiInteractionsLog/{logId} {
        allow read: if resource.data.userId == request.auth.uid || isSuperAdmin();
        allow create: if true; // Callable function handles this
    }
    
    // Seeded data should be readable by all, but only writable by admin
    match /my-seeded-collection/{strainId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    match /justbrand_catalog/{docId} {
        allow read, write: if isSuperAdmin();
        match /products/{productId} {
            allow read, write: if isSuperAdmin();
        }
    }
  }
}
