
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isSuperAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    function isDispensaryOwner(dispensaryId) {
      return request.auth.token.role == 'DispensaryOwner' && request.auth.token.dispensaryId == dispensaryId;
    }
    
    function isOwnerOfDoc(userId) {
      return request.auth.uid == userId;
    }

    // Users Collection
    match /users/{userId} {
      allow read: if isSignedIn(); // Any signed-in user can read any user profile (for display names etc)
      allow create: if !isSignedIn(); // Public signup
      allow update: if isOwnerOfDoc(userId) || isSuperAdmin(); // User can edit their own profile, or admin can
    }

    // Dispensaries Collection
    match /dispensaries/{dispensaryId} {
      allow read: if true; // Publicly readable
      allow create: if true; // Anyone can apply
      allow update: if isSuperAdmin(); // Only Super Admins can update (approve/reject/suspend)
      allow delete: if isSuperAdmin(); // Only Super Admins can delete
    }

    // Products Collection
    match /products/{productId} {
      allow read: if true; // Publicly readable
      allow create, update: if isDispensaryOwner(request.resource.data.dispensaryId); // Only the owner of the dispensary can create/update products for it
      allow delete: if isDispensaryOwner(resource.data.dispensaryId) || isSuperAdmin(); // Dispensary owner or admin can delete
    }

    // Dispensary Types Collection
    match /dispensaryTypes/{typeId} {
      allow read: if true; // Publicly readable
      allow create, update, delete: if isSuperAdmin();
    }
    
    // Product Categories Collection
    match /dispensaryTypeProductCategories/{docId} {
        allow read: if true; // Categories are public info
        allow create, update, delete: if isSuperAdmin();
    }

    // Product Requests Collection
    match /productRequests/{requestId} {
      allow read: if isSignedIn() && (
        isDispensaryOwner(resource.data.productOwnerDispensaryId) ||
        isDispensaryOwner(resource.data.requesterDispensaryId) ||
        isSuperAdmin()
      );
      allow create: if isSignedIn() && isDispensaryOwner(request.resource.data.requesterDispensaryId);
      allow update: if isSignedIn() && (
        isDispensaryOwner(resource.data.productOwnerDispensaryId) ||
        isDispensaryOwner(resource.data.requesterDispensaryId) ||
        isSuperAdmin()
      );
    }

    // Pool Issues Collection
    match /poolIssues/{issueId} {
      allow read: if isSignedIn() && (
        isDispensaryOwner(resource.data.reporterDispensaryId) || 
        isDispensaryOwner(resource.data.reportedDispensaryId) || 
        isSuperAdmin()
      );
      allow create: if isSignedIn() && isDispensaryOwner(request.resource.data.reporterDispensaryId);
      allow update: if isSuperAdmin();
    }
    
    // Notifications Collection
    match /notifications/{notificationId} {
      allow read, update: if isSignedIn() && isOwnerOfDoc(resource.data.recipientUid);
      // No one creates/deletes directly, done by Cloud Functions
    }

    // Credit Packages Collection
    match /creditPackages/{packageId} {
      allow read: if true; // Publicly readable
      allow create, update, delete: if isSuperAdmin();
    }

    // AI Interactions Log
    match /aiInteractionsLog/{logId} {
      allow read: if isSignedIn() && (isOwnerOfDoc(resource.data.userId) || isSuperAdmin());
      // Created by Cloud Function only
      allow create: if request.auth.token.firebase.sign_in_provider != "anonymous"; 
    }
    
    // Sticker Sets
    match /stickersets/{setId} {
      allow read: if true; // Publicly viewable
      allow create: if isSignedIn(); // Any signed-in user can create a set
      allow update, delete: if isSignedIn() && isOwnerOfDoc(resource.data.creatorUid); // Only creator can edit/delete
    }

    // Scrape Logs & History
    match /scrapeLogs/{logId} { allow read, write: if isSuperAdmin(); }
    match /importsHistory/{historyId} { allow read, write: if isSuperAdmin(); }
    
    // My Seeded Collection (for strain lookup)
    match /my-seeded-collection/{strainId} {
        allow read: if isSignedIn();
        allow update: if isSignedIn(); // Allow updating image url
    }
  }
}
