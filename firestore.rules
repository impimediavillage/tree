rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for Super Admin role in the auth token
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }

    // ========= GLOBAL SUPER ADMIN OVERRIDE =========
    // Super Admins have unrestricted read/write access to the entire database.
    // This rule is checked first and overrides all other rules if true.
    match /{document=**} {
      allow read, write: if isSuperAdmin();
    }
    
    // ========= DISPENSARIES COLLECTION =========
    match /dispensaries/{dispensaryId} {
      // ANY authenticated user can READ an APPROVED dispensary profile.
      allow read: if resource.data.status == 'Approved';
      // ONLY the dispensary owner can WRITE to their own document.
      allow write: if request.auth.uid == resource.data.ownerId || request.auth.uid == resource.data.uid; // Added ownerId for legacy
    }

    // ========= DISPENSARY TYPES COLLECTION =========
    match /dispensaryTypes/{typeId} {
        // Publicly readable by anyone.
        allow read: if true;
        // Creation/deletion is handled by Super Admin via the global rule.
        allow write: if false; 
    }
    
     // ========= DISPENSARY TYPE CATEGORIES COLLECTION =========
    match /dispensaryTypeProductCategories/{docId} {
        // Publicly readable for dynamic form generation.
        allow read: if true;
        // Creation/deletion is handled by Super Admin via the global rule.
        allow write: if false; 
    }

    // ========= USERS COLLECTION =========
    match /users/{userId} {
      // A user can READ their own document.
      allow read: if request.auth.uid == userId;
      // A user can WRITE to their own document.
      allow write: if request.auth.uid == userId;
    }
    
    // ========= PRODUCTS COLLECTION =========
    match /products/{productId} {
        // Public can READ products from APPROVED dispensaries.
        allow read: if get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved';
        // ONLY the linked dispensary owner can create, update, or delete their own products.
        allow write: if request.auth.token.dispensaryId == resource.data.dispensaryId;
    }

    // ========= PRODUCT REQUESTS & POOL ISSUES =========
    match /productRequests/{requestId} {
        // Only involved parties (requester or owner) can access the request.
        allow read, write: if request.auth.token.dispensaryId == resource.data.requesterDispensaryId 
                            || request.auth.token.dispensaryId == resource.data.productOwnerDispensaryId;
    }
    
    match /poolIssues/{issueId} {
        // Involved parties can read/write.
        allow read, write: if request.auth.token.dispensaryId == resource.data.reporterDispensaryId 
                            || request.auth.token.dispensaryId == resource.data.reportedDispensaryId;
    }
    
    // ========= NOTIFICATIONS & LOGS =========
    match /notifications/{notificationId} {
        // Only the recipient can access their notification.
        allow read, write: if request.auth.uid == resource.data.recipientUid;
    }

    match /aiInteractionsLog/{logId} {
        // Users can only access their own logs.
        allow read: if request.auth.uid == resource.data.userId;
        allow write: if false; // Logs should be written by backend functions only.
    }
    
    // ========= STICKER SETS (PUBLIC & USER-OWNED) =========
    match /stickersets/{setId} {
        // Anyone can read a public sticker set.
        allow read: if resource.data.isPublic == true;
        // Only the creator can write/delete their own sticker set.
        allow write: if request.auth.uid == resource.data.creatorUid;
    }
    
    // ========= PUBLIC-READABLE COLLECTIONS =========
    match /creditPackages/{packageId} {
        allow read: if true;
        // Creation/deletion handled by Super Admin global rule.
        allow write: if false; 
    }

     match /my-seeded-collection/{strainId} {
      // Seed data is publicly readable for product creation forms
      allow read: if true;
       // Only an authenticated user can update the image URL via the onCall function
      allow update: if request.auth != null;
      allow create, delete: if false; // Prevent client-side creation/deletion
    }
  }
}
