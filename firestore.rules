rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to get the user's role from their auth token claims
    function getRole() {
      return request.auth.token.role;
    }

    // Helper function to check if the requesting user is the owner of a document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Helper function to check if the user is a Super Admin
    function isSuperAdmin() {
      return isAuthenticated() && getRole() == 'Super Admin';
    }

    // Helper function to check if the user is a Dispensary Owner
    function isDispensaryOwner() {
      return isAuthenticated() && getRole() == 'DispensaryOwner';
    }

    // Users Collection
    match /users/{userId} {
      // Admins can read/write any user. Users can read/write their own document.
      allow read, write: if isSuperAdmin() || isOwner(userId);
    }
    
    // Dispensary Types: Publicly readable, only admin write
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
     // Dispensary Type Categories: Publicly readable, only admin write
    match /dispensaryTypeProductCategories/{docId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    // Dispensaries Collection
    match /dispensaries/{dispensaryId} {
      // Anyone can read approved dispensaries
      allow read: if resource.data.status == 'Approved' || isSuperAdmin() || (isDispensaryOwner() && resource.id == request.auth.token.dispensaryId);
      // Only SuperAdmins can create/update/delete
      allow write: if isSuperAdmin() || (isDispensaryOwner() && resource.id == request.auth.token.dispensaryId);
      
       // Products subcollection
      match /products/{productId} {
        // Anyone can read products of approved dispensaries
        allow read: if get(/databases/$(database)/documents/dispensaries/$(dispensaryId)).data.status == 'Approved';
        // Only the dispensary owner or super admin can write to products
        allow write: if isSuperAdmin() || (isDispensaryOwner() && dispensaryId == request.auth.token.dispensaryId);
      }
    }
    
    // Products root collection (for queries)
    match /products/{productId} {
      allow read; // Generally open read for browsing
      allow write: if isSuperAdmin() || (isDispensaryOwner() && request.resource.data.dispensaryId == request.auth.token.dispensaryId);
    }

    // Product Requests
    match /productRequests/{requestId} {
      // Only involved parties or super admin can read/write
      allow read, write: if isSuperAdmin() || (isAuthenticated() && (request.auth.token.dispensaryId == resource.data.requesterDispensaryId || request.auth.token.dispensaryId == resource.data.productOwnerDispensaryId));
    }

    // Pool Issues
    match /poolIssues/{issueId} {
      // Only Super Admins can read/write issues
      allow read, write: if isSuperAdmin();
      // Dispensary owners can create issues
      allow create: if isDispensaryOwner();
    }
    
    // Notifications for specific users
    match /notifications/{notificationId} {
        allow read, write: if isOwner(resource.data.recipientUid) || isSuperAdmin();
    }
    
    // Credit Packages: Publicly readable, only admin write
    match /creditPackages/{packageId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }
    
    // AI Interaction Logs: Only the user themselves or an admin can read/write their logs
    match /aiInteractionsLog/{logId} {
        allow read, write: if isSuperAdmin() || (isAuthenticated() && request.resource.data.userId == request.auth.uid);
    }
    
     // Sticker Sets: Publicly readable, writable only by creator or admin
    match /stickersets/{setId} {
      allow read: if resource.data.isPublic == true || isOwner(resource.data.creatorUid) || isSuperAdmin();
      allow create: if isAuthenticated();
      allow update, delete: if isOwner(resource.data.creatorUid) || isSuperAdmin();
    }
    
     // My Seeded Collection: Open read for all, but only admin write
    match /my-seeded-collection/{strainId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    // Scraper and import logs: Admin only
    match /scrapeLogs/{logId} {
      allow read, write: if isSuperAdmin();
    }
     match /importsHistory/{logId} {
      allow read, write: if isSuperAdmin();
    }

    // JustBrand Catalog: Read-only for everyone, write only for admin
    match /justbrand_catalog/{doc=**} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
  }
}
