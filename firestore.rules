rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to check user roles from the auth token.
    // This is more secure and efficient than reading from the database.
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }

    function isOwner(dispensaryId) {
      return request.auth.token.role == 'DispensaryOwner' && request.auth.token.dispensaryId == dispensaryId;
    }
    
    function isStaff(dispensaryId) {
       return request.auth.token.role == 'DispensaryStaff' && request.auth.token.dispensaryId == dispensaryId;
    }

    // Any authenticated user can read their own document.
    // Only Super Admins can write to other user's documents (e.g., to change roles).
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isSuperAdmin();
      allow create: if isSuperAdmin(); // Only admins can create users from the backend now.
      allow delete: if isSuperAdmin();
    }

    // Public can read approved dispensaries.
    // The owner, staff, or a super admin can manage a specific dispensary.
    match /dispensaries/{dispensaryId} {
      allow read: if resource.data.status == 'Approved' || isOwner(dispensaryId) || isStaff(dispensaryId) || isSuperAdmin();
      allow create, update, delete: if isSuperAdmin() || isOwner(dispensaryId);
    }
    
    // Public can read dispensary types.
    // Only super admins can create/edit them.
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    match /dispensaryTypeProductCategories/{docId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    // Public can read products of approved dispensaries.
    // The owner, staff, or a super admin can manage products for that dispensary.
    match /products/{productId} {
      allow read: if get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved' || isOwner(resource.data.dispensaryId) || isStaff(resource.data.dispensaryId) || isSuperAdmin();
      allow write: if isOwner(resource.data.dispensaryId) || isStaff(resource.data.dispensaryId) || isSuperAdmin();
    }
    
     // Public can read public sticker sets.
     // Authenticated users can create them.
     // Owner of the set or Super Admin can delete them.
    match /stickersets/{stickerId} {
        allow read: if resource.data.isPublic == true || isSuperAdmin() || request.auth.uid == resource.data.creatorUid;
        allow create: if request.auth != null;
        allow update, delete: if request.auth.uid == resource.data.creatorUid || isSuperAdmin();
    }

    // Only authenticated users involved in the request can access it.
    match /productRequests/{requestId} {
      allow read, write: if isSuperAdmin() || isOwner(resource.data.productOwnerDispensaryId) || isOwner(resource.data.requesterDispensaryId) || isStaff(resource.data.productOwnerDispensaryId) || isStaff(resource.data.requesterDispensaryId);
    }

    // Only authenticated users can read their own notifications.
    match /notifications/{notificationId} {
      allow read, update, delete: if request.auth.uid == resource.data.recipientUid;
      allow create: if request.auth != null; // Functions create these.
    }
    
    // Admins can manage pool issues.
    match /poolIssues/{issueId} {
        allow read, write: if isSuperAdmin();
    }
    
    // Only admins can manage credit packages.
    match /creditPackages/{packageId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    // Logs can only be created by the system/user, not read back by users.
    match /aiInteractionsLog/{logId} {
      allow read: if isSuperAdmin();
      allow create: if request.auth != null;
    }
    
    // Scrape data is admin-only
    match /justbrand_catalog/{doc=**} {
        allow read, write: if isSuperAdmin();
    }
    match /scrapeLogs/{doc=**} {
        allow read, write: if isSuperAdmin();
    }
     match /importsHistory/{doc=**} {
        allow read, write: if isSuperAdmin();
    }
    
    match /my-seeded-collection/{doc=**} {
       allow read: if true; // Publicly readable seed data
       allow write: if isSuperAdmin(); // Writable only by admins or specific functions
    }
  }
}
