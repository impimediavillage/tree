rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check user role from their own document
    function getUserRole(uid) {
      return get(/databases/$(database)/documents/users/$(uid)).data.role;
    }

    // Helper function to check if the user is a Super Admin
    function isSuperAdmin() {
      return isAuthenticated() && getUserRole(request.auth.uid) == 'Super Admin';
    }

    // Helper function to check if the user is an owner of a specific dispensary
    function isDispensaryOwner(dispensaryId) {
      return isAuthenticated() && request.auth.uid == get(/databases/$(database)/documents/dispensaries/$(dispensaryId)).data.ownerId;
    }

    // Helper function to check if user is a staff member of a specific dispensary
    function isDispensaryStaff(dispensaryId) {
        let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
        return isAuthenticated() && userDoc.role == 'DispensaryStaff' && userDoc.dispensaryId == dispensaryId;
    }
    
    // User Collection Rules
    match /users/{userId} {
      // Users can read their own profile. Super Admins can read any profile.
      allow read: if isAuthenticated() && (request.auth.uid == userId || isSuperAdmin());
      // Users can update their own profile (for certain fields). Super Admins can update any.
      allow update: if isAuthenticated() && (request.auth.uid == userId || isSuperAdmin());
      // Only Super Admins can create or delete user documents directly.
      allow create, delete: if isSuperAdmin();
    }
    
    // Dispensary Types Collection Rules
    match /dispensaryTypes/{typeId} {
      // Anyone can read the list of dispensary types.
      allow read: if true;
      // Only Super Admins can create, update, or delete types.
      allow write: if isSuperAdmin();
    }

    // Dispensary Product Categories Rules
    match /dispensaryTypeProductCategories/{docId} {
      // Anyone can read product categories.
      allow read: if true;
      // Only Super Admins can modify categories.
      allow write: if isSuperAdmin();
    }
    
    // Dispensaries Collection Rules
    match /dispensaries/{dispensaryId} {
      // Allow public read for approved dispensaries.
      // Authenticated users and super admins can read any.
      allow read: if resource.data.status == 'Approved' || (isAuthenticated() && (request.auth.uid == resource.data.ownerId || isSuperAdmin()));
      // Allow creation for anyone (public signup).
      allow create: if true;
      // Only the owner or a Super Admin can update a dispensary profile.
      allow update: if isAuthenticated() && (isDispensaryOwner(dispensaryId) || isSuperAdmin());
      // Only Super Admins can delete dispensaries.
      allow delete: if isSuperAdmin();
    }
    
    // Products Collection Rules
    match /products/{productId} {
      // Allow public read for all products.
      allow read: if true;
      // Allow creation/update only by the owner of the dispensary or their staff.
      allow create, update: if isAuthenticated() && (isDispensaryOwner(request.resource.data.dispensaryId) || isDispensaryStaff(request.resource.data.dispensaryId));
      // Allow deletion only by the owner or super admin.
      allow delete: if isAuthenticated() && (isDispensaryOwner(resource.data.dispensaryId) || isSuperAdmin());
    }

    // Product Requests Collection Rules
    match /productRequests/{requestId} {
      // Only involved parties (requester, owner, super admin) can read/write.
      allow read, write: if isAuthenticated() && 
                            (request.auth.uid == resource.data.requesterUid || 
                             get(/databases/$(database)/documents/dispensaries/$(resource.data.productOwnerDispensaryId)).data.ownerId == request.auth.uid || 
                             isSuperAdmin());
    }

    // AI Interactions Log Rules
    match /aiInteractionsLog/{logId} {
      // Users can only create logs for themselves.
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      // Users can only read their own logs. Super Admins can read all.
      allow read: if isAuthenticated() && (resource.data.userId == request.auth.uid || isSuperAdmin());
      // No updates or deletes allowed to maintain audit trail.
      allow update, delete: if false;
    }

    // Credit Packages Rules
    match /creditPackages/{packageId} {
      // Anyone can read active credit packages.
      allow read: if resource.data.isActive == true || isSuperAdmin();
      // Only Super Admins can write to credit packages.
      allow write: if isSuperAdmin();
    }

    // Sticker Set Rules
    match /stickersets/{setId} {
        // Public can read sets marked as public.
        // Creator and Super Admin can read any.
        allow read: if resource.data.isPublic == true || (isAuthenticated() && (resource.data.creatorUid == request.auth.uid || isSuperAdmin()));
        // Authenticated users can create sticker sets.
        allow create: if isAuthenticated();
        // Only the creator or a Super Admin can update/delete.
        allow update, delete: if isAuthenticated() && (resource.data.creatorUid == request.auth.uid || isSuperAdmin());
    }

     // Imports History Rules (Admin-only)
    match /importsHistory/{logId} {
      allow read, write, create, delete: if isSuperAdmin();
    }

    // My Seeded Collection Rules (for strain info)
    match /my-seeded-collection/{strainId} {
      // Readable by anyone (used for product details).
      allow read: if true;
      // Writable only by Super Admins (for seeding/updating).
      allow write: if isSuperAdmin();
    }

    // Pool Issues Rules
    match /poolIssues/{issueId} {
      // Only Super Admins can manage pool issues.
      allow read, write, create, delete: if isSuperAdmin();
    }
  }
}
