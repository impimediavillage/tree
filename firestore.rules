
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to keep rules DRY
    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    function isSuperAdmin() {
      return isSignedIn() && getUserRole(request.auth.uid) == 'Super Admin';
    }

    function isOwnerOfDispensary(dispensaryId) {
      return isSignedIn() && getUserRole(request.auth.uid) == 'DispensaryOwner' && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == dispensaryId;
    }

    // USERS:
    // - Users can read/update their own profile.
    // - Super Admins can read/write any user profile.
    match /users/{userId} {
      allow read, update: isUser(userId) || isSuperAdmin();
      allow create: isSignedIn(); // Anyone can sign up
      allow delete: isSuperAdmin();
    }

    // DISPENSARIES:
    // - Anyone can read approved dispensaries.
    // - Owners can update their own dispensary.
    // - Super Admins can do anything.
    match /dispensaries/{dispensaryId} {
      allow read: resource.data.status == 'Approved' || isOwnerOfDispensary(dispensaryId) || isSuperAdmin();
      allow create, update: isOwnerOfDispensary(dispensaryId) || isSuperAdmin();
      allow delete: isSuperAdmin();
    }
    
    // DISPENSARY TYPES & CATEGORIES: Publicly readable by all
    match /dispensaryTypes/{typeId} {
        allow read: true;
        allow write: isSuperAdmin();
    }
    match /dispensaryTypeProductCategories/{typeId} {
        allow read: true;
        allow write: isSuperAdmin();
    }

    // PRODUCTS:
    // - Anyone can read products.
    // - Only the owner of the dispensary can create/update/delete products for it.
    match /products/{productId} {
      allow read: true;
      allow create: isOwnerOfDispensary(request.resource.data.dispensaryId);
      allow update, delete: isOwnerOfDispensary(resource.data.dispensaryId);
    }
    
    // PRODUCT REQUESTS (POOL):
    // - A request can be read by the owner of the product or the requester.
    // - A request can be created by any authenticated dispensary owner.
    // - A request can be updated/cancelled by either party.
    match /productRequests/{requestId} {
      allow read: isOwnerOfDispensary(resource.data.productOwnerDispensaryId) || isOwnerOfDispensary(resource.data.requesterDispensaryId) || isSuperAdmin();
      allow create: isSignedIn() && getUserRole(request.auth.uid) == 'DispensaryOwner';
      allow update: isOwnerOfDispensary(resource.data.productOwnerDispensaryId) || isOwnerOfDispensary(resource.data.requesterDispensaryId) || isSuperAdmin();
      allow delete: isOwnerOfDispensary(resource.data.requesterDispensaryId) || isSuperAdmin(); // Only requester or admin can cancel/delete
    }
    
    // POOL ISSUES: Read/write by involved parties or super admin
    match /poolIssues/{issueId} {
       allow read, write: isOwnerOfDispensary(resource.data.reporterDispensaryId) || isOwnerOfDispensary(resource.data.reportedDispensaryId) || isSuperAdmin();
    }

    // STICKER SETS: Created by user, read by public
    match /stickersets/{stickerId} {
      allow read: true;
      allow create: isUser(request.resource.data.creatorUid);
      allow update, delete: isUser(resource.data.creatorUid) || isSuperAdmin();
    }

    // CREDIT PACKAGES: Publicly readable, admin write
    match /creditPackages/{packageId} {
        allow read: true;
        allow write: isSuperAdmin();
    }
    
    // AI INTERACTION LOGS: Only readable by the user who created them or an admin
    match /aiInteractionsLog/{logId} {
      allow read: isUser(resource.data.userId) || isSuperAdmin();
      allow create: isUser(request.resource.data.userId); // Function will write this, user must match
      allow update, delete: isSuperAdmin();
    }
    
    // MY SEEDED COLLECTION (Strain Info): Read-only for all users
    match /my-seeded-collection/{strainId} {
        allow read: true;
        allow write: isSuperAdmin(); // Only admin can update the seed data
    }
    
     // IMPORTS HISTORY: Admin only
    match /importsHistory/{importId} {
      allow read, write: isSuperAdmin();
    }
  }
}
