rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // HELPER FUNCTIONS
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isSignedIn() {
      return request.auth != null;
    }
    
    function isDispensaryOwner(dispensaryId) {
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return userDoc.role == 'DispensaryOwner' && userDoc.dispensaryId == dispensaryId;
    }

    // SUPER ADMIN OVERRIDE: Grants Super Admins unconditional access to all documents.
    // This rule is checked first and bypasses all other specific rules for Super Admins.
    match /{document=**} {
      allow read, write: if isSuperAdmin();
    }

    // DISPENSARIES
    match /dispensaries/{dispensaryId} {
      // Public users can only read approved dispensaries.
      allow read: if resource.data.status == 'Approved';
      // Only owners can update their own dispensary, but cannot change the status.
      allow update: if isDispensaryOwner(dispensaryId) && request.resource.data.status == resource.data.status;
      // Creation is handled by the application sign-up. Direct creation is denied.
      allow create, delete: if false;
    }

    // USERS
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      // Public signup and function-based creation is allowed.
      allow create: if true;
      allow list, delete: if isSuperAdmin(); // Covered by global rule, but explicit for clarity
    }

    // PRODUCTS
    match /products/{productId} {
      allow read: if true;
      allow create: if isDispensaryOwner(request.resource.data.dispensaryId);
      allow update, delete: if isDispensaryOwner(resource.data.dispensaryId);
    }
    
    // PRODUCT REQUESTS (Pool)
    match /productRequests/{requestId} {
      allow read, create, update: if isSignedIn();
      allow delete: if isSuperAdmin(); // Covered by global rule
    }
    
    // POOL ISSUES
    match /poolIssues/{issueId} {
      allow read, create: if isSignedIn();
      allow update, delete: if isSuperAdmin(); // Covered by global rule
    }

    // Publicly readable collections
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin(); // Covered by global rule
    }
    
    match /dispensaryTypeProductCategories/{docId} {
      allow read: if true;
      allow write: if isSuperAdmin(); // Covered by global rule
    }
    
    match /creditPackages/{packageId} {
      allow read: if true;
      allow write: if isSuperAdmin(); // Covered by global rule
    }

    match /stickersets/{setId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update, delete: if isOwner(resource.data.creatorUid);
    }

    match /aiInteractionsLog/{logId} {
      allow read: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }

    // Read-only seeded data collections
    match /mushroom_products/{productId} { allow read: if true; allow write: if isSuperAdmin(); }
    match /my-seeded-collection/{strainId} { allow read: if true; allow write: if isSuperAdmin(); }
    match /justbrand_catalog/{docId} { allow read: if true; allow write: if isSuperAdmin(); }
    match /justbrand_catalog/{docId}/{subcollection}/{subdocId} { allow read: if true; allow write: if isSuperAdmin(); }
    match /scrapeLogs/{logId} { allow read: if true; allow write: if isSuperAdmin(); }
    match /importsHistory/{historyId} { allow read: if true; allow write: if isSuperAdmin(); }
  }
}
