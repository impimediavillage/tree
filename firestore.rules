
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // HELPER FUNCTIONS
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function userExists() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid));
    }
    
    function isSuperAdmin() {
      return userExists() && getUserData().role == 'Super Admin';
    }

    function isDispensaryOwner(dispensaryId) {
      return userExists() && 
             getUserData().role == 'DispensaryOwner' && 
             getUserData().dispensaryId == dispensaryId;
    }

    // COLLECTION RULES
    match /users/{userId} {
      allow read: if isOwner(userId) || isSuperAdmin();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isSuperAdmin();
      allow delete: if isSuperAdmin();
    }

    match /dispensaries/{dispensaryId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isDispensaryOwner(dispensaryId) || isSuperAdmin();
      allow delete: if isSuperAdmin();
    }

    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /dispensaryTypeProductCategories/{docId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /products/{productId} {
      allow read: if true;
      allow create: if isDispensaryOwner(request.resource.data.dispensaryId) || isSuperAdmin();
      allow update: if isDispensaryOwner(get(/databases/$(database)/documents/products/$(productId)).data.dispensaryId) || isSuperAdmin();
      allow delete: if isDispensaryOwner(get(/databases/$(database)/documents/products/$(productId)).data.dispensaryId) || isSuperAdmin();
    }

    match /productRequests/{requestId} {
      allow read: if isDispensaryOwner(resource.data.productOwnerDispensaryId) || isDispensaryOwner(resource.data.requesterDispensaryId);
      allow create: if isDispensaryOwner(request.resource.data.requesterDispensaryId);
      allow update: if isDispensaryOwner(resource.data.productOwnerDispensaryId) || isDispensaryOwner(resource.data.requesterDispensaryId);
      allow delete: if false; // Deletions should be handled by status changes
    }

    match /poolIssues/{issueId} {
      allow read: if isSuperAdmin();
      allow create: if isDispensaryOwner(request.resource.data.reporterDispensaryId);
      allow update: if isSuperAdmin();
    }

    match /notifications/{notificationId} {
      allow read, update: if isOwner(resource.data.recipientUid);
      allow create, delete: if false; // Created by backend Cloud Functions
    }

    match /aiInteractionsLog/{logId} {
      allow create: if false; // Created by backend Cloud Function
      allow read: if isOwner(resource.data.userId) || isDispensaryOwner(resource.data.dispensaryId) || isSuperAdmin();
      allow write: if false;
    }

    match /creditPackages/{packageId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    match /scrapeLogs/{logId} {
      allow read, write: if isSuperAdmin();
    }
    
    match /importsHistory/{historyId} {
      allow read, write: if isSuperAdmin();
    }
    
    match /justbrand_catalog/{docId} {
      allow read: if true;
      allow write: if isSuperAdmin();
       match /products/{productId} {
          allow read: if true;
          allow write: if isSuperAdmin();
        }
    }
    
    match /my-seeded-collection/{docId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }

    match /stickersets/{stickerId} {
      allow read: if true;
      allow create: if isDispensaryOwner(request.resource.data.dispensaryId) || isSuperAdmin();
      allow update, delete: if isDispensaryOwner(resource.data.dispensaryId) || isSuperAdmin();
    }
  }
}
