
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // =====================================================================
    // Helper Functions
    // =====================================================================
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }
    
    function isDispensaryOwner(dispensaryId) {
      return request.auth != null && request.auth.token.role == 'DispensaryOwner' && request.auth.token.dispensaryId == dispensaryId;
    }

    function isDispensaryStaff(dispensaryId) {
        return request.auth != null && request.auth.token.role == 'DispensaryStaff' && request.auth.token.dispensaryId == dispensaryId;
    }
    
    function isOwnerOrStaff(dispensaryId) {
        return isDispensaryOwner(dispensaryId) || isDispensaryStaff(dispensaryId);
    }

    function isSignedIn() {
      return request.auth != null;
    }

    function isThemselves(userId) {
        return isSignedIn() && request.auth.uid == userId;
    }

    // =====================================================================
    // Global Rule for Super Admin
    // =====================================================================
    // Super Admins have unrestricted read/write access to the entire database.
    // This rule is checked first. If it passes, access is granted.
    match /{document=**} {
      allow read, write: if isSuperAdmin();
    }
    
    // =====================================================================
    // Collection-Specific Rules
    // =====================================================================

    // Dispensaries Collection
    match /dispensaries/{dispensaryId} {
      // Anyone can apply to create a new dispensary profile.
      allow create: if true;
      // Anyone can read approved dispensaries.
      allow read: if resource.data.status == 'Approved';
      // Only the assigned owner/staff can update their own dispensary. Super Admin access is handled by the global rule.
      allow update: if isOwnerOrStaff(dispensaryId);
    }

    // Users Collection
    match /users/{userId} {
      // Users can read, update, or delete their own document.
      allow read, update, delete: if isThemselves(userId);
      // New users can create their own user document during public signup.
      allow create: if request.auth.uid == userId;
    }
    
    // Products Collection
    match /products/{productId} {
      // Anyone can read any product.
      allow read: if true;
      // Only the owner/staff of the dispensary that owns the product can manage it.
      allow create, update, delete: if isOwnerOrStaff(request.resource.data.dispensaryId);
    }

    // Dispensary Types Collection (e.g., "THC Store", "Homeopathy")
    match /dispensaryTypes/{typeId} {
        // Publicly readable.
        allow read: if true;
        // Only Super Admins can create, update, or delete types (handled by global rule).
        allow create, update, delete: if false; 
    }

    // Credit Packages Collection
    match /creditPackages/{packageId} {
        // Only active packages are readable by the public.
        allow read: if resource.data.isActive == true;
        // Only Super Admins can manage credit packages.
        allow create, update, delete: if false;
    }
    
    // Product Requests (Pool Transactions)
    match /productRequests/{requestId} {
        // Only the involved parties (requester or owner) can read or update a request.
        allow read, update: if isOwnerOrStaff(resource.data.productOwnerDispensaryId) || isOwnerOrStaff(resource.data.requesterDispensaryId);
        // Only an authenticated store owner/staff can create a new request.
        allow create: if isOwnerOrStaff(request.resource.data.requesterDispensaryId);
        // Requests cannot be deleted to maintain history.
        allow delete: if false;
    }

    // Pool Issues Collection
    match /poolIssues/{issueId} {
        // Any signed-in user (dispensary staff/owner) can report an issue.
        allow create: if isSignedIn();
        // Only Super Admins can read or update issues.
        allow read, update: if false;
    }
    
    // Notifications Collection
    match /notifications/{notificationId} {
        // Only the recipient can interact with their own notification.
        allow read, update, delete: if request.auth.uid == resource.data.recipientUid;
    }
    
    // AI Interactions Log Collection
    match /aiInteractionsLog/{logId} {
        // A user can create their own log entries.
        allow create: if isSignedIn();
        // A user can only read their own interaction logs.
        allow read: if isThemselves(resource.data.userId);
    }
    
    // Sticker Sets Collection
     match /stickersets/{stickerId} {
        // Anyone can view a public sticker set.
        allow read: if resource.data.isPublic == true;
        // Any signed-in user can create a sticker set.
        allow create: if isSignedIn();
        // Only the original creator can update or delete their sticker set.
        allow update, delete: if request.auth.uid == resource.data.creatorUid;
    }
  }
}
