rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // == Helper Functions ==
    function isSignedIn() {
      return request.auth != null;
    }

    // Safely get the role of the currently authenticated user
    function getUserRole() {
      if (exists(/databases/$(database)/documents/users/$(request.auth.uid))) {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
      }
      return 'unknown';
    }

    // Check if the current user is a Super Admin
    function isSuperAdmin() {
      return getUserRole() == 'Super Admin';
    }

    // Check if the current user owns the specified dispensary
    function isOwnerOfDispensary(dispensaryId) {
      if (isSignedIn() && exists(/databases/$(database)/documents/users/$(request.auth.uid))) {
        let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
        return userDoc.role == 'DispensaryOwner' && userDoc.dispensaryId == dispensaryId;
      }
      return false;
    }
    
    // == Collection Rules ==

    // Users can read/update their own data. Admins can manage all users.
    match /users/{userId} {
      allow read: if isSignedIn() && (request.auth.uid == userId || isSuperAdmin());
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow update: if isSignedIn() && (request.auth.uid == userId || isSuperAdmin());
    }

    // Public can read approved dispensaries. Owners/Admins can update.
    match /dispensaries/{dispensaryId} {
      allow read: if resource.data.status == 'Approved' || isOwnerOfDispensary(dispensaryId) || isSuperAdmin();
      allow create: if isSignedIn();
      allow update: if isOwnerOfDispensary(dispensaryId) || isSuperAdmin();
    }
    
    // Public can read dispensary types and their categories. Admins manage them.
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    match /dispensaryTypeProductCategories/{docId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    // Products can be read by anyone. They can only be managed by the dispensary owner.
    match /products/{productId} {
      allow read: if true;
      allow create: if isOwnerOfDispensary(request.resource.data.dispensaryId);
      allow update, delete: if isOwnerOfDispensary(resource.data.dispensaryId);
    }
    
    // Product Requests can be managed by the involved parties or an admin.
    match /productRequests/{requestId} {
      allow read, update: if isOwnerOfDispensary(resource.data.productOwnerDispensaryId) || 
                             isOwnerOfDispensary(resource.data.requesterDispensaryId) || 
                             isSuperAdmin();
      allow create: if isOwnerOfDispensary(request.resource.data.requesterDispensaryId);
    }

    // Pool issues are managed by admins, but can be read by involved parties.
    match /poolIssues/{issueId} {
      allow read: if isOwnerOfDispensary(resource.data.reporterDispensaryId) || 
                     isOwnerOfDispensary(resource.data.reportedDispensaryId) ||
                     isSuperAdmin();
      allow create: if isSignedIn(); // Requestor can create
      allow update: if isSuperAdmin(); // Only admin can update status/resolution
    }

    // Notifications can only be accessed by the recipient.
    match /notifications/{notificationId} {
      allow read, update, delete: if isSignedIn() && request.auth.uid == resource.data.recipientUid;
    }
    
    // AI Logs can be read by the user, their dispensary owner, or an admin.
    match /aiInteractionsLog/{logId} {
      allow read: if (isSignedIn() && request.auth.uid == resource.data.userId) || 
                     (resource.data.dispensaryId != null && isOwnerOfDispensary(resource.data.dispensaryId)) || 
                     isSuperAdmin();
      allow write: if false; // Only backend functions can write logs.
    }
    
    // Credit packages can be read by anyone, but only managed by admins.
    match /creditPackages/{packageId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    // Pricing config can only be written by admins, but read by anyone.
    match /platformConfig/pricing {
        allow read: if true;
        allow write: if isSuperAdmin();
    }

    // Sticker sets can be read by anyone. Managed by owner or admin.
    match /stickersets/{stickerId} {
        allow read: if true;
        allow create: if isOwnerOfDispensary(request.resource.data.dispensaryId) || isSuperAdmin();
        allow update, delete: if isOwnerOfDispensary(resource.data.dispensaryId) || isSuperAdmin();
    }

    // Scraper & Seed data can only be accessed by Super Admins.
    match /scrapeLogs/{logId} {
      allow read, write: if isSuperAdmin();
    }
    match /importsHistory/{historyId} {
      allow read, write: if isSuperAdmin();
    }
    match /justbrand_catalog/{doc=**} {
      allow read, write: if isSuperAdmin();
    }
    match /my-seeded-collection/{strainId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
  }
}
