rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to make rules cleaner
    function isSignedIn() {
      return request.auth != null;
    }

    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }

    function isOwner(dispensaryId) {
      return request.auth.token.dispensaryId == dispensaryId;
    }

    function isDispensaryStaff(dispensaryId) {
        return request.auth.token.dispensaryId == dispensaryId && request.auth.token.role == 'DispensaryStaff';
    }

    // Rules for dispensaryTypes collection
    match /dispensaryTypes/{typeId} {
      allow read: if true; // Publicly readable
      allow write: if isSuperAdmin(); // Only Super Admins can create, update, delete
    }
     // Rules for dispensaryTypeProductCategories collection
    match /dispensaryTypeProductCategories/{docId} {
      allow read: if true; // Publicly readable
      allow write: if isSuperAdmin(); // Only Super Admins can manage categories
    }

    // Rules for dispensaries collection
    match /dispensaries/{dispensaryId} {
      // Super Admins have unconditional full access.
      // Owners can update their own dispensary.
      // Public can read approved dispensaries.
      allow read: if resource.data.status == 'Approved' || isSuperAdmin() || isOwner(dispensaryId);
      allow create: if isSuperAdmin(); // Only Super Admins can create directly. Others use signup form.
      allow update: if isSuperAdmin() || isOwner(dispensaryId);
      allow delete: if isSuperAdmin();
    }

    // Rules for products collection
    match /products/{productId} {
      allow read: if true; // Publicly readable
      allow create, update: if isOwner(request.resource.data.dispensaryId) || isSuperAdmin();
      allow delete: if isOwner(resource.data.dispensaryId) || isSuperAdmin();
    }
    
    // Rules for users collection
    match /users/{userId} {
      // Users can read and update their own document.
      // Super Admins can read/write any user document.
      // Dispensary owners can read documents of users linked to their dispensary.
      allow read, update: if request.auth.uid == userId || isSuperAdmin();
      allow create: if isSignedIn(); // Any signed-in user can create their own user doc (on signup)
    }
    
    // Rules for productRequests collection
    match /productRequests/{requestId} {
        // Must be signed in to do anything.
        allow read, update: if isSignedIn() && 
                             (isOwner(resource.data.productOwnerDispensaryId) || 
                              isOwner(resource.data.requesterDispensaryId) || 
                              isSuperAdmin());
        allow create: if isSignedIn() && isOwner(request.resource.data.requesterDispensaryId);
        allow delete: if isSuperAdmin();
    }

    // Rules for notifications collection
    match /notifications/{notificationId} {
      // Users can only read notifications intended for them.
      allow read, update, delete: if isSignedIn() && resource.data.recipientUid == request.auth.uid;
      // Notifications are created by backend functions, not directly by clients.
      allow create: if false; 
    }
    
    // Rules for poolIssues collection
    match /poolIssues/{issueId} {
      // Only involved parties or Super Admin can read/update.
      allow read, update: if isSignedIn() &&
                           (isOwner(resource.data.reporterDispensaryId) ||
                            isOwner(resource.data.reportedDispensaryId) ||
                            isSuperAdmin());
      allow create: if isSignedIn() && isOwner(request.resource.data.reporterDispensaryId);
      allow delete: if isSuperAdmin();
    }
    
    // Rules for creditPackages collection
    match /creditPackages/{packageId} {
        allow read: if true; // Publicly readable
        allow write: if isSuperAdmin(); // Only Super Admins can manage packages
    }

    // Rules for AI Interaction Logs
    match /aiInteractionsLog/{logId} {
        // Users can read their own logs. Super Admins can read all logs.
        allow read: if isSignedIn() && (resource.data.userId == request.auth.uid || isSuperAdmin());
        // Logs are created by backend functions.
        allow create, update, delete: if false; 
    }

    // Rules for sticker sets
    match /stickersets/{setId} {
        allow read: if true; // Publicly readable
        // Only the creator or a super admin can update/delete
        allow update, delete: if isSignedIn() && (resource.data.creatorUid == request.auth.uid || isSuperAdmin());
        // Any signed-in user can create a sticker set
        allow create: if isSignedIn();
    }
  }
}
