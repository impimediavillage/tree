
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isSuperAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    function isOwner(dispensaryId) {
      return request.auth.token.dispensaryId == dispensaryId;
    }
    
    function isStaff(dispensaryId) {
       return request.auth.token.role == 'DispensaryStaff' && isOwner(dispensaryId);
    }
    
    function isOwnerOrStaff(dispensaryId) {
      return isOwner(dispensaryId) || isStaff(dispensaryId);
    }

    // ANYONE can read approved dispensaries, their types, and their products.
    // This allows for the public-facing storefronts to function.
    match /dispensaries/{dispensaryId} {
      allow read: if resource.data.status == 'Approved' || isOwner(dispensaryId) || isSuperAdmin();
      allow list: if isSuperAdmin(); // Only super admin can list all for the dashboard
      allow create: if request.auth != null; // Any authenticated user can apply
      allow update: if isOwner(dispensaryId) || isSuperAdmin();
      allow delete: if isSuperAdmin();
    }
    
    match /dispensaryTypes/{typeId} {
        allow read: if true;
        allow list: if true;
        allow create, update, delete: if isSuperAdmin();
    }

    match /dispensaryTypeProductCategories/{docId} {
        allow read: if true;
        allow create, update, delete: if isSuperAdmin();
    }

    match /products/{productId} {
      allow read: if true; // All products are public readable
      allow list: if isSuperAdmin(); // Listing all products is admin-only for now
      allow create: if isOwnerOrStaff(request.resource.data.dispensaryId) || isSuperAdmin();
      allow update: if isOwnerOrStaff(resource.data.dispensaryId) || isSuperAdmin();
      allow delete: if isOwnerOrStaff(resource.data.dispensaryId) || isSuperAdmin();
    }
    
    match /stickersets/{stickerId} {
        allow read: if true;
        allow list: if true;
        allow create: if request.auth != null; // Any logged in user can create
        allow update, delete: if request.auth.uid == resource.data.creatorUid || isSuperAdmin();
    }

    // Authenticated users can manage their own user document.
    // Super Admins can manage any user document.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isSuperAdmin();
      allow create: if request.auth != null; // Any authenticated user can create their own doc
      allow delete, list: if isSuperAdmin();
    }

    // Only Super Admins can manage credit packages.
    // Users interact with credits via cloud functions.
    match /creditPackages/{packageId} {
        allow read: if true; // Allow reading for purchase page
        allow list: if true; // Allow listing for purchase page
        allow create, update, delete: if isSuperAdmin();
    }
    
    // Notifications are private to the recipient.
    match /notifications/{notificationId} {
      allow read, update, delete, list: if request.auth.uid == resource.data.recipientUid || isSuperAdmin();
      // Creation is handled by backend functions.
      allow create: if isSuperAdmin(); 
    }

    // Product requests can be read by involved parties.
    match /productRequests/{requestId} {
      allow read, update: if 
          isOwnerOrStaff(resource.data.productOwnerDispensaryId) || 
          isOwnerOrStaff(resource.data.requesterDispensaryId) || 
          isSuperAdmin();
      allow create: if request.auth != null; // Any authenticated owner/staff can create
      allow delete: if isSuperAdmin();
    }

    // Pool issues are managed by Super Admins.
    match /poolIssues/{issueId} {
      allow read, list, update: if isSuperAdmin();
      allow create: if request.auth != null; // Any authenticated owner/staff can report
      allow delete: if isSuperAdmin();
    }
    
    // Users can write their own interaction logs via a function, but only admins can read them all.
    match /aiInteractionsLog/{logId} {
      allow read: if request.auth.uid == resource.data.userId || isSuperAdmin();
      allow list: if isSuperAdmin();
      // Creation is handled by a secured cloud function.
      allow create, update, delete: if false; 
    }
    
    // Scrape and import logs are admin-only
    match /scrapeLogs/{logId} {
        allow read, list, create, update, delete: if isSuperAdmin();
    }
    match /importsHistory/{logId} {
        allow read, list, create, update, delete: if isSuperAdmin();
    }
     match /justbrand_catalog/{docId} {
        allow read, list, create, update, delete: if isSuperAdmin();
    }
     match /justbrand_catalog/{docId}/{subcollection}/{subDocId} {
        allow read, list, create, update, delete: if isSuperAdmin();
    }
  }
}
