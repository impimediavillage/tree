
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to check user roles and ownership
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }

    function isDispensaryOwner() {
      return request.auth.token.role == 'DispensaryOwner';
    }
    
    function isOwnerOfDispensary(dispensaryId) {
      return request.auth.token.dispensaryId == dispensaryId;
    }
    
    function isOwnerOfUser(userId) {
        return request.auth.uid == userId;
    }
    
    // Global read access for public/static data
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /dispensaryTypeProductCategories/{docId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /creditPackages/{packageId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }
    
    match /stickersets/{setId} {
        allow read: if resource.data.isPublic == true;
        allow get, update: if isOwnerOfUser(resource.data.creatorUid) || isSuperAdmin();
        allow create: if request.auth != null && request.resource.data.creatorUid == request.auth.uid;
        allow delete: if isOwnerOfUser(resource.data.creatorUid) || isSuperAdmin();
    }
    
    match /my-seeded-collection/{strainId} {
        allow read: if request.auth != null;
        allow update: if isDispensaryOwner() || isSuperAdmin(); // For image URL updates
    }
    
    // Rules for Dispensaries
    match /dispensaries/{dispensaryId} {
      // Public can read approved dispensaries
      allow get: if resource.data.status == 'Approved';
      allow list: if resource.data.status == 'Approved';
      // SuperAdmins can read/write everything
      allow read, write: if isSuperAdmin();
      // Owners can read and update their own dispensary profile
      allow get, update: if isOwnerOfDispensary(dispensaryId);
      // Authenticated users can create an application
      allow create: if request.auth != null;
    }

    // Rules for Users
    match /users/{userId} {
      // SuperAdmins can manage all users
      allow read, write: if isSuperAdmin();
      // Users can get/update their own profile
      allow get, update: if isOwnerOfUser(userId);
      // Dispensary owners can get their associated staff/leaf users
      allow get, update: if isDispensaryOwner() && resource.data.dispensaryId == request.auth.token.dispensaryId;
      // Allow users to create their own document on signup
      allow create: if isOwnerOfUser(userId);
    }
    
    // Rules for Products
    match /products/{productId} {
        // Public users can read products from approved dispensaries
        allow read: if get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved';
        // SuperAdmins can do anything
        allow read, write: if isSuperAdmin();
        // Owners can manage products for their own dispensary
        allow get, create, update, delete: if isOwnerOfDispensary(resource.data.dispensaryId);
        // Owners can LIST their OWN products.
        allow list: if isOwnerOfDispensary(request.query.filters[0].value);
    }
    
    // Rules for Product Requests (Pool)
    match /productRequests/{requestId} {
        allow read, update, create: if isDispensaryOwner() && 
                                  (isOwnerOfDispensary(resource.data.requesterDispensaryId) || 
                                   isOwnerOfDispensary(resource.data.productOwnerDispensaryId));
        allow read, write: if isSuperAdmin();
    }
    
    // Rules for Pool Issues
    match /poolIssues/{issueId} {
        allow create: if isDispensaryOwner();
        allow read, write: if isSuperAdmin();
    }
    
    // Rules for AI Interaction Logs
    match /aiInteractionsLog/{logId} {
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        allow read: if isOwnerOfUser(resource.data.userId) || isSuperAdmin();
    }
    
    // Rules for Notifications
    match /notifications/{notificationId} {
        allow create: if true; // Functions create notifications
        allow read, update: if isOwnerOfUser(resource.data.recipientUid);
        allow read, write, delete: if isSuperAdmin();
    }
  }
}
