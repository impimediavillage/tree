
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isSuperAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }
    function isDispensaryOwner(dispensaryId) {
      if (!exists(/databases/$(database)/documents/users/$(request.auth.uid))) {
        return false;
      }
      let userData = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return userData.role == 'DispensaryOwner' && userData.dispensaryId == dispensaryId;
    }
    function isDispensaryStaff(dispensaryId) {
      if (!exists(/databases/$(database)/documents/users/$(request.auth.uid))) {
        return false;
      }
      let userData = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return userData.role == 'DispensaryStaff' && userData.dispensaryId == dispensaryId;
    }
    function isOwnerOrStaff(dispensaryId) {
      return isDispensaryOwner(dispensaryId) || isDispensaryStaff(dispensaryId);
    }
    function isAnyAuthenticatedUser() {
      return request.auth != null;
    }

    // Rules for 'users' collection
    match /users/{userId} {
      allow read: if isAnyAuthenticatedUser() || isSuperAdmin();
      allow write: if request.auth.uid == userId || isSuperAdmin();
    }

    // Rules for 'dispensaries' collection
    match /dispensaries/{dispensaryId} {
      allow read: if resource.data.status == 'Approved' || isSuperAdmin() || isOwnerOrStaff(dispensaryId);
      allow create: if isAnyAuthenticatedUser(); // Public can apply
      allow update: if isSuperAdmin() || isDispensaryOwner(dispensaryId);
      allow delete: if isSuperAdmin();
    }
    
    // Rules for 'dispensaryTypes' collection
    match /dispensaryTypes/{typeId} {
        allow read: if true; // Publicly readable
        allow write: if isSuperAdmin();
    }

    // Rules for 'dispensaryTypeProductCategories' collection
    match /dispensaryTypeProductCategories/{docId} {
        allow read: if true; // Publicly readable
        allow write: if isSuperAdmin();
    }

    // Rules for 'products' subcollection
    match /products/{productId} {
      allow read: if true; // Products are public
      allow create: if isOwnerOrStaff(request.resource.data.dispensaryId);
      allow update, delete: if isOwnerOrStaff(resource.data.dispensaryId);
    }
    
    // Rules for 'productRequests' collection
    match /productRequests/{requestId} {
      allow read, update: if isOwnerOrStaff(resource.data.productOwnerDispensaryId) || isOwnerOrStaff(resource.data.requesterDispensaryId) || isSuperAdmin();
      allow create: if isOwnerOrStaff(request.resource.data.requesterDispensaryId);
      allow delete: if isSuperAdmin();
    }
    
    // Rules for 'poolIssues' collection
    match /poolIssues/{issueId} {
        allow read, update, delete: if isSuperAdmin();
        allow create: if isAnyAuthenticatedUser();
    }
    
     // Rules for 'notifications' collection
    match /notifications/{notificationId} {
      allow read, write: if request.auth.uid == resource.data.recipientUid;
      // Note: Creation is handled by backend functions, so no client 'create' rule is needed.
    }
    
    // Rules for 'aiInteractionsLog' collection
    match /aiInteractionsLog/{logId} {
        allow read: if request.auth.uid == resource.data.userId || isSuperAdmin();
        // Creation is handled by backend function
    }

    // Rules for 'creditPackages' collection
    match /creditPackages/{packageId} {
        allow read: if true; // Publicly readable
        allow write: if isSuperAdmin();
    }
    
     // Rules for 'platformConfig' collection
    match /platformConfig/{configId} {
        allow read: if true; // Publicly readable for pricing etc.
        allow write: if isSuperAdmin();
    }
    
    // Rules for 'stickersets' collection
    match /stickersets/{stickerSetId} {
      allow read: if true; // Sticker sets are public to view in a store
      allow create: if isDispensaryOwner(request.resource.data.dispensaryId) || isSuperAdmin();
      allow update, delete: if isDispensaryOwner(resource.data.dispensaryId) || isSuperAdmin();
    }
  }
}
