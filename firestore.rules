
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for Super Admin role in the user's auth token
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }

    // Helper function to check if a user is the owner of a specific dispensary
    function isDispensaryOwner(dispensaryId) {
      return request.auth.uid != null && request.auth.token.role == 'DispensaryOwner' && request.auth.token.dispensaryId == dispensaryId;
    }

    // Helper function to check if the user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Global rule: Super Admins have unrestricted access to everything.
    match /{document=**} {
      allow read, write: if isSuperAdmin();
    }
    
    // Dispensary Types: Publicly readable, only Super Admins can write
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    // Dispensary Product Categories: Publicly readable, only Super Admins can write
    match /dispensaryTypeProductCategories/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    // Dispensaries Collection
    match /dispensaries/{dispensaryId} {
      // Anyone can read approved dispensaries
      allow read: if resource.data.status == 'Approved' || isSuperAdmin();
      // Anyone can create a new dispensary application
      allow create: if true;
      // Only the owner of the dispensary or a Super Admin can update
      allow update: if isDispensaryOwner(dispensaryId) || isSuperAdmin();
      // Only Super Admins can delete
      allow delete: if isSuperAdmin();
    }
    
    // Users Collection
    match /users/{userId} {
      // Users can read/write their own document. Super Admins can read/write any.
      allow read, update: if request.auth.uid == userId || isSuperAdmin();
      // Anyone can create their own user document (on signup)
      allow create: if request.auth.uid == userId;
      // Only Super Admins can delete users
      allow delete: if isSuperAdmin();
    }

    // Products Collection
    match /products/{productId} {
      // Anyone can read a product
      allow read: if true;
      // Only the linked dispensary owner or a Super Admin can create/update/delete products
      allow create, update, delete: if isDispensaryOwner(resource.data.dispensaryId) || isSuperAdmin();
    }

    // Product Requests Collection
    match /productRequests/{requestId} {
      // Only the involved parties (requester, owner) or a Super Admin can read
      allow read: if isSuperAdmin() || 
                   isDispensaryOwner(resource.data.requesterDispensaryId) || 
                   isDispensaryOwner(resource.data.productOwnerDispensaryId);
      // Only a dispensary owner can create a request
      allow create: if isDispensaryOwner(request.resource.data.requesterDispensaryId);
      // Only involved parties or a Super Admin can update
      allow update: if isSuperAdmin() || 
                     isDispensaryOwner(resource.data.requesterDispensaryId) || 
                     isDispensaryOwner(resource.data.productOwnerDispensaryId);
      // Delete is restricted to Super Admins for record-keeping
      allow delete: if isSuperAdmin();
    }
    
    // Pool Issues Collection
    match /poolIssues/{issueId} {
        // Only Super Admins can read all issues
        allow read: if isSuperAdmin();
        // Involved parties can create an issue
        allow create: if isDispensaryOwner(request.resource.data.reporterDispensaryId);
        // Only Super Admins can update/resolve issues
        allow update, delete: if isSuperAdmin();
    }

    // Notifications: Users can only read their own notifications
    match /notifications/{notificationId} {
        allow read, update: if request.auth.uid == resource.data.recipientUid;
        // Creation is handled by backend functions
        allow create, delete: if false; 
    }
    
    // AI Interaction Logs: Write-only for functions, read-only for user/admin
    match /aiInteractionsLog/{logId} {
      allow read: if request.auth.uid == resource.data.userId || isSuperAdmin();
      // Creation is handled by backend functions
      allow create: if true; 
      allow update, delete: if isSuperAdmin();
    }

    // Credit Packages: Publicly readable, only Super Admins can write
    match /creditPackages/{packageId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    // Sticker Sets: Publicly readable, only creator or Super Admin can write
    match /stickersets/{setId} {
      allow read: if resource.data.isPublic == true || request.auth.uid == resource.data.creatorUid || isSuperAdmin();
      allow create: if isSignedIn();
      allow update: if request.auth.uid == resource.data.creatorUid || isSuperAdmin();
      allow delete: if request.auth.uid == resource.data.creatorUid || isSuperAdmin();
    }

  }
}
