rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is a Super Admin
    function isSuperAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    // Helper function to check if a user is the owner of a specific dispensary
    function isDispensaryOwner(dispensaryId) {
      return request.auth.uid == get(/databases/$(database)/documents/dispensaries/$(dispensaryId)).data.ownerId;
    }
    
    // Helper function to get the user's role from their user document
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    // Helper function to check if user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Users can read their own profile, Super Admins can read/write any profile
    match /users/{userId} {
      allow read: if isSuperAdmin() || request.auth.uid == userId;
      allow write: if isSuperAdmin() || request.auth.uid == userId;
      allow create: if isSignedIn(); // Allow any signed-in user to create their own profile document
    }

    // Public can read approved dispensaries, owners can update their own, admins can do anything
    match /dispensaries/{dispensaryId} {
      allow read: if resource.data.status == 'Approved' || isDispensaryOwner(dispensaryId) || isSuperAdmin();
      allow create, update, delete: if isSuperAdmin() || isDispensaryOwner(dispensaryId);
    }
    
    // Dispensary Types are public readable
    match /dispensaryTypes/{typeId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }
    
    // Categories are readable by anyone, writable only by admin
    match /dispensaryTypeProductCategories/{docId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }

    // Public can read products from approved dispensaries. Owners can manage their own products.
    match /products/{productId} {
      allow read: if get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved';
      allow create, update, delete: if isDispensaryOwner(request.resource.data.dispensaryId) || isSuperAdmin();
    }
    
    // Sticker Sets: Public can read, creator can manage, admin can manage
    match /stickersets/{setId} {
        allow read: if resource.data.isPublic == true || (isSignedIn() && resource.data.creatorUid == request.auth.uid) || isSuperAdmin();
        allow create: if isSignedIn();
        allow update, delete: if (isSignedIn() && resource.data.creatorUid == request.auth.uid) || isSuperAdmin();
    }
    
    // Product Requests can only be read/written by involved parties or admin
    match /productRequests/{requestId} {
      allow read, update: if isSuperAdmin() || isDispensaryOwner(resource.data.productOwnerDispensaryId) || isDispensaryOwner(resource.data.requesterDispensaryId);
      allow create: if isDispensaryOwner(request.resource.data.requesterDispensaryId);
      allow delete: if isSuperAdmin() || isDispensaryOwner(resource.data.requesterDispensaryId);
    }
    
    // Pool Issues are managed by admins, but can be read by involved parties
    match /poolIssues/{issueId} {
      allow read: if isSuperAdmin() || isDispensaryOwner(resource.data.reporterDispensaryId) || isDispensaryOwner(resource.data.reportedDispensaryId);
      allow create: if isDispensaryOwner(request.resource.data.reporterDispensaryId);
      allow update, delete: if isSuperAdmin();
    }
    
    // Credit packages can be read by anyone, managed by admin
    match /creditPackages/{packageId} {
      allow read: if true;
      allow create, update, delete: if isSuperAdmin();
    }

    // Notifications are private to the recipient
    match /notifications/{notificationId} {
      allow read, write: if isSignedIn() && resource.data.recipientUid == request.auth.uid;
      allow create: if isSignedIn(); // Functions create these
    }
    
    // AI interaction logs are private
    match /aiInteractionsLog/{logId} {
      allow read, write: if isSignedIn() && resource.data.userId == request.auth.uid;
      allow create: if true; // Created by backend functions
    }
    
    // Scraper and import logs are admin only
    match /scrapeLogs/{logId} {
        allow read, write: if isSuperAdmin();
    }
    
    match /importsHistory/{historyId} {
        allow read, write: if isSuperAdmin();
    }

    // Seeded data and scraped data can be read by anyone, but only written by admin
    match /my-seeded-collection/{strainId} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }
    
    match /justbrand_catalog/{doc=**} {
        allow read: if true;
        allow write: if isSuperAdmin();
    }
  }
}
