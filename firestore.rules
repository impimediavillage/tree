rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Allow authenticated users to read dispensary type category structures
    match /dispensaryTypeProductCategories/{typeId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    // Allow authenticated users to read credit packages
    match /creditPackages/{packageId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    // Allow public read for approved dispensaries and their products
    match /dispensaries/{dispensaryId} {
      allow read: if resource.data.status == 'Approved';
      allow write: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin' || request.auth.uid == resource.data.ownerUid);
      
      match /products/{productId} {
        allow read: if get(/databases/$(database)/documents/dispensaries/$(dispensaryId)).data.status == 'Approved';
        allow write: if request.auth != null && request.auth.uid == get(/databases/$(database)/documents/dispensaries/$(dispensaryId)).data.ownerUid;
      }
    }

    // Rules for user documents
    match /users/{userId} {
      // Allow users to read and update their own document
      allow read, update: if request.auth != null && request.auth.uid == userId;
      // Allow Super Admins to read/write any user document
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
      // Allow users to create their own user document on signup
      allow create: if request.auth != null && request.auth.uid == userId;
    }

    // Rules for product requests (pool functionality)
    match /productRequests/{requestId} {
      // Allow involved parties (requester or owner) and Super Admins to read
      allow read: if request.auth != null && 
                    (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == resource.data.requesterDispensaryId ||
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == resource.data.productOwnerDispensaryId ||
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin');
      
      // Allow involved parties to update, but not create once it exists
      allow update: if request.auth != null && 
                     (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == resource.data.requesterDispensaryId ||
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == resource.data.productOwnerDispensaryId);
      
      // Allow any authenticated dispensary owner to create a request
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'DispensaryOwner';
    }
    
    // Rules for sticker sets
    match /stickersets/{setId} {
      // Public sets can be read by anyone, private sets only by the creator or admin
      allow read: if resource.data.isPublic == true || (request.auth != null && (request.auth.uid == resource.data.creatorUid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin'));
      // Only the creator can create/update/delete their own sets
      allow create, update, delete: if request.auth != null && request.auth.uid == request.resource.data.creatorUid;
      // Super admin can update/delete any set
      allow update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
