
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSuperAdmin() {
      return request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    function isOwnerOfDispensary(dispensaryId) {
      return request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == dispensaryId;
    }

    match /users/{userId} {
      allow read: if request.auth.uid == userId || isSuperAdmin() || isOwnerOfDispensary(resource.data.dispensaryId);
      allow write: if request.auth.uid == userId || isSuperAdmin();
      // Allow a dispensary owner to list users associated with their dispensary
      allow list: if isSuperAdmin() || (request.auth.uid != null && request.query.where.dispensaryId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId);
    }

    match /dispensaries/{dispensaryId} {
      allow read: if true;
      allow list: if true;
      allow create: if request.auth != null; // Public can apply
      allow update, delete: if isSuperAdmin() || isOwnerOfDispensary(dispensaryId);
    }

    match /products/{productId} {
      // Corrected rule: A user can read/list a product if their dispensaryId matches the product's dispensaryId.
      // This is secure because the user's dispensaryId is read from their authenticated server-side document.
      // The client query MUST include `where('dispensaryId', '==', currentUser.dispensaryId)` for this to work.
      allow read: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == resource.data.dispensaryId;
      allow list: if request.auth.uid != null && request.query.where.dispensaryId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId;
      allow write, delete: if request.auth.uid != null && isOwnerOfDispensary(resource.data.dispensaryId);
    }

    match /dispensaryTypes/{typeId} {
      allow read, list: if true;
      allow write: if isSuperAdmin();
    }
    
    match /dispensaryTypeProductCategories/{docId} {
        allow read, list: if true;
        allow write: if isSuperAdmin();
    }

    match /productRequests/{requestId} {
      allow read, write: if request.auth.uid != null && (isOwnerOfDispensary(resource.data.requesterDispensaryId) || isOwnerOfDispensary(resource.data.productOwnerDispensaryId));
      allow list: if request.auth.uid != null; // Queries must be filtered client-side
    }

    match /poolIssues/{issueId} {
       allow read, write, create: if request.auth.uid != null; // Further rules needed if sensitive
       allow list: if isSuperAdmin();
    }

    match /creditPackages/{packageId} {
      allow read, list: if true;
      allow write: if isSuperAdmin();
    }
    
    match /aiInteractionsLog/{logId} {
      allow read: if request.auth.uid == resource.data.userId || isSuperAdmin();
      allow create: if request.auth.uid == request.resource.data.userId;
      allow list: if isSuperAdmin() || (request.auth.uid != null && request.query.where.userId == request.auth.uid);
    }
    
    match /stickersets/{stickerId} {
      allow read, list: if true; // Public can view/list sticker sets
      allow create, update, delete: if request.auth.uid != null && request.auth.uid == resource.data.creatorUid;
    }
  }
}
