rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper Functions
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }
    
    function isDispensaryOwner(dispensaryId) {
      return request.auth.token.role == 'DispensaryOwner' && request.auth.token.dispensaryId == dispensaryId;
    }
    
    function isSignedIn() {
      return request.auth != null;
    }

    // Collection Rules
    match /users/{userId} {
      allow read: if isSuperAdmin() || request.auth.uid == userId;
      allow list: if isSuperAdmin();
      allow create: if isSuperAdmin() || request.auth.uid == userId;
      allow update: if isSuperAdmin() || request.auth.uid == userId;
      allow delete: if isSuperAdmin();
    }

    match /dispensaries/{dispensaryId} {
      // Unauthenticated users can read approved dispensaries
      allow get: if resource.data.status == 'Approved';
      // Signed-in users can list approved dispensaries
      allow list: if isSignedIn() && resource.data.status == 'Approved';
      
      // Super Admins can do anything
      allow read, update, delete: if isSuperAdmin();

      // **FIX:** Anyone can create a dispensary application as long as it's pending.
      // This allows the public dispensary sign-up form to work.
      allow create: if request.resource.data.status == 'Pending Approval';
    }

    match /dispensaryTypes/{typeId} {
      allow read, list: if true; // Publicly readable
      allow write: if isSuperAdmin();
    }
    
    match /dispensaryTypeProductCategories/{docId} {
      allow read: if true; // Publicly readable category structures
      allow write: if isSuperAdmin();
    }

    match /products/{productId} {
      // Anyone can see products from approved dispensaries.
      allow read, list: if get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved';
      // Only the owner of the dispensary or a Super Admin can write to products.
      allow write: if isSuperAdmin() || isDispensaryOwner(request.resource.data.dispensaryId);
    }
    
    match /productRequests/{requestId} {
      allow read, write: if isSuperAdmin() || 
                           isDispensaryOwner(request.resource.data.productOwnerDispensaryId) || 
                           isDispensaryOwner(request.resource.data.requesterDispensaryId);
      allow create: if isDispensaryOwner(request.resource.data.requesterDispensaryId);
    }
    
    match /poolIssues/{issueId} {
      allow read, write, create: if isSuperAdmin() || 
                                 isDispensaryOwner(request.resource.data.reporterDispensaryId);
    }

    match /notifications/{notificationId} {
      allow read, write: if isSuperAdmin() || request.auth.uid == resource.data.recipientUid;
      allow list: if isSuperAdmin();
    }
    
    match /creditPackages/{packageId} {
      allow read, list: if true; // Publicly readable
      allow write: if isSuperAdmin();
    }

    match /aiInteractionsLog/{logId} {
      allow read, list: if isSuperAdmin() || request.auth.uid == resource.data.userId;
      allow create: if isSignedIn();
    }
    
    match /stickersets/{setId} {
      allow read, list: if true; // Publicly viewable
      allow create: if isSignedIn();
      allow update, delete: if isSuperAdmin() || request.auth.uid == resource.data.creatorUid;
    }
    
    // Scraper related collections - Admin only
    match /scrapeLogs/{logId} {
      allow read, write, list: if isSuperAdmin();
    }
    
    match /importsHistory/{historyId} {
      allow read, write, list: if isSuperAdmin();
    }
    
    match /justbrand_catalog/{catId}/{document=**} {
      allow read, list: if isSuperAdmin();
      allow write: if false; // Data should only be written by the scraper function.
    }
    
    match /my-seeded-collection/{strainId} {
      allow read, list: if isSuperAdmin();
      allow update: if isSignedIn(); // Allow image update
      allow write: if isSuperAdmin();
    }
  }
}
