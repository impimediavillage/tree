rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper Functions
    function isSuperAdmin() {
      // Directly check the user's role from their document in the 'users' collection.
      // This is the most reliable way to confirm Super Admin status.
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isDispensaryOwner(dispensaryId) {
        return request.auth.token.dispensaryId == dispensaryId;
    }

    // Rules for 'users' collection
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isSuperAdmin();
      allow delete: if isSuperAdmin();
    }

    // Rules for 'dispensaries' collection
    match /dispensaries/{dispensaryId} {
        allow read: if resource.data.status == 'Approved' || (isSignedIn() && isDispensaryOwner(dispensaryId)) || isSuperAdmin();
        allow create: if isSignedIn(); // Application is open to any signed-in user
        allow update: if (isSignedIn() && isDispensaryOwner(dispensaryId)) || isSuperAdmin();
        allow delete: if isSuperAdmin();
    }
    
    // Rules for 'dispensaryTypes' collection
    match /dispensaryTypes/{typeId} {
      allow read: if true; // Publicly readable for signup and display
      allow write: if isSuperAdmin(); // Only Super Admins can create, update, or delete types
    }
    
    // Rules for 'dispensaryTypeProductCategories' collection
    match /dispensaryTypeProductCategories/{docId} {
      allow read: if isSignedIn();
      allow write: if isSuperAdmin();
    }

    // Rules for 'products' collection
    match /products/{productId} {
      allow read: if true; // Products are public
      allow create: if (isSignedIn() && isDispensaryOwner(request.resource.data.dispensaryId)) || isSuperAdmin();
      allow update: if (isSignedIn() && isDispensaryOwner(resource.data.dispensaryId)) || isSuperAdmin();
      allow delete: if (isSignedIn() && isDispensaryOwner(resource.data.dispensaryId)) || isSuperAdmin();
    }

    // Rules for 'productRequests' collection
    match /productRequests/{requestId} {
      allow read, update: if (isSignedIn() && (isDispensaryOwner(resource.data.requesterDispensaryId) || isDispensaryOwner(resource.data.productOwnerDispensaryId))) || isSuperAdmin();
      allow create: if (isSignedIn() && isDispensaryOwner(request.resource.data.requesterDispensaryId)) || isSuperAdmin();
      allow delete: if isSuperAdmin();
    }

    // Rules for 'poolIssues' collection
    match /poolIssues/{issueId} {
      allow read, update: if isSuperAdmin();
      allow create: if (isSignedIn() && isDispensaryOwner(request.resource.data.reporterDispensaryId)) || isSuperAdmin();
      allow delete: if isSuperAdmin();
    }

    // Rules for 'notifications' collection
    match /notifications/{notificationId} {
      allow read, update: if isSignedIn() && isOwner(resource.data.recipientUid);
      // Create is handled by backend functions only, not directly by clients.
      allow create, delete: if false; 
    }
    
    // Rules for 'creditPackages' collection
    match /creditPackages/{packageId} {
      allow read: if true; // Publicly readable for pricing page
      allow write: if isSuperAdmin();
    }
    
    // Rules for 'aiInteractionsLog' collection
    match /aiInteractionsLog/{logId} {
      allow read: if (isSignedIn() && isOwner(resource.data.userId)) || isSuperAdmin();
      // Create is handled by backend functions only
      allow create: if false; 
      allow update, delete: if isSuperAdmin();
    }
    
    // Rules for 'scrapeLogs' and 'importsHistory'
    match /scrapeLogs/{logId} {
      allow read: if isSuperAdmin();
      allow write: if false; // Only backend can write
    }
    match /importsHistory/{historyId} {
      allow read: if isSuperAdmin();
      allow write: if false; // Only backend can write
    }
    
    // Rules for 'justbrand_catalog'
    match /justbrand_catalog/{doc=**} {
        allow read: if isSuperAdmin();
        allow write: if false; // Only backend can write
    }

    // Rules for 'my-seeded-collection'
    match /my-seeded-collection/{strainId} {
      allow read: if isSignedIn(); // Allow any signed-in user to read for strain info fetching
      allow update: if isSignedIn() || isSuperAdmin(); // Allow authenticated users to trigger image updates via functions
      allow write: if isSuperAdmin(); // Only super admin can do full writes/deletes
    }

     // Rules for 'stickersets' collection
    match /stickersets/{setId} {
      allow read: if resource.data.isPublic == true || (isSignedIn() && isOwner(resource.data.creatorUid)) || isSuperAdmin();
      allow create: if isSignedIn();
      allow update: if (isSignedIn() && isOwner(resource.data.creatorUid)) || isSuperAdmin();
      allow delete: if (isSignedIn() && isOwner(resource.data.creatorUid)) || isSuperAdmin();
    }

  }
}