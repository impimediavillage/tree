rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }

    function isOwner(dispensaryId) {
      return request.auth.token.role == 'DispensaryOwner' && request.auth.token.dispensaryId == dispensaryId;
    }
    
    function isStaff(dispensaryId) {
      return request.auth.token.role == 'DispensaryStaff' && request.auth.token.dispensaryId == dispensaryId;
    }

    // Any authenticated user can read their own user document.
    // Super Admins can read/write any user document.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isSuperAdmin();
      allow create: if isSuperAdmin(); // Only admins can create users from backend now. Public signup is a separate flow.
      allow delete: if isSuperAdmin();
    }
    
    // Dispensaries can be read by anyone if they are approved.
    // They can be managed by their owner/staff or a Super Admin.
    match /dispensaries/{dispensaryId} {
      allow read: if resource.data.status == 'Approved' || isOwner(dispensaryId) || isStaff(dispensaryId) || isSuperAdmin();
      allow create: if request.auth != null; // Any authenticated user can apply.
      allow update: if isOwner(dispensaryId) || isSuperAdmin(); // Only owners or admins can change store details.
      allow delete: if isSuperAdmin();
    }

    // Products can be read by anyone if they belong to an approved dispensary.
    // They can be managed by their owner/staff or a Super Admin.
    match /products/{productId} {
      allow read: if get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved' || isOwner(resource.data.dispensaryId) || isStaff(resource.data.dispensaryId) || isSuperAdmin();
      allow create, update: if isOwner(request.resource.data.dispensaryId) || isStaff(request.resource.data.dispensaryId) || isSuperAdmin();
      allow delete: if isOwner(resource.data.dispensaryId) || isStaff(resource.data.dispensaryId) || isSuperAdmin();
    }
    
    // Dispensary Types can be read by anyone. Only Super Admins can manage them.
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow create, update, delete: if isSuperAdmin();
    }
    
    // Product Categories for types can be read by anyone. Only Super Admins can manage them.
    match /dispensaryTypeProductCategories/{docId} {
        allow read: if true;
        allow create, update, delete: if isSuperAdmin();
    }

    // Product Requests can be read/managed by the involved parties or a Super Admin.
    match /productRequests/{requestId} {
      allow read, update: if isOwner(resource.data.productOwnerDispensaryId) || isOwner(resource.data.requesterDispensaryId) || isStaff(resource.data.productOwnerDispensaryId) || isStaff(resource.data.requesterDispensaryId) || isSuperAdmin();
      allow create: if isOwner(request.resource.data.requesterDispensaryId) || isStaff(request.resource.data.requesterDispensaryId);
      allow delete: if isSuperAdmin();
    }

    // Pool Issues can be read/managed only by a Super Admin.
    // They can be created by an Owner or Staff.
    match /poolIssues/{issueId} {
      allow read, update, delete: if isSuperAdmin();
      allow create: if isOwner(request.resource.data.reporterDispensaryId) || isStaff(request.resource.data.reporterDispensaryId);
    }

    // Credit Packages can be read by anyone. Only Super Admins can manage them.
    match /creditPackages/{packageId} {
      allow read: if true;
      allow create, update, delete: if isSuperAdmin();
    }

    // AI interaction logs can only be created by the user who owns them. No one else can read them except Super Admins.
    match /aiInteractionsLog/{logId} {
      allow read: if request.auth.uid == resource.data.userId || isSuperAdmin();
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update, delete: if isSuperAdmin();
    }

    // Notifications can only be read by the recipient or a Super Admin.
    match /notifications/{notificationId} {
      allow read, update: if request.auth.uid == resource.data.recipientUid || isSuperAdmin();
      allow create, delete: if isSuperAdmin(); // Usually created by backend functions.
    }
    
    // Sticker sets can be read by anyone if public, otherwise only by the creator or admin.
    // They can be created by any authenticated user.
    match /stickersets/{setId} {
        allow read: if resource.data.isPublic == true || request.auth.uid == resource.data.creatorUid || isSuperAdmin();
        allow create: if request.auth.uid == request.resource.data.creatorUid;
        allow update: if request.auth.uid == resource.data.creatorUid || isSuperAdmin();
        allow delete: if request.auth.uid == resource.data.creatorUid || isSuperAdmin();
    }

    // Seeded data collections. Can be read by anyone, only managed by Super Admin.
    match /my-seeded-collection/{strainId} {
        allow read: if true;
        allow create, update, delete: if isSuperAdmin();
    }
    
    // Scrape/Import logs. Only managed by Super Admin.
    match /scrapeLogs/{logId} {
        allow read, create, update, delete: if isSuperAdmin();
    }
    match /importsHistory/{historyId} {
        allow read, create, update, delete: if isSuperAdmin();
    }
    
    // Data from external sources. Read-only for all authenticated users.
    match /justbrand_catalog/{docId} {
        allow read: if request.auth != null;
        allow write: if isSuperAdmin(); // Only admin can write
        
        match /{allChildren=**} {
            allow read: if request.auth != null;
            allow write: if isSuperAdmin();
        }
    }
  }
}
