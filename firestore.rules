
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }
    
    function isDispensaryOwner(dispensaryId) {
      return request.auth.token.role == 'DispensaryOwner' && request.auth.token.dispensaryId == dispensaryId;
    }
    
    function isDispensaryStaff(dispensaryId) {
      return request.auth.token.role == 'DispensaryStaff' && request.auth.token.dispensaryId == dispensaryId;
    }

    function isOwnerOrStaff(dispensaryId) {
      return isDispensaryOwner(dispensaryId) || isDispensaryStaff(dispensaryId);
    }
    
    function isOwnerOrStaffOfResource() {
        return isOwnerOrStaff(resource.data.dispensaryId);
    }
    
    function isAuthenticated() {
      return request.auth != null;
    }

    function isSelf(userId) {
      return request.auth.uid == userId;
    }


    // Collection: users
    match /users/{userId} {
      // ANY authenticated user can create their own document (signup)
      allow create: if isAuthenticated() && isSelf(userId);
      
      // A user can read their own document.
      // Super Admins can read any user document.
      // A dispensary owner/staff can read documents of users linked to their dispensary.
      allow get: if isSelf(userId) || isSuperAdmin() || (isAuthenticated() && request.auth.token.dispensaryId == resource.data.dispensaryId);
      
      // A user can update their own document.
      // Super Admins can update any user document.
      // A dispensary owner can update users linked to their dispensary (e.g., staff).
      allow update: if isSelf(userId) || isSuperAdmin() || (isDispensaryOwner(resource.data.dispensaryId));
      
      // Only Super Admins can delete users.
      allow delete: if isSuperAdmin();

      // Super Admins and dispensary owners can list users within their scope.
      allow list: if isSuperAdmin() || (isAuthenticated() && request.auth.token.dispensaryId != null);
    }
    

    // Collection: dispensaries
    match /dispensaries/{dispensaryId} {
      // ANYONE can create a dispensary (application)
      allow create: if true;
      
      // ANYONE can read an 'Approved' dispensary profile
      allow get: if resource.data.status == 'Approved' || isSuperAdmin() || isOwnerOrStaff(dispensaryId);
      
      // Only Super Admins or the dispensary owner can update
      allow update: if isSuperAdmin() || isDispensaryOwner(dispensaryId);
      
      // Only Super Admins can delete
      allow delete: if isSuperAdmin();

      // ANYONE can list approved dispensaries
      allow list: if request.query.where.status == 'Approved' || isSuperAdmin();
    }
    

    // Collection: products
    match /products/{productId} {
      // An authenticated dispensary owner or staff can create a product.
      allow create: if isAuthenticated() && isOwnerOrStaff(request.resource.data.dispensaryId);

      // ANYONE can read a product.
      allow get: if true;
      
      // Only owner/staff of the product's dispensary can update/delete it.
      allow update, delete: if isAuthenticated() && isOwnerOrStaffOfResource();

      // ANYONE can list products (e.g., for public storefronts).
      // Dispensary admins can list their own products.
      allow list: if true;
    }

    // Collection: stickersets
    match /stickersets/{stickerSetId} {
        allow create: if isAuthenticated();
        allow get: if resource.data.isPublic == true || isSelf(resource.data.creatorUid) || isSuperAdmin();
        allow list: if request.query.where.isPublic == true || (isAuthenticated() && request.query.where.creatorUid == request.auth.uid) || isSuperAdmin();
        allow update: if isSelf(resource.data.creatorUid) || isSuperAdmin();
        allow delete: if isSelf(resource.data.creatorUid) || isSuperAdmin();
    }


    // All other collections are locked down by default but allow Super Admin full access.
    // This provides a secure default for collections like creditPackages, poolIssues, etc.
    match /{document=**} {
      allow read, write: if isSuperAdmin();
    }
    
     // Explicit rules for collections needing specific non-admin access
    match /dispensaryTypes/{typeId} {
      allow get, list: if true; // Publicly readable
      allow write: if isSuperAdmin();
    }
    
    match /dispensaryTypeProductCategories/{docId} {
        allow get, list: if true; // Publicly readable
        allow write: if isSuperAdmin();
    }

    match /creditPackages/{packageId} {
        allow get, list: if resource.data.isActive == true || isSuperAdmin();
        allow write: if isSuperAdmin();
    }
    
    match /productRequests/{requestId} {
        // A user can create a request if they belong to a dispensary
        allow create: if isAuthenticated() && request.auth.token.dispensaryId != null;

        // A user can read a request if they are the requester or the owner of the requested product
        allow get: if isAuthenticated() && (request.auth.token.dispensaryId == resource.data.requesterDispensaryId || request.auth.token.dispensaryId == resource.data.productOwnerDispensaryId);

        // A user can update a request (e.g., add notes, change status) if they are the requester or the owner
        allow update: if isAuthenticated() && (request.auth.token.dispensaryId == resource.data.requesterDispensaryId || request.auth.token.dispensaryId == resource.data.productOwnerDispensaryId);

        // A user can only cancel (delete) a request if they are the requester and it's pending
        allow delete: if isAuthenticated() && request.auth.token.dispensaryId == resource.data.requesterDispensaryId && resource.data.requestStatus == 'pending_owner_approval';
        
        // Users can list requests where they are either the requester or the product owner
        allow list: if isAuthenticated() && request.auth.token.dispensaryId != null;
    }
    
  }
}
