
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper Functions
    function isSuperAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }
    
    function isSignedIn() {
      return request.auth != null;
    }

    function isDispensaryOwner(dispensaryId) {
      return isSignedIn() 
             && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'DispensaryOwner'
             && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == dispensaryId;
    }

    function isOwnerOfDispensaryInRequest() {
      return isDispensaryOwner(request.resource.data.dispensaryId);
    }
    
    function isOwnerOfExistingDispensary() {
      return isDispensaryOwner(resource.data.dispensaryId);
    }

    function isOwnerOrStaffOfDispensary(dispensaryId) {
       let userRole = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
       let userDispensaryId = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId;
       return isSignedIn() 
              && (userRole == 'DispensaryOwner' || userRole == 'DispensaryStaff')
              && userDispensaryId == dispensaryId;
    }
    
    function isOwnerOrStaffOfDispensaryInRequest() {
      return isOwnerOrStaffOfDispensary(request.resource.data.dispensaryId);
    }
    
    function isOwnerOrStaffOfExistingDispensary() {
      return isOwnerOrStaffOfDispensary(resource.data.dispensaryId);
    }

    function isSelf(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Collection Rules
    
    // Dispensaries Collection
    match /dispensaries/{dispensaryId} {
      allow read: if isSuperAdmin() 
                   || resource.data.status == 'Approved'; // Public can read approved stores
      allow list: if isSuperAdmin() 
                   || true; // Public can list stores to browse
      
      allow create: if isSuperAdmin()
                     || request.resource.data.status == 'Pending Approval'; // Public signup
                     
      allow update: if isSuperAdmin() 
                     || isOwnerOfExistingDispensary();
                     
      allow delete: if isSuperAdmin();
    }
    
    // Users Collection
    match /users/{userId} {
      allow get: if isSuperAdmin() 
                  || isSelf(userId);
      allow list: if isSuperAdmin();
      
      allow create: if isSuperAdmin()
                     || isSelf(userId) // Public user signup
                     || isOwnerOrStaffOfDispensary(request.resource.data.dispensaryId); // Owner adding staff
                     
      allow update: if isSuperAdmin() 
                     || isSelf(userId)
                     || isOwnerOrStaffOfDispensary(resource.data.dispensaryId); // Owner managing staff

      allow delete: if isSuperAdmin();
    }
    
    // Products Collection
    match /products/{productId} {
      allow read, list: if isSuperAdmin() 
                         || get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved'; // Public can read products of approved stores
                         
      allow create: if isSuperAdmin() 
                     || isOwnerOrStaffOfDispensaryInRequest();
                     
      allow update: if isSuperAdmin() 
                     || isOwnerOrStaffOfExistingDispensary();
                     
      allow delete: if isSuperAdmin() 
                     || isOwnerOrStaffOfExistingDispensary();
    }
    
    // Generic collections with full admin access and restricted public/user access
    match /{collection}/{docId} {
       allow read, write: if isSuperAdmin();
    }

    // Specific rules for other collections
    
    match /dispensaryTypes/{typeId} {
      allow read, list: if true; // Public can read
    }

    match /creditPackages/{packageId} {
      allow read, list: if true; // Public can read
    }

    match /productRequests/{requestId} {
      allow read: if isSuperAdmin()
                   || isOwnerOrStaffOfDispensary(resource.data.productOwnerDispensaryId)
                   || (isOwnerOrStaffOfDispensary(resource.data.requesterDispensaryId) && request.auth.uid == resource.data.requesterUid); // placeholder for a more specific rule
      allow create, update: if isSuperAdmin()
                           || isOwnerOrStaffOfDispensary(request.resource.data.requesterDispensaryId)
                           || isOwnerOrStaffOfDispensary(resource.data.productOwnerDispensaryId);
      allow delete: if isSuperAdmin();
    }
    
    match /notifications/{notificationId} {
        allow read, update: if isSuperAdmin() || isSelf(resource.data.recipientUid);
        allow create, delete: if isSuperAdmin(); // Usually created by functions
    }
    
    match /aiInteractionsLog/{logId} {
        allow read, create: if isSuperAdmin() || isSelf(request.resource.data.userId); // Created by functions, read by self/admin
        allow update, delete: if isSuperAdmin();
    }

    match /poolIssues/{issueId} {
        allow read, create, update: if isSuperAdmin() || isSignedIn();
        allow delete: if isSuperAdmin();
    }

     match /stickersets/{setId} {
      allow read, list: if isSuperAdmin() || resource.data.isPublic == true;
      allow create: if isSignedIn();
      allow update, delete: if isSuperAdmin() || (isSignedIn() && resource.data.creatorUid == request.auth.uid);
    }
  }
}
