
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for Super Admin role from auth token
    function isSuperAdmin() {
      return request.auth != null && request.auth.token.role == 'Super Admin';
    }

    // Helper function to check for Dispensary Owner/Staff role from auth token
    function isDispensaryMember() {
      return request.auth != null && (request.auth.token.role == 'DispensaryOwner' || request.auth.token.role == 'DispensaryStaff');
    }
    
    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // ==================================================================
    //  USERS Collection
    // ==================================================================
    match /users/{userId} {
      // Super Admins can read/write any user document
      allow read, write: if isSuperAdmin();
      
      // Users can read and update their own document
      allow get, update: if isOwner(userId);
      
      // Dispensary owners can manage users linked to their dispensary
      allow list, get: if isDispensaryMember() && request.auth.token.dispensaryId == resource.data.dispensaryId;
      allow update(displayName, role, status, credits): if isDispensaryMember() && request.auth.token.dispensaryId == resource.data.dispensaryId;
    }

    // ==================================================================
    //  DISPENSARIES Collection
    // ==================================================================
    match /dispensaries/{dispensaryId} {
      // Anyone can read approved dispensaries
      allow get: if resource.data.status == 'Approved';
      // Authenticated users can list approved dispensaries
      allow list: if request.auth != null;
      
      // Super Admins can create, update, delete any dispensary
      allow write: if isSuperAdmin();
      
      // Dispensary owners can update their own dispensary profile
      allow update: if isDispensaryMember() && request.auth.token.dispensaryId == dispensaryId;
    }
    
    // ==================================================================
    //  DISPENSARY TYPES & CATEGORIES
    // ==================================================================
    match /dispensaryTypes/{typeId} {
      // Publicly readable
      allow get, list: if true;
      // Only Super Admins can change types
      allow write: if isSuperAdmin();
    }
    
    match /dispensaryTypeProductCategories/{docId} {
       // Publicly readable
      allow get, list: if true;
      // Only Super Admins can change categories
      allow write: if isSuperAdmin();
    }
    
    // ==================================================================
    //  PRODUCTS Collection (CRITICAL FIX)
    // ==================================================================
    match /products/{productId} {
      // Allow public read of any product
      allow get, list: if true;

      // Allow write (create, update, delete) only if the user's dispensaryId claim matches the product's dispensaryId
      allow write: if isDispensaryMember() && request.resource.data.dispensaryId == request.auth.token.dispensaryId;
    }
    
    // ==================================================================
    //  PRODUCT REQUESTS & POOL ISSUES
    // ==================================================================
    match /productRequests/{requestId} {
      // Only involved parties or Super Admins can read
      allow get: if isSuperAdmin() || (isDispensaryMember() && (request.auth.token.dispensaryId == resource.data.requesterDispensaryId || request.auth.token.dispensaryId == resource.data.productOwnerDispensaryId));
      
      // Only involved parties can create/update
      allow create, update: if isDispensaryMember() && (request.resource.data.requesterDispensaryId == request.auth.token.dispensaryId || request.resource.data.productOwnerDispensaryId == request.auth.token.dispensaryId);
      
      // Super Admins can do anything
      allow write: if isSuperAdmin();
    }
    
    match /poolIssues/{issueId} {
      // Super Admins have full access
      allow read, write: if isSuperAdmin();
    }
    
    // ==================================================================
    //  STICKER SETS
    // ==================================================================
    match /stickersets/{stickerId} {
        // Public can read sets marked as public
        allow get: if resource.data.isPublic == true;
        // Authenticated users can list public sets
        allow list: if request.auth != null && request.query.where.isPublic == true;

        // Any authenticated user can create a sticker set
        allow create: if request.auth != null && request.resource.data.creatorUid == request.auth.uid;
        
        // Only the creator or a Super Admin can update/delete
        allow update, delete: if isSuperAdmin() || isOwner(resource.data.creatorUid);
    }
    
    // ==================================================================
    //  CREDITS & LOGS
    // ==================================================================
    match /creditPackages/{packageId} {
      // Publicly readable if active
      allow get, list: if true;
      // Only super admins can change packages
      allow write: if isSuperAdmin();
    }
    
    match /aiInteractionsLog/{logId} {
      // Users can only read their own logs
      allow read: if isOwner(resource.data.userId);
      // Super Admins can read any log
      allow get, list: if isSuperAdmin();
    }
  }
}
