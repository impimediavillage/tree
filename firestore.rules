
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isSuperAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    function isDispensaryOwner(dispensaryId) {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'DispensaryOwner'
             && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == dispensaryId;
    }

    function isDispensaryStaff(dispensaryId) {
       return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'DispensaryStaff'
             && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == dispensaryId;
    }

    function isOwnerOrStaff(dispensaryId) {
      return isDispensaryOwner(dispensaryId) || isDispensaryStaff(dispensaryId);
    }

    function isLeafUser(userId) {
      return isSignedIn() && request.auth.uid == userId
             && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'LeafUser';
    }
    
    function isOwnerOfUserDoc(userId) {
        return isSignedIn() && request.auth.uid == userId;
    }
    
    function isApprovedDispensary(dispensaryId) {
      return get(/databases/$(database)/documents/dispensaries/$(dispensaryId)).data.status == 'Approved';
    }

    // Collection Rules
    
    // Dispensaries: Public can read approved, owners can manage their own, super admins can do anything.
    match /dispensaries/{dispensaryId} {
      allow read: if isSuperAdmin() || isApprovedDispensary(dispensaryId) || isOwnerOrStaff(dispensaryId);
      allow create: if isSuperAdmin() || isSignedIn(); // Anyone can apply
      allow update, delete: if isSuperAdmin() || isDispensaryOwner(dispensaryId);
    }
    
    // Products: Public can read from approved dispensaries. Owners/staff can manage their own.
    match /products/{productId} {
        allow read: if isSuperAdmin() || isApprovedDispensary(resource.data.dispensaryId) || isOwnerOrStaff(resource.data.dispensaryId);
        allow create, update, delete: if isSuperAdmin() || isOwnerOrStaff(request.resource.data.dispensaryId);
    }

    // Users: Users can manage their own doc. Super admins can manage all. Owners/staff can read users linked to their dispensary.
    match /users/{userId} {
      allow get: if isSuperAdmin() || isOwnerOfUserDoc(userId) || isOwnerOrStaff(resource.data.dispensaryId);
      allow list: if isSuperAdmin();
      allow create: if isSuperAdmin() || !isSignedIn(); // Public signup
      allow update: if isSuperAdmin() || isOwnerOfUserDoc(userId) || isDispensaryOwner(resource.data.dispensaryId);
      allow delete: if isSuperAdmin();
    }

    // Product Requests: Only involved parties can read/write.
    match /productRequests/{requestId} {
      allow read, write: if isSuperAdmin() || isOwnerOrStaff(resource.data.productOwnerDispensaryId) || isOwnerOrStaff(resource.data.requesterDispensaryId);
    }

    // Pool Issues: Only super admins can manage. Owners can create.
    match /poolIssues/{issueId} {
      allow read, update, delete: if isSuperAdmin();
      allow create: if isSuperAdmin() || isOwnerOrStaff(request.resource.data.reporterDispensaryId);
    }

    // Notifications: Only the recipient can read/update.
    match /notifications/{notificationId} {
       allow read, update: if isSuperAdmin() || (isSignedIn() && resource.data.recipientUid == request.auth.uid);
       allow create, delete: if isSuperAdmin(); // Functions create, admin can delete
    }

    // Credit Packages: Public read, admin write.
    match /creditPackages/{packageId} {
        allow read: if isSignedIn();
        allow create, update, delete: if isSuperAdmin();
    }
    
    // Dispensary Types & Categories: Public read, admin write.
    match /dispensaryTypes/{typeId} {
      allow read: true;
      allow create, update, delete: if isSuperAdmin();
    }
    match /dispensaryTypeProductCategories/{docId} {
      allow read: true;
      allow create, update, delete: if isSuperAdmin();
    }
    
    // Sticker Sets: Public read, owner/admin write.
    match /stickersets/{stickerId} {
        allow read: true;
        allow create: if isSignedIn();
        allow update: if isSuperAdmin() || (isSignedIn() && resource.data.creatorUid == request.auth.uid);
        allow delete: if isSuperAdmin() || (isSignedIn() && resource.data.creatorUid == request.auth.uid);
    }

    // Logs: Only super admins should have broad access. Functions will write.
    match /aiInteractionsLog/{logId} {
      allow read: if isSuperAdmin();
      allow create: if isSignedIn(); // Allow functions/client to write
      allow update, delete: if isSuperAdmin();
    }
    match /scrapeLogs/{logId} {
      allow read, write: if isSuperAdmin();
    }
    match /importsHistory/{historyId} {
      allow read, write: if isSuperAdmin();
    }
    
    // Seed data should be readable by all authenticated, only writable by admin
    match /my-seeded-collection/{strainId} {
        allow read: if isSignedIn();
        allow write: if isSuperAdmin();
    }
  }
}
