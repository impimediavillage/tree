rules_version = '2';

// Helper functions to reduce repetition
function isSuperAdmin() {
  return request.auth.token.role == 'Super Admin';
}

function isAuthenticated() {
  return request.auth != null;
}

function isOwner(userId) {
  return request.auth.uid == userId;
}

function isDispensaryOwner(dispensaryId) {
  return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == dispensaryId
         && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'DispensaryOwner';
}

function isDispensaryStaff(dispensaryId) {
  return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.dispensaryId == dispensaryId
         && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'DispensaryStaff';
}

service cloud.firestore {
  match /databases/{database}/documents {

    // Users Collection
    match /users/{userId} {
      // Allow user to read/write their own document.
      // Allow Super Admin to read/write any user document.
      // Allow Dispensary Owner to read users associated with their dispensary.
      allow read: if isSuperAdmin() || isOwner(userId) || isDispensaryOwner(resource.data.dispensaryId);
      allow write: if isSuperAdmin() || isOwner(userId);
      // Allow create for anyone (signup), but subsequent writes are restricted.
      allow create: if true;
    }

    // Dispensaries Collection
    match /dispensaries/{dispensaryId} {
      // Public can read approved dispensaries.
      // Authenticated users and admins can read any.
      allow get: if resource.data.status == 'Approved' || isAuthenticated();
      allow list: if isSuperAdmin(); // Only super admin can list all. Client queries should filter by status for public.
      
      // Only Super Admin can create or delete dispensaries.
      allow create, delete: if isSuperAdmin();
      // Only Super Admin or the assigned owner can update.
      allow update: if isSuperAdmin() || isDispensaryOwner(dispensaryId);
    }

    // Dispensary Types Collection (Publicly readable)
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      // Only Super Admin can modify types.
      allow write: if isSuperAdmin();
    }
    
    // Product Categories Collection (Publicly readable)
    match /dispensaryTypeProductCategories/{docId} {
      allow read: if true;
      // Only Super Admin can modify categories.
      allow write: if isSuperAdmin();
    }

    // Products Collection
    match /products/{productId} {
      // Public can read any product.
      allow get, list: if true;
      // Only the owning dispensary's owner/staff or Super Admin can create/update/delete.
      allow create, update, delete: if isSuperAdmin() || isDispensaryOwner(request.resource.data.dispensaryId) || isDispensaryStaff(request.resource.data.dispensaryId);
    }
    
    // Product Requests Collection
    match /productRequests/{requestId} {
      // Only involved parties or Super Admin can read.
      allow get: if isSuperAdmin() || (isAuthenticated() && (
        request.auth.uid == get(/databases/$(database)/documents/dispensaries/$(resource.data.productOwnerDispensaryId)).data.ownerId ||
        request.auth.uid == get(/databases/$(database)/documents/dispensaries/$(resource.data.requesterDispensaryId)).data.ownerId
      ));
      
      // Any authenticated user can create a request.
      allow create: if isAuthenticated();
      
      // Only involved parties or Super Admin can update.
      allow update: if isSuperAdmin() || (isAuthenticated() && (
        isDispensaryOwner(resource.data.productOwnerDispensaryId) ||
        isDispensaryOwner(resource.data.requesterDispensaryId)
      ));
      
      allow list, delete: if isSuperAdmin();
    }
    
    // Pool Issues Collection
    match /poolIssues/{issueId} {
      // Only Super Admin and involved parties can read/write.
      allow read, write: if isSuperAdmin() || (isAuthenticated() && (
          isDispensaryOwner(resource.data.reporterDispensaryId) || isDispensaryOwner(resource.data.reportedDispensaryId)
      ));
      allow create: if isAuthenticated();
    }
    
    // Notifications Collection
    match /notifications/{notificationId} {
      // Users can only read/write their own notifications.
      allow read, write: if isOwner(resource.data.recipientUid);
      // Backend/Admin can create notifications for anyone.
      allow create: if isSuperAdmin();
    }
    
    // AI Interaction Logs
    match /aiInteractionsLog/{logId} {
      // Users can read their own logs.
      allow read: if isAuthenticated() && request.auth.uid == resource.data.userId;
      // Creation is handled by backend functions. No direct client creation.
      allow create, update, delete: if false; 
    }
    
    // Credit Packages (Publicly readable)
    match /creditPackages/{packageId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    // Sticker Sets
    match /stickersets/{stickerId} {
        // Public can read sets marked as public.
        allow get: if resource.data.isPublic == true || isOwner(resource.data.creatorUid) || isSuperAdmin();
        allow list: if true; // Public can list sets, client will filter for isPublic=true.
        
        // Authenticated users can create sets.
        allow create: if isAuthenticated();
        // Only the creator or Super Admin can update/delete.
        allow update, delete: if isOwner(resource.data.creatorUid) || isSuperAdmin();
    }
    
    // Seeded data collection (for strain info)
    match /my-seeded-collection/{strainId} {
        allow read: if true;
        // Only allow update for authenticated users (for image URL updates)
        allow update: if isAuthenticated();
        // Creation and deletion managed by admin.
        allow create, delete: if isSuperAdmin();
    }
    
    // Scrape Logs & History
    match /scrapeLogs/{logId} {
        allow read, write: if isSuperAdmin();
    }
    match /importsHistory/{historyId} {
        allow read, write: if isSuperAdmin();
    }
    match /justbrand_catalog/{doc=**} {
        allow read, write: if isSuperAdmin();
    }
  }
}
