
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions to improve readability
    function isSignedIn() {
      return request.auth != null;
    }

    function isSuperAdmin() {
      return isSignedIn() && request.auth.token.role == 'Super Admin';
    }

    function isDispensaryOwner(dispensaryId) {
      return isSignedIn() && request.auth.token.role == 'DispensaryOwner' && request.auth.token.dispensaryId == dispensaryId;
    }
    
    function isOwnerOfDispensaryDoc(dispensaryDoc) {
      return isSignedIn() && request.auth.uid == dispensaryDoc.data.ownerId;
    }

    function isStaffOfDispensary(dispensaryId) {
       return isSignedIn() && request.auth.token.role == 'DispensaryStaff' && request.auth.token.dispensaryId == dispensaryId;
    }

    // Unsecured collection for testing or specific public data
    match /my-seeded-collection/{document=**} {
      allow read, write: if true;
    }
    
    match /justbrand_catalog/{document=**} {
      allow read, write: if true;
    }
    
    match /scrapeLogs/{document=**} {
        allow read, write: if true;
    }
    
    match /importsHistory/{document=**} {
        allow read, write: if true;
    }

    // Users can read their own profile, Super Admins can read/write all.
    match /users/{userId} {
      allow read: if isSignedIn() && (request.auth.uid == userId || isSuperAdmin());
      allow write: if isSignedIn() && (request.auth.uid == userId || isSuperAdmin());
    }

    // Dispensary Types can be read by any authenticated user for filtering/display.
    // Only Super Admins can create or modify them.
    match /dispensaryTypes/{typeId} {
      allow read: if isSignedIn();
      allow write: if isSuperAdmin();
    }
    
    // Product Categories can be read by any authenticated user.
    // Only Super Admins can create or modify them.
    match /dispensaryTypeProductCategories/{docId} {
        allow read: if isSignedIn();
        allow write: if isSuperAdmin();
    }

    // Dispensaries can be read by the public if 'Approved'.
    // Owners can read their own document regardless of status.
    // Super Admins can read/write all.
    match /dispensaries/{dispensaryId} {
      allow read: if resource.data.status == 'Approved' || isOwnerOfDispensaryDoc(resource) || isSuperAdmin();
      allow create: if isSignedIn(); // Anyone can apply
      allow update, delete: if isSuperAdmin() || isOwnerOfDispensaryDoc(get(/databases/$(database)/documents/dispensaries/$(dispensaryId)));
    }

    // Products can be read by public if from an 'Approved' dispensary.
    // Owners/Staff can manage products for their own dispensary.
    match /products/{productId} {
      allow read: if get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved';
      allow create: if isDispensaryOwner(request.resource.data.dispensaryId) || isStaffOfDispensary(request.resource.data.dispensaryId) || isSuperAdmin();
      allow update, delete: if isDispensaryOwner(resource.data.dispensaryId) || isStaffOfDispensary(resource.data.dispensaryId) || isSuperAdmin();
    }

    // Notifications are private to the recipient.
    match /notifications/{notificationId} {
      allow read, write: if isSignedIn() && request.auth.uid == resource.data.recipientUid;
      allow create: if isSignedIn(); // Can be created by functions
    }
    
    // Credit Packages are public to read for purchasing.
    match /creditPackages/{packageId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    // AI interaction logs are private to the user who made them.
    match /aiInteractionsLog/{logId} {
      allow read: if isSignedIn() && request.auth.uid == resource.data.userId;
      allow create: if isSignedIn();
    }
    
    // Sticker sets can be read by public if they are marked public
    match /stickersets/{setId} {
      allow read: if resource.data.isPublic == true;
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && request.auth.uid == resource.data.creatorUid;
    }

    // Product requests have complex rules based on requester and owner roles
    match /productRequests/{requestId} {
      allow read, update: if isSignedIn() && (request.auth.uid == get(/databases/$(database)/documents/dispensaries/$(resource.data.productOwnerDispensaryId)).data.ownerId || request.auth.uid == get(/databases/$(database)/documents/dispensaries/$(resource.data.requesterDispensaryId)).data.ownerId || isSuperAdmin());
      allow create: if isDispensaryOwner(request.resource.data.requesterDispensaryId) || isStaffOfDispensary(request.resource.data.requesterDispensaryId);
    }
    
    // Pool issues can be created by store owners/staff and managed by admins.
    match /poolIssues/{issueId} {
        allow read: if isDispensaryOwner(resource.data.reporterDispensaryId) || isDispensaryOwner(resource.data.reportedDispensaryId) || isSuperAdmin();
        allow create: if isSignedIn(); // Created by owners
        allow update: if isSuperAdmin();
    }
  }
}
