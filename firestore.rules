rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isSuperAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super Admin';
    }

    function isOwner(dispensaryId) {
      return request.auth.uid == get(/databases/$(database)/documents/dispensaries/$(dispensaryId)).data.ownerId;
    }

    function isStaff(dispensaryId) {
        let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
        return userDoc.role == 'DispensaryStaff' && userDoc.dispensaryId == dispensaryId;
    }
    
    function isOwnerOrStaff(dispensaryId) {
        return isOwner(dispensaryId) || isStaff(dispensaryId);
    }
    
    function isDispensaryApproved(dispensaryId) {
        return get(/databases/$(database)/documents/dispensaries/$(dispensaryId)).data.status == 'Approved';
    }

    // Collection rules
    
    // Anyone can read dispensary types and their categories. Only admins can modify.
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    match /dispensaryTypeProductCategories/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    // Anyone can submit a dispensary application. Only Super Admins can manage them.
    match /dispensaries/{dispensaryId} {
      allow read: if true;
      allow create: if isSignedIn(); // Anyone logged in can apply
      allow update, delete: if isSuperAdmin();
    }
    
    // Users can be managed by Super Admins. Dispensary owners can manage their staff. Users can read/update their own profile.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create, delete: if isSuperAdmin();
      allow list: if isSuperAdmin();

      // Dispensary owner can see users linked to their dispensary
      allow get: if isSuperAdmin() || (isSignedIn() && resource.data.dispensaryId != null && isOwnerOrStaff(resource.data.dispensaryId));
    }
    
    // Products can be created/managed by approved dispensary owners/staff. Anyone can read.
    match /products/{productId} {
        allow read: if true;
        allow create: if isSignedIn() && isOwnerOrStaff(request.resource.data.dispensaryId) && isDispensaryApproved(request.resource.data.dispensaryId);
        allow update, delete: if isSignedIn() && isOwnerOrStaff(resource.data.dispensaryId);
    }
    
    // Product requests can be managed by the involved parties.
    match /productRequests/{requestId} {
        allow read, update: if isSignedIn() && 
                             (request.auth.uid == resource.data.requesterUid || isOwnerOrStaff(resource.data.productOwnerDispensaryId));
        allow create: if isSignedIn();
    }
    
    // Pool issues can be read/managed by Super Admins.
    match /poolIssues/{issueId} {
        allow read, update, delete: if isSuperAdmin();
        allow create: if isSignedIn();
    }

    // Notifications are private to the recipient.
    match /notifications/{notificationId} {
      allow read, update, delete: if isSignedIn() && request.auth.uid == resource.data.recipientUid;
      allow create: if true; // Functions create notifications
    }
    
    // AI interaction logs can be created by any signed-in user. Read access might be restricted.
    match /aiInteractionsLog/{logId} {
        allow create: if isSignedIn();
        allow read: if isSignedIn() && request.auth.uid == resource.data.userId; // User can read their own logs
    }
    
    // Credit packages can be read by anyone, managed by Super Admins.
    match /creditPackages/{packageId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    // Seed data collections
    match /my-seeded-collection/{strainId} {
        allow read: if true;
        allow update: if isSignedIn(); // Allow authenticated users to update image urls
        allow write: if isSuperAdmin(); // Only admin can add/delete
    }

    match /justbrand_catalog/{categoryId} {
        allow read: if true;
        allow write: if isSuperAdmin();
        
        match /products/{productId} {
            allow read: if true;
            allow write: if isSuperAdmin();
        }
    }
    
    // Scrape Logs for admins
    match /scrapeLogs/{logId} {
      allow read, write: if isSuperAdmin();
    }
     match /importsHistory/{logId} {
      allow read, write: if isSuperAdmin();
    }
  }
}
