rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions for auth checks
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }
    
    function isDispensaryOwner() {
      return request.auth.token.role == 'DispensaryOwner';
    }

    function isOwnerOfDispensary(dispensaryId) {
      return isDispensaryOwner() && request.auth.token.dispensaryId == dispensaryId;
    }

    function isOwnerOfDispensaryDoc(dispensaryDoc) {
      return isDispensaryOwner() && request.auth.token.dispensaryId == dispensaryDoc.id;
    }
    
    function isSignedIn() {
      return request.auth != null;
    }

    // Collection: users
    match /users/{userId} {
      // Super Admins can manage any user.
      // Users can read and write their own document.
      allow read, write: if isSuperAdmin() || request.auth.uid == userId;
      // Allow dispensary owners to read/update staff/leaf users linked to their dispensary
      allow read, update: if isOwnerOfDispensary(resource.data.dispensaryId);
      // Allow all authenticated users to list users (for admin/dispensary panels)
      allow list: if isSignedIn();
    }
    
    // Collection: dispensaries
    match /dispensaries/{dispensaryId} {
      // Anyone can read an approved dispensary profile.
      allow get: if resource.data.status == 'Approved';
      // Authenticated users can list approved dispensaries (for browsing).
      allow list: if isSignedIn() && resource.data.status == 'Approved';
      // Super Admins have full access.
      allow read, write, create, delete: if isSuperAdmin();
      // Owners can read/update their own dispensary.
      allow read, update: if isOwnerOfDispensary(dispensaryId);
      // Allow unauthenticated users to create a dispensary application.
      allow create: if !isSignedIn();
    }
    
    // Collection: products
    match /products/{productId} {
      // Anyone can read a product from an approved dispensary.
      allow get: if get(/databases/$(database)/documents/dispensaries/$(resource.data.dispensaryId)).data.status == 'Approved';
      // Authenticated users can list products from approved dispensaries.
      allow list: if isSignedIn();
      // Super Admins have full access.
      allow read, write, create, delete: if isSuperAdmin();
      // Owners can manage products for their own dispensary.
      allow read, write, create, delete, list: if isOwnerOfDispensary(resource.data.dispensaryId);
    }
    
    // Collection: dispensaryTypes
    match /dispensaryTypes/{typeId} {
      // Anyone can read and list dispensary types.
      allow read, list: if true;
      // Only Super Admins can create, update, or delete types.
      allow write: if isSuperAdmin();
    }

    // Collection: dispensaryTypeProductCategories
    match /dispensaryTypeProductCategories/{docId} {
      // Dispensary owners need to read this to build their product forms.
      allow read, list: if isSignedIn();
      // Only Super Admins can write to it.
      allow write: if isSuperAdmin();
    }
    
    // Collection: creditPackages
    match /creditPackages/{packageId} {
      // Any authenticated user can see active packages.
      allow read, list: if isSignedIn() && resource.data.isActive == true;
      // Only Super Admins can manage packages.
      allow write: if isSuperAdmin();
      allow read, list: if isSuperAdmin(); // Super admin can see all packages
    }
    
    // Collection: productRequests
    match /productRequests/{requestId} {
      // Only involved parties or Super Admins can access.
      allow read, update: if isSuperAdmin() || 
                           isOwnerOfDispensary(resource.data.requesterDispensaryId) ||
                           isOwnerOfDispensary(resource.data.productOwnerDispensaryId);
      allow create: if isOwnerOfDispensary(request.resource.data.requesterDispensaryId);
    }
    
    // Collection: poolIssues
    match /poolIssues/{issueId} {
      // Only Super Admins or involved parties can read.
      allow read: if isSuperAdmin() || 
                    isOwnerOfDispensary(resource.data.reporterDispensaryId) ||
                    isOwnerOfDispensary(resource.data.reportedDispensaryId);
      allow create: if isDispensaryOwner();
      allow write: if isSuperAdmin();
    }

    // Collection: notifications
    match /notifications/{notificationId} {
      // Users can only access their own notifications.
      allow read, write: if isSuperAdmin() || request.auth.uid == resource.data.recipientUid;
    }
    
    // Collection: aiInteractionsLog
    match /aiInteractionsLog/{logId} {
        // Users can read their own logs.
        allow read: if request.auth.uid == resource.data.userId;
        // Owners can read logs associated with their dispensary.
        allow read: if isOwnerOfDispensary(resource.data.dispensaryId);
        // Only backend can create. No client creates.
        allow create: if false; 
    }

    // Collection: stickersets
    match /stickersets/{stickerId} {
      // Anyone can read public sticker sets.
      allow read, list: if resource.data.isPublic == true;
      // The creator or a super admin can manage the set.
      allow read, write, delete: if isSuperAdmin() || request.auth.uid == resource.data.creatorUid;
      // Any authenticated user can create a set.
      allow create: if isSignedIn();
    }
    
    // Collection: my-seeded-collection (for strain data)
    match /my-seeded-collection/{strainId} {
      // Any authenticated user can read strain data.
      allow read, list: if isSignedIn();
    }

    // Collection: scrapeLogs & importsHistory (Admin only)
    match /{logCollection}/{logId} {
      allow read, write: if logCollection in ['scrapeLogs', 'importsHistory'] && isSuperAdmin();
    }
  }
}