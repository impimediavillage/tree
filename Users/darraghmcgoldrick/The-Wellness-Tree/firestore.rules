
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is a Super Admin
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }

    // Helper function to check if a user is a Dispensary Owner or Staff
    function isDispensaryTeam(dispensaryId) {
      return request.auth.token.dispensaryId == dispensaryId && 
             (request.auth.token.role == 'DispensaryOwner' || request.auth.token.role == 'DispensaryStaff');
    }
    
    // Helper function to check if a user is a specific Dispensary Owner
    function isDispensaryOwner(dispensaryId) {
      return request.auth.token.dispensaryId == dispensaryId && 
             request.auth.token.role == 'DispensaryOwner';
    }

    // users:
    // 1. Users can read/write their own document.
    // 2. Super Admins can read/write any user document.
    // 3. Dispensary owners can read basic info of users linked to their dispensary.
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isSuperAdmin() || resource.data.dispensaryId == request.auth.token.dispensaryId;
      allow write: if request.auth.uid == userId || isSuperAdmin();
    }

    // dispensaries:
    // 1. Anyone can read approved dispensaries.
    // 2. Dispensary owners can update their own dispensary.
    // 3. Super Admins can create/read/update/delete any dispensary.
    match /dispensaries/{dispensaryId} {
      allow read: if resource.data.status == 'Approved' || isDispensaryTeam(dispensaryId) || isSuperAdmin();
      allow create: if isSuperAdmin();
      allow update: if isDispensaryOwner(dispensaryId) || isSuperAdmin();
      allow delete: if isSuperAdmin();
    }
    
    // dispensaryTypes & dispensaryTypeProductCategories:
    // 1. Anyone can read them (for UI display).
    // 2. Only Super Admins can create/update/delete.
    match /dispensaryTypes/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    match /dispensaryTypeProductCategories/{typeId} {
       allow read: if true;
       allow write: if isSuperAdmin();
    }

    // products:
    // 1. Anyone can read products.
    // 2. Only staff/owner of the dispensary can create/update/delete products for their dispensary.
    match /products/{productId} {
      allow read: if true;
      allow create, update, delete: if isDispensaryTeam(request.resource.data.dispensaryId);
    }
    
    // stickersets:
    // 1. Anyone can read public sticker sets.
    // 2. Users can create/update/delete their own sticker sets.
    match /stickersets/{stickerId} {
        allow read: if resource.data.isPublic == true;
        allow create: if request.auth.uid != null;
        allow update, delete: if request.auth.uid == resource.data.creatorUid;
    }
    
    // aiInteractionsLog:
    // 1. Users can create logs for themselves.
    // 2. Users can read their own logs.
    // 3. Super Admins can read all logs.
    match /aiInteractionsLog/{logId} {
        allow create: if request.auth.uid == request.resource.data.userId;
        allow read: if request.auth.uid == resource.data.userId || isSuperAdmin();
    }
    
    // creditPackages:
    // 1. Anyone can read active credit packages.
    // 2. Only Super Admins can write.
    match /creditPackages/{packageId} {
        allow read: if resource.data.isActive == true;
        allow write: if isSuperAdmin();
    }

    // productRequests & poolIssues:
    // Secure based on requester/owner IDs.
    match /productRequests/{requestId} {
      allow read, update: if isDispensaryTeam(resource.data.requesterDispensaryId) || isDispensaryTeam(resource.data.productOwnerDispensaryId) || isSuperAdmin();
      allow create: if isDispensaryTeam(request.resource.data.requesterDispensaryId);
    }
    
    match /poolIssues/{issueId} {
      allow read, create, update: if isDispensaryTeam(request.resource.data.reporterDispensaryId) || isDispensaryTeam(request.resource.data.reportedDispensaryId) || isSuperAdmin();
    }

    // Fallback for any other path
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
