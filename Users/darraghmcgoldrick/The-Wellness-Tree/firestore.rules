
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is an admin
    function isSuperAdmin() {
      return request.auth.token.role == 'Super Admin';
    }
    
    // Helper function to check if a user is the owner of a resource
    function isOwner(resource) {
      return request.auth.uid == resource.data.uid;
    }
    
    // Helper function to check if a user is a staff member of a specific dispensary
    function isStaffOf(dispensaryId) {
      return request.auth.token.dispensaryId == dispensaryId && 
             (request.auth.token.role == 'DispensaryOwner' || request.auth.token.role == 'DispensaryStaff');
    }

    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // Users Collection
    match /users/{userId} {
      // Anyone can create their own user document (on signup)
      allow create: if isOwner(request.resource);
      
      // Users can read their own profile. Admins can read any profile.
      allow read: if isOwner(resource) || isSuperAdmin();
      
      // Users can update their own profile. Admins can update any profile.
      // Dispensary owners can update staff/leaf users linked to their dispensary.
      allow update: if isOwner(resource) || isSuperAdmin() || isStaffOf(resource.data.dispensaryId);
      
      // Only super admins can delete users
      allow delete: if isSuperAdmin();
    }

    // Dispensaries Collection
    match /dispensaries/{dispensaryId} {
      // Anyone can create a dispensary application
      allow create: if true;
      
      // Anyone can read an approved dispensary's profile
      allow read: if resource.data.status == 'Approved' || isSuperAdmin() || isStaffOf(dispensaryId);
      
      // Only owners/staff of that dispensary or super admins can update it
      allow update: if isStaffOf(dispensaryId) || isSuperAdmin();
      
      // Only super admins can delete dispensaries
      allow delete: if isSuperAdmin();
    }

    // Products Collection
    match /products/{productId} {
      // Authenticated users can read products from approved dispensaries
      allow read: if request.auth != null;
      
      // Only staff of the dispensary that owns the product can create/update/delete it
      allow create, update: if isStaffOf(request.resource.data.dispensaryId);
      allow delete: if isStaffOf(resource.data.dispensaryId);
    }
    
    // Dispensary Types Collection
    match /dispensaryTypes/{typeId} {
        // Anyone can read the types
        allow read: if true;
        // Only super admins can create, update, or delete them
        allow create, update, delete: if isSuperAdmin();
    }

    // dispensaryTypeProductCategories Collection
    match /dispensaryTypeProductCategories/{docId} {
        allow read: if true;
        allow create, update, delete: if isSuperAdmin();
    }

    // Product Requests Collection
    match /productRequests/{requestId} {
      // Participants in the request can read it, as well as super admins
      allow read: if isStaffOf(resource.data.requesterDispensaryId) || isStaffOf(resource.data.productOwnerDispensaryId) || isSuperAdmin();
      
      // The requester can create a request
      allow create: if isStaffOf(request.resource.data.requesterDispensaryId);
      
      // Both parties and admins can update (e.g., status, notes)
      allow update: if isStaffOf(resource.data.requesterDispensaryId) || isStaffOf(resource.data.productOwnerDispensaryId) || isSuperAdmin();
      
      // Only admins can delete (for record keeping, usually just cancel)
      allow delete: if isSuperAdmin();
    }
    
    // Pool Issues Collection
    match /poolIssues/{issueId} {
      // Only admins and involved parties can see issues
      allow read: if isSuperAdmin() || isStaffOf(resource.data.reporterDispensaryId) || isStaffOf(resource.data.reportedDispensaryId);
      // Involved parties can create issues
      allow create: if isStaffOf(request.resource.data.reporterDispensaryId);
      // Only admins can update/delete
      allow update, delete: if isSuperAdmin();
    }

    // Credit Packages Collection
    match /creditPackages/{packageId} {
      // Anyone can read active packages
      allow read: if true;
      // Only admins can manage packages
      allow create, update, delete: if isSuperAdmin();
    }
    
    // AI Interaction Logs
    match /aiInteractionsLog/{logId} {
      // Users can read their own logs. Admins can read all.
      allow read: if isOwner(resource) || isSuperAdmin();
      // Users can create their own log entries.
      allow create: if isOwner(request.resource);
      // Logs are immutable
      allow update, delete: if false;
    }

    // Sticker Sets Collection
    match /stickersets/{setId} {
      allow read: if resource.data.isPublic == true || isOwner(resource);
      allow create: if isOwner(request.resource);
      allow update: if isOwner(resource);
      allow delete: if isOwner(resource) || isSuperAdmin();
    }
    
    // Imports History (for scraper logs)
    match /importsHistory/{logId} {
      // Only admins can read/write logs
      allow read, write: if isSuperAdmin();
    }
  }
}

    